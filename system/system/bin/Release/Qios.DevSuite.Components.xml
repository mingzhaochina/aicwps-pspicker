<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Qios.DevSuite.Components</name>
  </assembly>
  <members>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItem">
      <summary>
            Defines a system item on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" /> like the customize or showmore item.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItem">
      <summary>
            Defines an item in a <see cref="T:Qios.DevSuite.Components.QComposite" /> that can have all kinds of child items and can have hot and press states.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemBase">
      <summary>
            Defines a base class for all items that can be added to a QComposite.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPart">
      <summary>
            IQPart defines the interface used by objects that can be layed out.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPart.SetLayoutOrder(System.Int32)">
      <summary>
            Sets the layout order.
            </summary>
      <param name="layoutOrder">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPart.SetParent(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartCollection,System.Boolean,System.Boolean)">
      <summary>
            Sets the parentPart.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPart.SetDisplayParent(Qios.DevSuite.Components.IQManagedLayoutParent)">
      <summary>
            Sets the display parent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPart.PushCalculatedProperties">
      <summary>
            Should push the calculated properties so that we can calculate on a blanc sheet.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPart.PullCalculatedProperties">
      <summary>
            Should pull the calculated properties pushed with PushCalculatedProperties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPart.IsVisible(Qios.DevSuite.Components.QPartVisibilitySelectionTypes)">
      <summary>
            Gets whether the part is visible based on the visibility type and additional properties
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPart.HitTest(System.Int32,System.Int32)">
      <summary>
            Should return what location of the part is hitted.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPart.GetObjectPainter(Qios.DevSuite.Components.QPartPaintLayer,System.Type)">
      <summary>
            Gets the painter to paint in the specified layer.
            if a type is specified, it must return the painter of that type. Otherwise it must return the first painter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPart.FitsInSelection(Qios.DevSuite.Components.QPartSelectionTypes[])">
      <summary>
            Returns whether the QPart fits in the specified selection. If multiple selections are given, they are combined as if it was AND.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.PartName">
      <summary>
            Gets the name of the part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.ContentObject">
      <summary>
            Gets the ContentObject. This determines the content size. Normally this is a Image, String, Icon, Rectangle, Size or an IQPartCollection
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.Parts">
      <summary>
            This should return the ContentObject casted as an QPartCollection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.LayoutOrder">
      <summary>
            Gets the layout order.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.ParentPart">
      <summary>
            Gets the parent IQPart
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.ParentCollection">
      <summary>
            Gets the collection the part is currently located in.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.DisplayParent">
      <summary>
            Gets or sets the object that is responsible for displaying the part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.IsSystemPart">
      <summary>
            Gets whether this part is a system part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.LayoutEngine">
      <summary>
            Gets the layout engine that is responsible for laying-out this part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.PaintEngine">
      <summary>
            Gets the paint engine that is responsible for painting parts;
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.LayoutListener">
      <summary>
            Gets a possible listener that listens to the layout of the part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.PaintListener">
      <summary>
            Gets a possible listener that listens to the paint of the part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.Properties">
      <summary>
            Gets the properties of the QPart.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.CalculatedProperties">
      <summary>
            Gets the CalculatedProperties of the QPart.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPart.ContentClipRegion">
      <summary>
            Gets (when the content is clipped) the region that is clipped for the content.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQMouseHandler">
      <summary>
            Defines an interface for objects that handle mouse events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQMouseHandler.HandleMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Should handle a mouse move.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQMouseHandler.HandleMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Should handle a mouse down.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQMouseHandler.HandleMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Should handle a mouse up.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPartLayoutListener">
      <summary>
            Defines the interface used by objects that listen to layout events on a <see cref="T:Qios.DevSuite.Components.IQPart" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartLayoutListener.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Is called on various stages while laying out an IQPart
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPartPaintListener">
      <summary>
            Defines the interface used by objects that listen to paint events on a <see cref="T:Qios.DevSuite.Components.IQPart" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartPaintListener.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Is called on various stages while painting out an IQPart
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQItemColorHost">
      <summary>
            Defines the interface that can give sub objects like their colors for a specific state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQItemColorHost.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Gets the ColorSet for the specified object in the specified state.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQColorRetriever">
      <summary>
            Defines the interface that use implemented by objects that can retrieve a color from a <see cref="T:Qios.DevSuite.Components.QColorScheme" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQColorRetriever.RetrieveFirstDefinedColor(System.String)">
      <summary>
            Gets the first defined color with the specified color name.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQCompositeItemEventPublisher">
      <summary>
            Defines an interface for objects that publishes the regular QCompositeItem events. Implementors of this interface are objects like
            <see cref="T:Qios.DevSuite.Components.QCompositeControl" />, <see cref="T:Qios.DevSuite.Components.QCompositeItemBase" />, <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />, etc. It gives you an easy way to attach
            handlers to a specific event publiser
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.IQCompositeItemEventPublisher.PaintItem">
      <summary>
            Is raised when an item (or composite) is painted in a specific stage.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.IQCompositeItemEventPublisher.ItemActivating">
      <summary>
            Is raised when an item is about to activate.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.IQCompositeItemEventPublisher.ItemActivated">
      <summary>
            Is raises when the item is activated. This is usually the default event for regular action implementation.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.IQCompositeItemEventPublisher.ItemSelected">
      <summary>
            Is raised when an item is selected with keyboard or mouse.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.IQCompositeItemEventPublisher.ItemExpanding">
      <summary>
            Is raised when an item is expanding. 
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.IQCompositeItemEventPublisher.ItemExpanded">
      <summary>
            Is raised when an item is expanded.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.IQCompositeItemEventPublisher.ItemCollapsing">
      <summary>
            Is raised when an item is collapsing.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.IQCompositeItemEventPublisher.ItemCollapsed">
      <summary>
            Is raised when an item is collapsed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQItemStatesImplementation">
      <summary>
            Defines the interface for objects that implements the usage of <see cref="T:Qios.DevSuite.Components.QItemStates" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQItemStatesImplementation.GetState(Qios.DevSuite.Components.QItemStates,System.Boolean)">
      <summary>
            Gets the state of the current item. if includeParentStates is true, it iterates up to the parents
            to check their state if the item's state is undefined 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQItemStatesImplementation.HasStatesDefined(Qios.DevSuite.Components.QItemStates,Qios.DevSuite.Components.QTristateBool)">
      <summary>
            Gets which state of the checkForStates has a definition that equals stateValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQItemStatesImplementation.HasStatesDefined(Qios.DevSuite.Components.QItemStates)">
      <summary>
            Gets whether the item has an active definination for the specified state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQItemStatesImplementation.AdjustState(Qios.DevSuite.Components.QItemStates,System.Boolean,System.Object)">
      <summary>
            Adjusts the state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQItemStatesImplementation.ItemState">
      <summary>
            Gets the current item state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.#ctor">
      <summary>
            Constructor. Creates a QCompositeItem with all.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.#ctor(Qios.DevSuite.Components.QCompositeItemCreationOptions)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.BeginCodeDeserialization">
      <summary>
            Is called by the code serializer before it is starting to set the properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.EndCodeDeserialization">
      <summary>
            Is called by the code serializer after it has set the properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.Finalize">
      <summary>
            Destructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.GetState(Qios.DevSuite.Components.QItemStates,System.Boolean)">
      <summary>
            Gets the state of the current item. if includeParentStates is true, it iterates up to the parents
            to check their state if the item's state is undefined 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HasStatesDefined(Qios.DevSuite.Components.QItemStates,Qios.DevSuite.Components.QTristateBool)">
      <summary>
            Gets which state of the checkForStates has a definition that equals stateValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HasStatesDefined(Qios.DevSuite.Components.QItemStates)">
      <summary>
            Gets whether this item has a definition for the specified state(s). The default implementation
            calls HasStatesDefined with QTristateBool.True, and returns true if all the states are defined.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.SetVisible(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Sets the visible property.
            </summary>
      <param name="value">The new visibility value</param>
      <param name="notiyChilds">Indicates whether the childs must be notified if the visibility changes</param>
      <param name="notiyChange">Indicates whether the change must result in a layout</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.IsAccessible(Qios.DevSuite.Components.QPartVisibilitySelectionTypes)">
      <summary>
            Determines if the item is accessible for activation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.ShouldSerializeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QCompositeItemBase.ColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.ResetColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QCompositeItemBase.ColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.ShouldSerializeConfiguration">
      <summary>
            Returns whether the property should be serialized to code.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.ResetConfiguration">
      <summary>
            Resets the property to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.Activate(Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Expand the item if it has child items. Otherwise it activates the item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.Activate(Qios.DevSuite.Components.QCompositeItemActivationOptions,Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Actives the item with the specified options.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.ScrollIntoView">
      <summary>
            Scrolls this item into the view when required.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.ScrollIntoView(Qios.DevSuite.Components.QTristateBool)">
      <summary>
            Scrolls this item into the view when required.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.SetObjectPainter(Qios.DevSuite.Components.QPartPaintLayer,Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Sets the object to paint for the specified layer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.PutContentClipRegion(System.Drawing.Region)">
      <summary>
            Sets a possible content clip region.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.IsVisible(Qios.DevSuite.Components.QPartVisibilitySelectionTypes)">
      <summary>
            IQPart implementation. Gets whether the part is visible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.PointToClient(System.Drawing.Point)">
      <summary>
            Converts a point in screen coordinates to a client coordinate
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.PointToScreen(System.Drawing.Point)">
      <summary>
            Converts a point in client coordinates to a screen  coordinate
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.RemoveCloneLink">
      <summary>
            Removes the link to and from the LastClonedItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.MoveUnclonablesToClone">
      <summary>
            If an item contains an unclonable object, for example a Control, this method moves that
            object to the <see cref="P:Qios.DevSuite.Components.QCompositeItemBase.LastClonedItem" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.RestoreUnclonablesFromClone">
      <summary>
            Restores unclonable objects from the <see cref="P:Qios.DevSuite.Components.QCompositeItemBase.LastClonedItem" /> that were moved with <see cref="M:Qios.DevSuite.Components.QCompositeItemBase.MoveUnclonablesToClone" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.RectangleToClient(System.Drawing.Rectangle)">
      <summary>
            Converts a rectangle in screen coordinates to client rectangle
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.RectangleToScreen(System.Drawing.Rectangle)">
      <summary>
            Converts a rectangle in client coordinates to screen coordinates
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.Clone">
      <summary>
            Clones the object
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.Dispose">
      <summary>
            Disposes the group configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HandleAncestorVisibilityChanged">
      <summary>
            Is called when an ancestor is set visible / invisible. Default implementation does nothing.
            This method is not called if the visibility is changed via the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HandleAncestorEnabledChanged">
      <summary>
            Is called when an ancestor is set enabled / disabled. Default implementation does nothing.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HandleScrollingStage(Qios.DevSuite.Components.IQScrollablePart,Qios.DevSuite.Components.QScrollablePartScrollStage)">
      <summary>
            Is called when an ancestor has started scrolling, is scrolling one step or has ended scrolling.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.MatchesHotkeySequence(System.Windows.Forms.Keys[],System.Boolean)">
      <summary>
            Does nothing on the base item. Gets whether this item matches the specified hotkey sequence.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.MatchesShortcut(System.Windows.Forms.Keys)">
      <summary>
            Does nothing on the base item. Gets whether this item matches the specified shortcut.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.MatchesNavigationFilter(Qios.DevSuite.Components.QCompositeNavigationFilter)">
      <summary>
            Gets whether this item matches the specified hotkey sequence.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.AdjustState(Qios.DevSuite.Components.QItemStates,System.Boolean,Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Adjusts the state 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HandleMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles additional mouse movement
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HandleMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles additional mouse down.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HandleMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles additional mouse up.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.SetParent(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartCollection,System.Boolean,System.Boolean)">
      <summary>
            Sets the parent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.SetDisplayParent(Qios.DevSuite.Components.IQManagedLayoutParent)">
      <summary>
            Sets the display parent
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.ClearCachedParents">
      <summary>
            Clears the cached parents
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeItemBase and returns the array with painters.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.Dispose(System.Boolean)">
      <summary>
            Disposes the group configuration
            </summary>
      <param name="disposing">Disposing</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.OnPaintItem(Qios.DevSuite.Components.QCompositePaintStageEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeItemBase.PaintItem" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.OnItemActivating(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeItemBase.ItemActivating" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.OnItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeItemBase.ItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.OnItemSelected(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeItemBase.ItemSelected" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.OnItemExpanded(Qios.DevSuite.Components.QCompositeExpandedEventArgs)">
      <summary>
            Raises the ItemExpanded event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.OnItemExpanding(Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs)">
      <summary>
            Raises the ItemExpanding event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.OnItemCollapsed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the ItemCollapsed event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.OnItemCollapsing(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the ItemCollapsing event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.PutLastDrawnGraphicsPath(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
            Puts the lastDrawnShape path.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.SuspendChangeNotification">
      <summary>
            Suspends any change notification. Now no redraw or layout will occur. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.ResumeChangeNotification(System.Boolean)">
      <summary>
            Resumes any layout notification suspended by <see cref="M:Qios.DevSuite.Components.QCompositeItemBase.SuspendChangeNotification" />. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HandleChange(System.Boolean)">
      <summary>
            Handles the change of the QCompositeItemBase
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.SetLayoutOrder(System.Int32,System.Boolean)">
      <summary>
            Sets the layoutOrder, if notifyChange is true, it performs a layout.
            </summary>
      <remarks>
            If a LayoutOrderString is used in the configuration, this is adapted by that string.
            When you want to specify the LayoutOrder yourself or want to add items, set that string to String.Empty (not null).
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.GetObjectPainter(Qios.DevSuite.Components.QPartPaintLayer,System.Type)">
      <summary>
            IQPart implementation. Returns the object to paint on the specified layer.
            If painterType is specified it returns the first painter of that type. Otherwise it returns the first painter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.FitsInSelection(Qios.DevSuite.Components.QPartSelectionTypes[])">
      <summary>
            IQPart Implementation. Gets whether this part fits the selection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HitTest(System.Int32,System.Int32)">
      <summary>
            IQPart implementation. Returns what location of the part was hit.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Handles a paint stage, returns the used colorset
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.GetDefaultCompositeItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,Qios.DevSuite.Components.QComposite,Qios.DevSuite.Components.IQColorRetriever)">
      <summary>
            Gets the default color set for this type of item based on the state for from the specified retriever.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Gets the colorSet for the specified item in the specified state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemBase.RetrieveFirstDefinedColor(System.String)">
      <summary>
            This method looks for the first defined color with the specified name in a colorscheme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.IsDeserializingFromCode">
      <summary>
            Gets whether this or its ancestor is deserializing from code.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeItemBase.Disposed">
      <summary>
            Gets raised when the QCompositeItem gets disposed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeItemBase.PaintItem">
      <summary>
            Gets raised when a layer of the QCompositeItem is painted
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeItemBase.ItemActivating">
      <summary>
            Gets raised when the QCompositeItemBase is activating
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeItemBase.ItemActivated">
      <summary>
            Gets raised when the QCompositeItemBase is activated
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeItemBase.ItemSelected">
      <summary>
            Gets raised when the QCompositeItemBase is selected
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeItemBase.ItemExpanded">
      <summary>
            Gets raised when the item is expanded
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeItemBase.ItemExpanding">
      <summary>
            Gets raised when the child container is expanding
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeItemBase.ItemCollapsing">
      <summary>
            Gets raised when the item is collapsing
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeItemBase.ItemCollapsed">
      <summary>
            Gets raised when the item is collapsed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.Composite">
      <summary>
            Gets the DisplayParent as a QComposite
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.UserReference">
      <summary>
            Gets or sets an optional reference to a user object
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.SystemReference">
      <summary>
            Get or sets an optional reference to a system object
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.Cursor">
      <summary>
            Gets or sets the mouse cursor. This isn't used on the QCompositeItemBase.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ToolTipText">
      <summary>
            Gets the tooltip text. This isn't used on the QCompositeItemBase.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.HasHotState">
      <summary>
            Determines if the QCompositeItem has a hot state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.HasPressedState">
      <summary>
            Determines if the QCompositeItem has a pressed state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.HasCheckedState">
      <summary>
            Determines if the QCompositeItem has a pressed state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ItemState">
      <summary>
            Gets the QItemStates for the QCompositeItemBase
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ColorHost">
      <summary>
            Gets or sets the color host that is responsible for providing colors for this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.CloseMenuOnActivate">
      <summary>
            Does nothing on QCompositeItemBase
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.Visible">
      <summary>
            Gets or sets whether this item is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.IsEnabled">
      <summary>
            Gets whether the QCompositeItemBase is enabled based other properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.Enabled">
      <summary>
            Gets or sets whether this item is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ItemName">
      <summary>
            Gets or sets the name of this QCompositeItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.Site">
      <summary>
            Gets or sets the Site this command belongs to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.IsDisposed">
      <summary>
            Gets whether this QCompositeItemBase is disposed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.Properties">
      <summary>
            Returns the used configuration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.LastClonedItem">
      <summary>
            Contains the item that is the last created clone of this item. You can reset (and therby unlinking) this
            item by calling RemoveCloneLink on this item.
            </summary>
      <remarks>
            When this is set, and an event is raised on the cloned item, the event is also raised on this item
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.OriginalItem">
      <summary>
            If this is a cloned item, this propery contains the original item. You can reset (and thereby unlinking) this
            item by calling RemoveCloneLink on the original item.
            </summary>
      <remarks>
            When this is set, the events on the Original item are also raised.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ShouldRaiseEventOnOriginal">
      <summary>
            Gets whether events should also be raised on the original object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ParentControlIsInitializing">
      <summary>
            Returns whether the parent control is initializing. This can only be true if the parent control implements
            <see cref="T:Qios.DevSuite.Components.IQSupportInitialize" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ParentControl">
      <summary>
            Gets the parent control this item is on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ContentClipRegion">
      <summary>
            Gets the region where the content is clipped in, when this is set. Default returns null.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.BaseItemState">
      <summary>
            Gets the item state without searching recursively
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.LastDrawnGraphicsPath">
      <summary>
            Gets the lastDrawnShape path.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ParentPart">
      <summary>
            IQPart Implementation. Gets the parent IQPart.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ParentCollection">
      <summary>
            Gets the collection where this part is currently located in. This usually is a collection contained by the ParentPart.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.DisplayParent">
      <summary>
            IQPart Implementation. Gets or Sets the display parent
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.PartName">
      <summary>
            IQPart Implementation. Returns the PartName
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.ContentObject">
      <summary>
            IQPart Implementation. Gets the content object
            </summary>
      <remarks>When overridden in a derived class, you should also override <see cref="P:Qios.DevSuite.Components.QCompositeItemBase.ContentObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.Parts">
      <summary>
            IQPart implementation. Gets the content object casted as an QPartCollection.
            </summary>
      <remarks>When overridden in a derived class, you should also override <see cref="P:Qios.DevSuite.Components.QCompositeItemBase.ContentObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.HasItems">
      <summary>
            Gets whether this base has composite items. These are the items that are displayed in this QCompositeItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.Items">
      <summary>
            Gets the collection of CompositeItems of this QCompositeItem (if it has any). These are the items that are displayed in this QCompositeItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.LayoutOrder">
      <summary>
            Gets or sets the LayoutOrder. If a LayoutOrderString is used in the configuration, this is adapted by that string.
            When you want to specify the LayoutOrder yourself or want to add items, set that string to String.Empty (not null).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.LayoutEngine">
      <summary>
            Gets or sets the LayoutEngine
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.PaintEngine">
      <summary>
            Gets or sets the PaintEngine
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.LayoutListener">
      <summary>
            IQPart Implementation. Gets or sets a possible listener.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.PaintListener">
      <summary>
            IQPart Implementation. Gets or sets a possible listener.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.CalculatedProperties">
      <summary>
            IQPart Implementation. Gets the calculated properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.AssociatedComponents">
      <summary>
            Gets the items the associated components.
            </summary>
      <remarks>
            The list instance shouldn't be the same as the the Items instance, because overrides may add new designable items
            to the list.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemBase.DesignablePartsCollection">
      <summary>
            Gets the collection where parts will be added design-time.
            when child parts are added via a designer action like Add X or Paste.
            The default implementation returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.#ctor(Qios.DevSuite.Components.QCompositeItemCreationOptions)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeItem
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.ConfigureChildWindow">
      <summary>
            Configures the ChildWindow before it is shown. Does nothing by default. All the configuration is done
            by <see cref="M:Qios.DevSuite.Components.QComposite.ConfigureChildWindow(Qios.DevSuite.Components.QCompositeItem,Qios.DevSuite.Components.QCompositeWindow)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.CreateChildWindow">
      <summary>
            Creates the composite child container
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.IsVisible(Qios.DevSuite.Components.QPartVisibilitySelectionTypes)">
      <summary>
            Gets whether the QCompositeItemBase is visible
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.MatchesHotkeySequence(System.Windows.Forms.Keys[],System.Boolean)">
      <summary>
            Overridden. Returns whether this item matchces the specified hotkey sequence.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.MatchesShortcut(System.Windows.Forms.Keys)">
      <summary>
            Overridden. Returns whether this item matches the specified shortcut.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Handles a paint stage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.Clone">
      <summary>
            Overridden. Clones this object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.RemoveCloneLink">
      <summary>
            Overridden. Removes the link to and from the LastClonedItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.MoveUnclonablesToClone">
      <summary>
            Overridden. If an item contains an unclonable object, for example a Control, this method moves that
            object to the LastClonedItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.RestoreUnclonablesFromClone">
      <summary>
            Overridden. Restores unclonable objects from the LastClonedItem were moved with <see cref="M:Qios.DevSuite.Components.QCompositeItem.MoveUnclonablesToClone" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItem.HandleScrollingStage(Qios.DevSuite.Components.IQScrollablePart,Qios.DevSuite.Components.QScrollablePartScrollStage)">
      <summary>
            Overridden. Handles a scrolling stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.LayoutEngine">
      <summary>
            Gets or sets the LayoutEngine
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.Cursor">
      <summary>
            Gets or sets the mouse cursor for this QCompositeItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.Items">
      <summary>
            Gets the collection of CompositeItems of this QCompositeItem. These are the items that are displayed in this QCompositeItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.AssociatedComponents">
      <summary>
            Overridden. Gets the designable items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.DesignablePartsCollection">
      <summary>
            Overridden. A QCompositeItem can host other parts. This returns the Items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.ToolTipText">
      <summary>
            Gets or sets the ToolTipText. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            The ToolTip, see ToolTipConfiguration, must be enabled for this to show.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.HotkeyText">
      <summary>
            Gets or sets the HotkeyText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.HotkeySequence">
      <summary>
            Gets the Hotkey Sequence that must be pressed for this item. This is created from the HotkeyText
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.HasChildItems">
      <summary>
            Gets whether this QCompositeItem has composite child items. these are the items that are opened in a child menu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.CanExpand">
      <summary>
            Gets whether this item can be expanded. The default implementation returns only true when it has ChildItem
            or a custom child window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.ChildWindow">
      <summary>
            Gets the child Window. It creates one when not created.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.CustomChildWindow">
      <summary>
            Gets or sets a custom child window.
            When this is set, the child items, colorscheme and configuration of the custom child window are used instead of the child items of this item and the settings of the parenting composite.
            </summary>
      <remarks>
            A custom QCompositeWindow can only be used on ONE item. It cannot be assigned to multiple items. When assigning the same window to multiple items,
            the window is used on the last item.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.ChildItems">
      <summary>
            Gets the child collection of CompositeItems of this QCompositeItem. 
            The child collection will be shown in a QCompositeWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.ChildComposite">
      <summary>
            Gets the ChildComposite. It creates one when not created.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.CloseMenuOnActivate">
      <summary>
            Gets or sets whether the Menu must be closed when the Item is activated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.UserHasRightToExecute">
      <summary>
            Gets or sets whether the use has right to execute the QCompositeItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.UserRightBehavior">
      <summary>
            Gets or sets what should happen when the user has no right to execute the QCompositeItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.Shortcut">
      <summary>
            Gets or sets the Shortcut of the QCompositeItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.Checked">
      <summary>
            Gets or sets whether the QCompositeIconBase is checked. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.IsEnabled">
      <summary>
            Gets whether the QCompositeItem is enabled based on the Enabled, UserHasRightToExecute and the UserRightBehavior
            properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.IsExpanded">
      <summary>
            Gets whether this item is expanded.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.ShortcutKeys">
      <summary>
            Gets the Shortcut as <see cref="T:System.Windows.Forms.Keys" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.ShortcutString">
      <summary>
            Gets the Shortcut as a string
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.SuppressShortcutToSystem">
      <summary>
            Gets or sets whether the pressed shortcut must be suppressed and not be bubbeled up to the system. Turn this off to let the system handle the shortcut.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.Template">
      <summary>
            Contains the template to use for creating this item. Setting this value will remove all child parts and rebuild the item from scratch.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.HasHotState">
      <summary>
            Determines if the QCompositeItem has a hot state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.HasPressedState">
      <summary>
            Determines if the QCompositeItem has a pressed state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItem.HasCheckedState">
      <summary>
            Determines if the QCompositeItem has a checked state
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItem.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItem.RetrieveFirstDefinedColor(System.String)">
      <summary>
            Retrieves the first defined color for this Item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItem.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the colorSet for the QRibbonCaptionButton
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItem.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Overridden. Handles a layout stage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItem.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Handles a paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItem.Configuration">
      <summary>
            New. gets or sets the configuration as a QRibbonLaunchBarItemConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItem.LaunchBar">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" /> if this item is on a RibbonLaunchBar
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeGroupConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.QCompositeGroup" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QGroupPartConfiguration">
      <summary>
            Contains configuration properties for a <see cref="T:Qios.DevSuite.Components.QPart" /> that contains other QParts
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QContentPartConfiguration">
      <summary>
            Contains configuration properties for a <see cref="T:Qios.DevSuite.Components.IQPart" /> that contains plain content
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartConfigurationBase">
      <summary>
            Defines the base configuration for classes that configure <see cref="T:Qios.DevSuite.Components.IQPart" />instances.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFastPropertyBagHost">
      <summary>
            Defines a base class that want to implement <see cref="T:Qios.DevSuite.Components.IQFastPropertyBagHost" /> and <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.
            The ICustomTypeDescriptor is used to return the same Properties as the <see cref="T:Qios.DevSuite.Components.Design.QFastPropertyBagHostTypeConverter" /> does.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQFastPropertyBagHost">
      <summary>
            Defines the interface for classes that have a <see cref="T:Qios.DevSuite.Components.QFastPropertyBag" /> as its property container. This can be usefull
            for using the <see cref="T:Qios.DevSuite.Components.Design.QFastPropertyBagHostTypeConverter" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQFastPropertyBagHost.Properties">
      <summary>
            Contains the FastPropertyBag
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQResettableValue">
      <summary>
            Is used with <see cref="T:Qios.DevSuite.Components.QPropertyBag" /> to define resetable values (often referenced values).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQResettableValue.IsSetToDefaultValues">
      <summary>
            Returns whether the propeties of the object is set to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQResettableValue.SetToDefaultValues">
      <summary>
            Sets all the properties of the object to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.#ctor">
      <summary>
            Creates the QPropertyBagHost
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetRequestedCount">
      <summary>
            Gets the requested count. This is used to create the propertyBag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.SuspendChangeNotification">
      <summary>
            Suspends any change notification. Now no redraw or layout will occur. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.ResumeChangeNotification(System.Boolean)">
      <summary>
            Resumes any layout notification suspended by <see cref="M:Qios.DevSuite.Components.QFastPropertyBagHost.SuspendChangeNotification" />. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.SetToDefaultValues">
      <summary>
            Sets this to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.IsSetToDefaultValues">
      <summary>
            Returns whether this is set to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetConverter">
      <summary>
            Gets the TypeConverter
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetEvents(System.Attribute[])">
      <summary>
            Gets the Events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetEvents">
      <summary>
            Gets the Events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetComponentName">
      <summary>
            Gets the component name.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>
            Gets the owner of the specified property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetAttributes">
      <summary>
            Gets the attributes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetProperties(System.Attribute[])">
      <summary>
            Gets the Properties, this returns the same propertyDescriptors as <see cref="T:Qios.DevSuite.Components.Design.QPropertyBagHostTypeConverter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetProperties">
      <summary>
            Gets the Properties, this returns the same propertyDescriptors as <see cref="T:Qios.DevSuite.Components.Design.QPropertyBagHostTypeConverter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetEditor(System.Type)">
      <summary>
            Gets the editor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetDefaultProperty">
      <summary>
            Gets the default property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetDefaultEvent">
      <summary>
            Gets the default event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.GetClassName">
      <summary>
            Gets the class name.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBagHost.Clone">
      <summary>
            Clones this QFastPropertyBagHost.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFastPropertyBagHost.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QFastPropertyBagHost.ChangeNotificationSuspended">
      <summary>
            Gets how many times the change is suspended.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFastPropertyBagHost.Properties">
      <summary>
            Gets the propertyBag. Use this bag to store properties in or to redefine defaultValues
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPartConfigurationBase">
      <summary>
            Defines the base interface for IQPart configurations
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPartSharedProperties">
      <summary>
            Defines the properties of a <see cref="T:Qios.DevSuite.Components.QPart" /> that can be shared with multiple QParts.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetAlignmentHorizontal(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the horizontal alignment.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetAlignmentVertical(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the vertical alignment.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetContentAlignmentHorizontal(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the horizontal alignment for the content object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetContentAlignmentVertical(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the vertical alignment for the content object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetDirection(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the direction of the QPart.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetMinimumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the minimum size
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetMaximumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the maximum size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetVisible(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets whether the specified part is visible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetContentLayoutOrder(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the content layout order.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetOptions(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets additional options.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the paddings for the specified part. Default it must just return a possible padding.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSharedProperties.GetMargins(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the margins for the specified part. Default it must just return a possible padding.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.IQPartConfigurationBase.ConfigurationChanged">
      <summary>
            Defines the ConfigurationChanged event.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropShrinkHorizontal">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropShrinkVertical">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropStretchHorizontal">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropStretchVertical">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropAlignmentHorizontal">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropAlignmentVertical">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropMinimumSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropMaximumSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropDirection">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropContentLayoutOrder">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropContentAlignmentHorizontal">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.PropContentAlignmentVertical">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartConfigurationBase.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.#ctor">
      <summary>
            Default Constructor. Creates a configuration and
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetVisible(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets whether the item is visible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the paddings for the specified part. Default it just returns the property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetMargins(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the margins for the specified part. Default it just returns the property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetMinimumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the minimum size for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetMaximumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the maximum size for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetDirection(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the direction for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetAlignmentHorizontal(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the horizontal alignment for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetAlignmentVertical(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the vertical alignment for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetContentAlignmentHorizontal(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the horizontal alignment for the content of the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetContentAlignmentVertical(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the vertical alignment for the content of the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetContentLayoutOrder(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the content layout order alignment for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.GetOptions(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the options for the specified part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QPartConfigurationBase.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.Dispose">
      <summary>
            Disposes the Configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.Dispose(System.Boolean)">
      <summary>
            Disposes this Configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartConfigurationBase.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QPartConfigurationBase.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContentPartConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.Margin">
      <summary>
            Gets or sets the margin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.Padding">
      <summary>
            Gets or sets the padding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.Visible">
      <summary>
            Gets or sets whether the item is visible. Undefined means that is is based on other properties. This means that it is most often visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.ShrinkHorizontal">
      <summary>
            Gets or sets whether the item can be horizontal shrinked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.ShrinkVertical">
      <summary>
            Gets or sets whether the item can be vertical shrinked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.StretchHorizontal">
      <summary>
            Gets or sets whether the item can be horizontal stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.StretchVertical">
      <summary>
            Gets or sets whether the item can be vertical stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.AlignmentHorizontal">
      <summary>
            Gets or sets the alignment of this item horizontally.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.AlignmentVertical">
      <summary>
            Gets or sets the alignment of this item vertically.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.ContentAlignmentHorizontal">
      <summary>
            Gets or sets the alignment of the content of this item horizontally.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.ContentAlignmentVertical">
      <summary>
            Gets or sets the alignment of the content of this item vertically.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.MinimumSize">
      <summary>
            Gets or sets the minimum size of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContentPartConfiguration.MaximumSize">
      <summary>
            Gets or sets the minimum size of the item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGroupPartConfiguration.#ctor">
      <summary>
            Default Constructor. Creates the configuration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGroupPartConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Gets the default ContentPartLayoutOrder
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGroupPartConfiguration.ContentAlignmentHorizontal">
      <summary>
            Overridden. Not used on GroupParts
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGroupPartConfiguration.ContentAlignmentVertical">
      <summary>
            Overridden. Not used on GroupParts
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGroupPartConfiguration.Direction">
      <summary>
            Gets or sets the direction of the content of this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGroupPartConfiguration.ContentLayoutOrder">
      <summary>
            Gets or sets the content layout order of the child parts. This defines when a part is layed out.
            The actual position is also determined by the alignment of a part.
            Set this string to String.Empty (not null) when you want to order manually or want to add parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeGroupConfiguration.PropAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeGroupConfiguration.PropLayout">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeGroupConfiguration.PropScrollConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeGroupConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeGroupConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupConfiguration.CreateAppearance">
      <summary>
            Creates the appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupConfiguration.CreateScrollConfiguration">
      <summary>
            Creates the scrollConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupConfiguration.GetMinimumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. Gets the minimumsize. If the MinimumSize was configured as 0,0 the minimum size of the shape will be used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupConfiguration.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. Gets the paddings.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupConfiguration.GetAppearance(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupConfiguration.GetLayout(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the layout.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupConfiguration.GetScrollConfiguration(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the ScrollConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroupConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroupConfiguration.Layout">
      <summary>
            Gets or set the layout of the QCompositeItem. If this is auto the layout is automatically determined.
            For example when the item is located in a TableLayout the Auto value specifies that the item should be in a RowLayout.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroupConfiguration.ScrollConfiguration">
      <summary>
            Gets the scrollconfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroupConfiguration.Appearance">
      <summary>
            Gets the appearance of a <see cref="T:Qios.DevSuite.Components.QCompositeItem" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupConfiguration.CreateAppearance">
      <summary>
            A group doesn't have an appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupConfiguration.Appearance">
      <summary>
            Overridden. Does nothing on a QRibbonGroup
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Does nothing on a QRibbonGroup
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItemConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMenuItemConfiguration">
      <summary>
            Contains the configuration properties for the <see cref="T:Qios.DevSuite.Components.QCompositeMenuItem" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.QCompositeItem" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.PropAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.PropLayout">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.PropHasHotState">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.PropHasPressedState">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.PropHotkeyWindowRelativeOffset">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.PropHotkeyWindowAlignment">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.PropExpandBehavior">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.PropExpandDirection">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemConfiguration.CreateAppearance">
      <summary>
            Creates the appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemConfiguration.GetMinimumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. Gets the minimumsize. If the MinimumSize was configured as 0,0 the minimum size of the shape will be used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemConfiguration.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. Gets the paddings.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemConfiguration.HasHotState">
      <summary>
            Gets or set if the QCompositeItem has a hot state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemConfiguration.HasPressedState">
      <summary>
            Gets or set if the QCompositeItem has a pressed state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemConfiguration.HotkeyWindowRelativeOffset">
      <summary>
            Gets or set the relative offset of the HotkeyWindow. This offset is added after the alignment.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemConfiguration.HotkeyWindowAlignment">
      <summary>
            Gets or set the alignment of the hotkeyWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemConfiguration.Layout">
      <summary>
            Gets or set the layout of the QCompositeItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemConfiguration.ExpandBehavior">
      <summary>
            Gets or sets additional behaviors that must be applied to this item. Or sets behaviors off
            by specifying the 'not' behavior.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemConfiguration.ExpandDirection">
      <summary>
            Gets or sets the direction a QCompositeItem will expand to when it contains child QCompositeItems. 
            If this is inherited it uses the direction of the composite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemConfiguration.Appearance">
      <summary>
            Gets the appearance of a <see cref="T:Qios.DevSuite.Components.QCompositeItem" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.PropIconConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.PropTitleConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.PropControlConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.PropShortcutConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.PropDropDownConfiguration">
      <summary> Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.PropDropDownSplitConfiguration">
      <summary> Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.PropDropDownSeparated">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.PropCheckBehaviour">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested property count.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.CreateIconConfiguration">
      <summary>
            Creates the IconConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.CreateTitleConfiguration">
      <summary>
            Creates the TitleConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.CreateControlConfiguration">
      <summary>
            Creates the TitleConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.CreateShortcutConfiguration">
      <summary>
            Creates the ShortcutConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.CreateDropDownConfiguration">
      <summary>
            Creates the ShortcutConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.CreateDropDownSplitConfiguration">
      <summary>
            Creates the DropDownSplit configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Is used on a QCompositeMenuItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.CheckBehaviour">
      <summary>
            Gets or sets the behaviour for checking items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.DropDownSeparated">
      <summary>
            Gets or sets the dropdown part has a seperate hot and pressed state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.IconConfiguration">
      <summary>
            Gets the configuration of the icon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.TitleConfiguration">
      <summary>
            Gets the configuration of the title.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.ControlConfiguration">
      <summary>
            Gets the configuration of the Control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.ShortcutConfiguration">
      <summary>
            Gets the configuration of the shortcut.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.DropDownButtonConfiguration">
      <summary>
            Gets the configuration of the drop down button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.DropDownSplitConfiguration">
      <summary>
            Gets the configuration of the drop down separator.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden. Gets the defaultContentPartLayoutOrder
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemConfiguration.#ctor(Qios.DevSuite.Components.Ribbon.QRibbonItemConfigurationType)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemConfiguration.CreateAppearance">
      <summary>
            Overridden. Creates the appearance.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemConfiguration.CreateDropDownConfiguration">
      <summary>
            Creates the DropDown configuration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemConfiguration.DefaultDropDownMask">
      <summary>
            Gets the default drop down mask of this configuration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItemAppearance">
      <summary>
            Contains the appearance for ribbon items.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemAppearance">
      <summary>
            Contains the appearance for qcompositeitems.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeAppearance">
      <summary>
            Defines the appearance used by controls that have a <see cref="T:Qios.DevSuite.Components.QShape" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppearanceBase">
      <summary>
            This class is used by container controls. All those controls have one or two background colors.
            This class defines the appearance of those backgrounds.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQAppearance">
      <summary>
            Defines the base interface for appearances.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQAppearance.BackgroundStyle">
      <summary>
            Gets the background style of the appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQMetallicAppearance">
      <summary>
            Defines the interface for appearances that can show metallic
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQMetallicAppearance.MetallicOffset">
      <summary>
            gets the metallic offset of the appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQMetallicAppearance.MetallicOffsetUnit">
      <summary>
            Gets the metallic offset unit.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQMetallicAppearance.MetallicNearIntensity">
      <summary>
            Gets the intensity of the color at the split. 0 is full Color A, 100 is full Color B.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQMetallicAppearance.MetallicFarIntensity">
      <summary>
            Gets the intensity of the color at the end. 0 is full Color A, 100 is full Color B.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQMetallicAppearance.MetallicInnerGlowWidth">
      <summary>
            gets the metallic inner glow width of the appearance
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQMetallicAppearance.MetallicAutomaticColorOrder">
      <summary>
            Gets or sets whether the order of the colors must happen automatically. When automatically, 
            the darkest color will be the lowest color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQMetallicAppearance.MetallicDirection">
      <summary>
            Gets the direction of the metallic appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQMetallicAppearance.MetallicShineIntensity">
      <summary>
            Gets the intensity of the metallic shine.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQMetallicAppearance.MetallicShineSaturation">
      <summary>
            Gets the intensity of the metallic shine.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQGradientAppearance">
      <summary>
            Defines the interface for appearances that can show gradients.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQGradientAppearance.GradientAngle">
      <summary>
            Gets the gradient angle of the appearance
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQGradientAppearance.GradientBlendPosition">
      <summary>
            gets the gradientblend position of the appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQGradientAppearance.GradientBlendFactor">
      <summary>
            gets the gradient blend factor of the appearance.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropWeakEventHandlers">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropBackgroundStyle">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropGradientAngle">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropGradientBlendPosition">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropGradientBlendFactor">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropMetallicOffset">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropMetallicOffsetUnit">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropMetallicNearIntensity">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropMetallicFarIntensity">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropMetallicInnerGlowWidth">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropMetallicDirection">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropMetallicShineIntensity">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropMetallicShineSaturation">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.PropMetallicAutomaticColorOrder">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBase.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceBase.#ctor">
      <summary>
            The default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceBase.GetRequestedCount">
      <summary>
            Overridden. gets the requested count for this appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceBase.OnAppearanceChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QAppearanceBase.AppearanceChanged" /> event.
            </summary>
      <param name="e">Empty EventArgs</param>
    </member>
    <member name="E:Qios.DevSuite.Components.QAppearanceBase.AppearanceChanged">
      <summary>
            This event gets raised when a property of this <see cref="T:Qios.DevSuite.Components.QAppearance" /> changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.BackgroundStyle">
      <summary>
            Gets or sets the BackgroundStyle. The BackgroundStyle defines if the background should be drawn as <b>Gradient</b> or <b>Solid</b></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.GradientAngle">
      <summary>
            Gets or sets the angle of the gradient. This property only applies when the <see cref="P:Qios.DevSuite.Components.QAppearanceBase.BackgroundStyle" /> is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.GradientBlendPosition">
      <summary>
            Gets or sets the position for which the BlendFactor should be applied. This property only applies when the <see cref="P:Qios.DevSuite.Components.QAppearanceBase.BackgroundStyle" /> is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.GradientBlendFactor">
      <summary>
            Gets or sets factor for the BlendPosition. This is the factor from the two colors that should be visible at the specified BlendPosition.
            This property only applies when the <see cref="P:Qios.DevSuite.Components.QAppearanceBase.BackgroundStyle" /> is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.MetallicOffset">
      <summary>
            Gets or sets the metallic offset. This is where the metallic flips in percentages.
            This property only applies when the <see cref="P:Qios.DevSuite.Components.QAppearanceBase.BackgroundStyle" /> is set to <b>Metallic</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.MetallicOffsetUnit">
      <summary>
            Gets or sets the unit used for <see cref="P:Qios.DevSuite.Components.QAppearanceBase.MetallicOffset" />.
            This property only applies when the <see cref="P:Qios.DevSuite.Components.QAppearanceBase.BackgroundStyle" /> is set to <b>Metallic</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.MetallicInnerGlowWidth">
      <summary>
            Gets or sets the width of a possible inner glow.
            This property only applies when the <see cref="P:Qios.DevSuite.Components.QAppearanceBase.BackgroundStyle" /> is set to <b>Metallic</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.MetallicDirection">
      <summary>
            Gets or sets the direction of the metallic appearance.
            This property only applies when the <see cref="P:Qios.DevSuite.Components.QAppearanceBase.BackgroundStyle" /> is set to <b>Metallic</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.MetallicNearIntensity">
      <summary>
            Gets the intensity of the color at the split. 0 is full Color A, 100 is full Color B.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.MetallicFarIntensity">
      <summary>
            Gets the intensity of the color at the end. 0 is full Color A, 100 is full Color B.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.MetallicShineIntensity">
      <summary>
            Gets the intensity of the metallic shine effect. 0 is no shine effect, 100 is a strong shine effect.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.MetallicShineSaturation">
      <summary>
            Gets the saturation of the metallic shine effect. 0 is the first background color effect, 100 is a more colorful color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceBase.MetallicAutomaticColorOrder">
      <summary>
            Gets or sets whether the order of the colors must happen automatically. When automatically, 
            the darkest color will be the lowest color.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQBorderedAppearance">
      <summary>
            Defines the interface for a bordered appearance
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQBorderedAppearance.BorderWidth">
      <summary>
            gets the border width
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQShapeAppearance">
      <summary>
            Defines the appearance for <see cref="T:Qios.DevSuite.Components.QShape" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQShapeAppearance.SmoothingMode">
      <summary>
            Gets the smoothingmode to use
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQShapeAppearance.Shape">
      <summary>
            Gets or sets the Shape
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeAppearance.PropBorderWidth">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeAppearance.PropSmoothingMode">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeAppearance.PropShape">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeAppearance.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeAppearance.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeAppearance.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeAppearance.BorderWidth">
      <summary>
            Gets or sets the BorderWidth.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeAppearance.SmoothingMode">
      <summary>
            Gets or sets the SmoothingMode.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemAppearance.#ctor(Qios.DevSuite.Components.Ribbon.QRibbonItemConfigurationType)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItemConfigurationType">
      <summary>
            Defines what kind of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemConfiguration" /> should be created.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonItemConfigurationType.Default">
      <summary>
            The default configuration is created
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonItemConfigurationType.RibbonItemBar">
      <summary>
            The configuration is used for items on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonItemConfigurationType.RibbonLaunchBar">
      <summary>
            The configuration is used for items on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbon">
      <summary>
            this class implements the Ribbon Control like the one used in the Microsoft Office 2007 applications.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabControl">
      <summary>
            QTabControl allows you to present tabs in several ways. At top, bottom, left or right.
            It uses instances of <see cref="T:Qios.DevSuite.Components.QTabPage" /> to display the tabpage. It contains four <see cref="T:Qios.DevSuite.Components.QTabStrip" /> instances,
            for every side one. To configure the <see cref="T:Qios.DevSuite.Components.QTabStrip" /> instances use <see cref="P:Qios.DevSuite.Components.QTabControl.TabStripLeftConfiguration" />, 
            <see cref="P:Qios.DevSuite.Components.QTabControl.TabStripTopConfiguration" />, etc.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QContainerControl">
      <summary>
            This is a base implementation for a container controls that needs <see cref="T:Qios.DevSuite.Components.QColorScheme" /> or <see cref="T:Qios.DevSuite.Components.QAppearance" /> implementations.
            It extends the <see cref="T:Qios.DevSuite.Components.QContainerControlBase" /> class. You can specify the colors for this control by overriding the
            <see cref="P:Qios.DevSuite.Components.QContainerControl.BackColorPropertyName" />, the <see cref="P:Qios.DevSuite.Components.QContainerControl.BackColor2PropertyName" /> and the <see cref="P:Qios.DevSuite.Components.QContainerControl.BorderColorPropertyName" /> and returning a valid
            property name from the <see cref="T:Qios.DevSuite.Components.QColorScheme" />. It is also possible to paint the complete control yourself. See for details
            the <see cref="T:Qios.DevSuite.Components.QContainerControlBase" /> type.
            <br /><br />
            It also contains the possibility to inherit the default Windows font by specifying the <see cref="P:Qios.DevSuite.Components.QContainerControl.FontScope" />. You can define
            the position of the background image by setting <see cref="P:Qios.DevSuite.Components.QContainerControl.BackgroundImageAlign" /> property.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QContainerControlBase">
      <summary>
            QContainerControlBase makes it possible to create container controls that have its own
            NonClientArea defined. This is done by implementing the <see cref="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaMarginLeft" />, <see cref="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaMarginRight" />, etc. properties and
            returning the correct margin for each side. With this control you can create container controls
            that have their own borders, captions or other elements that should be drawn outside the ClientRectangle.
            You can define your own painting code for the NonClientArea by overriding the <see cref="M:Qios.DevSuite.Components.QContainerControlBase.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)" /> method or
            by handling the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.PaintNonClientArea" /> event.
            <br /><br />
            It is also possible to let the control get sized by the user when the user clicks on the borders. This
            is done by setting the correct value for the <see cref="P:Qios.DevSuite.Components.QContainerControlBase.CanSizeLeft" />, <see cref="P:Qios.DevSuite.Components.QContainerControlBase.CanSizeRight" /> etc. properties.
            Make sure you also implement the <see cref="P:Qios.DevSuite.Components.QContainerControlBase.ResizeBorderWidth" /> if you want to let the user to resize the control.
            This is the width of the border the user can press on to resize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.#ctor">
      <summary>
            Default Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.#ctor(System.Windows.Forms.IWin32Window)">
      <summary>
            Creates a QContainerControlBase with a possible Owner. This can be handy for ToolWindows.
            It shouldn't be used when the control is parented.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.Initialize">
      <summary>
            Obsolete since version 1.0.7.20. If you have overridden this method, put the code in the Constructor of your control QContainerControlBase override.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.SetQControlStyles(Qios.DevSuite.Components.QControlStyles,System.Boolean)">
      <summary>
            Sets extra <see cref="T:Qios.DevSuite.Components.QControlStyles" /> for this control. Value indicates whether the styles must be set.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.SetOwnerWindow(System.Windows.Forms.IWin32Window,System.Boolean)">
      <summary>
            Sets the owner window. If force is true it is always set, no matter whether the current owner window is the same.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.SetOwnerWindowCore">
      <summary>
            Takes default actions when the owner window is changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.StartTimer(System.Int32,System.Int32)">
      <summary>
            Starts a timer with the specified timerId to the specified interval for this Control.
            When the timer elapses the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.TimerElapsed" /> event is raised with the specified timerId.
            To change the interval of a timer call this method again with the same timerId.
            You set several timers with different timerIds. The timerIds only have to be unique for this Control
            </summary>
      <remarks>Make sure you start your TimerIds from 1024, under 1024 are used for internal purposes</remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.StopTimer(System.Int32)">
      <summary>
            Stops the timer that was set with <see cref="M:Qios.DevSuite.Components.QContainerControlBase.StartTimer(System.Int32,System.Int32)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.RefreshNoClientArea(System.Boolean)">
      <summary>
            Redraws the NoClientArea. refreshChildren indicates if the NoClientArea 
            of the children should also be refreshed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.RefreshNoClientArea">
      <summary>
            Redraws the NonClientArea. It does not refresh the NonClientArea of the children.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.PerformNonClientAreaLayout">
      <summary>
            Performs the layout of the NoClientArea. This method should be called
            when some of the ClientAreaMargin properties change and the changes
            should be reflected.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.PerformNonClientAreaLayout(System.Boolean)">
      <summary>
            Performs the layout of the NonClientArea. This method should be called
            when the some of the ClientAreaMargin properties change and the changes
            should be reflected.
            </summary>
      <param name="layoutChildren">Indicates if the Child controls of this Control should also perform NonClientArea Layout</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.PointToControl(System.Drawing.Point)">
      <summary>
            Calculates the actual point on the control from the Point in ClientCoordinates.
            Use this method to determine where the Cursor is above the non client areas.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.NonClientRectangleToClient(System.Drawing.Rectangle)">
      <summary>
            Calculates the NonClientRectangle to a ClientRectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.DefaultOnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Executes the default OnPaintBackground of a ContainerControl. Use this method
            if you don't want the customized QContainerControlBase.OnPaintBackground to execute.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.PaintNonClientArea" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnNonClientAreaMouseDown(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnNonClientAreaDoubleClick(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaDoubleClick" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnNonClientAreaMouseUp(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnNonClientAreaMouseLeave(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaMouseLeave" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnNonClientAreaMouseMove(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaMouseMove" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnWindowsXPThemeChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.WindowsXPThemeChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.TimerElapsed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnUserStartsSizing(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.UserStartsSizing" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnUserEndsSizing(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.UserEndsSizing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnUserSizing(Qios.DevSuite.Components.QUserSizingEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.UserSizing" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnUserSized(Qios.DevSuite.Components.QUserSizedEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControlBase.UserSized" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.GetDefaultValue(System.String)">
      <summary>
            Returns the DefaultValue of propertyName.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.GetDefaultValueAsValueType(System.String)">
      <summary>
            Returns the defaultValue of the specified property as a value typed object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.ProcessTabKey(System.Boolean)">
      <summary>
            Overridden. Processes the TAB-key.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles the NonClient messages, and sets the NonClientArea.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden. Makes sure the control does not get smaller then the minimumsize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseWheel event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Performs any layout actions needed for the QContainerControlBase.
            </summary>
      <param name="levent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnResize(System.EventArgs)">
      <summary>
            Overridden. If the user is resizing this control, then make sure the parents
            layout is recalculated. This is necessary in MDI environments, so that the MDI Client
            is recalculated.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.OnHandleCreated(System.EventArgs)">
      <summary>
            Overridden. Handles the HandleCreated event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControlBase.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.CreateParams">
      <summary>
            Overridden. Gets the CreateParams.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.PaintNonClientArea">
      <summary>
            This event gets raised when the NonClientArea should be drawn.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaMouseDown">
      <summary>
            This event gets raised when the user clicks on the NonClientArea and the specified area is known.
            Like on the Caption or on the Sizing area.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaDoubleClick">
      <summary>
            This event gets raised when the user double clicks on the NonClientArea and the specified area is known.
            Like on the Caption or on the Sizing area.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaMouseUp">
      <summary>
            This event gets raised when the user releases the button on the NonClientArea and the specified area is known.
            Like on the Caption or on the Sizing area.
            </summary>
      <remarks>
            You need to cancel the DefaultAction on the NonClientAreaMouseDown event if you want to 
            handle this event. Otherwise the default action is done and there is no control over it anymore.
            </remarks>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaMouseMove">
      <summary>
            This event gets raised when the user moves over the NonClientArea and the specified area is known.
            Like on the Caption or on the Sizing area.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.NonClientAreaMouseLeave">
      <summary>
            This event gets raised when the user leaves the NonClientArea.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.UserStartsSizing">
      <summary>
            This event gets raised when the user starts sizing the control.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.UserEndsSizing">
      <summary>
            This event gets raised when the user ends the sizing of the control.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.UserSizing">
      <summary>
            Is raised before every resize action performed by the user and can be canceled.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.UserSized">
      <summary>
            Is raised after every resize action performed by the user.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.WindowsXPThemeChanged">
      <summary>
            Is raised when the Windows XP theme is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControlBase.TimerElapsed">
      <summary>
            Gets raised when a timer that was set with the <see cref="M:Qios.DevSuite.Components.QContainerControlBase.StartTimer(System.Int32,System.Int32)" /> method elapses.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.LeftBorderArea">
      <summary>
            Gets the area of the left border.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.RightBorderArea">
      <summary>
            Gets the area of the right border.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.TopBorderArea">
      <summary>
            Gets the area of the top border.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.BottomBorderArea">
      <summary>
            Gets the area of the bottom border.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.MinimumClientSize">
      <summary>
            Gets or sets the minimum size of the client area of the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.WrapTabAround">
      <summary>
            Indicates if the focus of the Controls should wrap around in this control when TAB is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.MinimumSize">
      <summary>
            Gets or sets the minimum size of the complete control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.OwnerWindow">
      <summary>
            Gets or sets the Owner of this Control. This can be usefull when the control implements
            a ToolWindow. This shouldn't be used when the control is parented.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.IsFirstControl">
      <summary>
            Gets whether this control is the first control in the Parent.Controls collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.IsLastControl">
      <summary>
            Gets whether this control is the last control in the Parent.Controls collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.IsSingleChildControl">
      <summary>
            Gets whether this control is the only control in the Parent.Controls collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.NextSibling">
      <summary>
            Gets the control next to this control in the Parent.Controls collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.PreviousSibling">
      <summary>
            Gets the Control previous to this Control in the Parent Collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ControlIndex">
      <summary>
            Gets or sets the Index of this control in the Parent.Controls collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.IsUserSizing">
      <summary>
            Returns if the user is sizing the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.CaptionBounds">
      <summary>
            When the Control has a caption, it should override this to provide the CaptionArea.
            This is used to determine where the user pressed on the Control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaMarginTop">
      <summary>
            Returns the top margin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaMarginLeft">
      <summary>
            Returns the left margin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaMarginRight">
      <summary>
            Returns the right margin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaMarginBottom">
      <summary>
            Returns the bottom margin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaPaddingTop">
      <summary>
            Returns the top padding of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaPaddingLeft">
      <summary>
            Returns the left padding of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaPaddingRight">
      <summary>
            Returns the right padding of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ClientAreaPaddingBottom">
      <summary>
            Returns the bottom padding of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.ResizeBorderWidth">
      <summary>
            Returns the Width of the resize border. 
            If a CanSize property is true this width indicates where the user can click
            to size the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.CanSizeTop">
      <summary>
            Gets or sets if the user can size the top.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.CanSizeLeft">
      <summary>
            Gets or sets if the user can size the left.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.CanSizeRight">
      <summary>
            Gets or sets if the user can size the right.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.CanSizeBottom">
      <summary>
            Gets or sets if the user can size the bottom.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControlBase.CurrentBounds">
      <summary>
            Gets the actual bounds of the Window. Sometimes, when resizing the window the Control. Bounds
            property does not reflect the actual bounds.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.#ctor">
      <summary>
            Default contructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.#ctor(System.Windows.Forms.IWin32Window)">
      <summary>
            Constructor. Creates a QContainerControl with a possible owner. This can be usefull for ToolWindows
            </summary>
      <param name="owner">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ShouldSerializeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QContainerControl.ColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ResetColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QContainerControl.ColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ShouldSerializeAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QContainerControl.Appearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ResetAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QContainerControl.Appearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ShouldSerializeToolTipConfiguration">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QContainerControl.ToolTipConfiguration" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ResetToolTipConfiguration">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QContainerControl.ToolTipConfiguration" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ShouldSerializeLocalFont">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QContainerControl.LocalFont" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ResetLocalFont">
      <summary>
            Is used by the designer to reset the <see cref="P:Qios.DevSuite.Components.QContainerControl.LocalFont" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ShouldSerializeBackColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QContainerControl.BackColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ResetBackColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QContainerControl.BackColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ShouldSerializeBackColor2">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QContainerControl.BackColor2" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ResetBackColor2">
      <summary>
            Is used by the designer to reset the <see cref="P:Qios.DevSuite.Components.QContainerControl.BackColor2" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ShouldSerializeBorderColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QContainerControl.BorderColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.ResetBorderColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QContainerControl.BorderColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.Refresh">
      <summary>
            Overridden. Refreshes the client and non-client area of the control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.CreateBalloon">
      <summary>
            Creates the balloon used for tooltips
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.SetFontToFontScope">
      <summary>
            Is used to set the Font property to the correct Font. This is based on the QFontScope.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.OnFontChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the FontChanged event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.OnBackgroundImageChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the BackgroundImageChanged event when necessary.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the Background of the Control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the Non-client area of the Control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.CreateAppearanceInstance">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QAppearance.
            This can be an inherited class of QAppearance.
            </summary>
      <returns>A new QAppearance instance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.CreateToolTipConfigurationInstance">
      <summary>
            Can be used by subclasses to implement an other ToolTipConfiguration.
            </summary>
      <returns>A new QToolTipConfiguration Instance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.OnColorsChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControl.ColorsChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.OnAppearanceChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContainerControl.AppearanceChanged" /> event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContainerControl.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.InitialFontScope">
      <summary>
            Gets the FontScope to initialize the QContainerControl with
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControl.ColorsChanged">
      <summary>
            Gets raised when the colors or the QColorScheme changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContainerControl.AppearanceChanged">
      <summary>
            Gets raised when the Appearance changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.BackgroundImageAlign">
      <summary>
            Gets or sets the alignment of the BackgroundImage for this QContainerControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.BackgroundImageOffset">
      <summary>
            Gets or sets a relative offset to add to the BackgroundImage position.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.Appearance">
      <summary>
            Gets the QAppearance for this QContainerControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.ToolTipText">
      <summary>
            Gets or sets the ToolTipText. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" />
            The ToolTipConfiguration, see <see cref="P:Qios.DevSuite.Components.QContainerControl.ToolTipConfiguration" />, must be enabled for this to show.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.ToolTipConfiguration">
      <summary>
            Gets the QToolTipConfiguration for this QContainerControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.Font">
      <summary>
            Overridden. The new Font property hides the Font. The Font is set by the values depending
            on <see cref="P:Qios.DevSuite.Components.QContainerControl.LocalFont" /> and the <see cref="P:Qios.DevSuite.Components.QContainerControl.FontScope" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.FontScope">
      <summary>
            The scope of the font. When the scope is set
            to <b>Local</b> the <see cref="P:Qios.DevSuite.Components.QContainerControl.LocalFont" /> is used, else the Font is defined by Windows or QGlobalFont.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.LocalFont">
      <summary>
            Is used when the <see cref="P:Qios.DevSuite.Components.QContainerControl.FontScope" /> is set to Local.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.BackColor">
      <summary>
            Overridden. Gets or sets the BackColor of this Control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.BackColor2">
      <summary>
            Gets or sets the second background color of this QContainerControl. The second background color
            is used when the BackgroundStyle property of the <see cref="P:Qios.DevSuite.Components.QContainerControl.Appearance" /> property is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.ForeColor">
      <summary>
            Overridden. Gets the ForeColor of this Control, this is never used on a QContainerControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.BorderColor">
      <summary>
            Gets or sets the border color of this QContainerControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.BackColorPropertyName">
      <summary>
            Should get the property name of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the first BackColor.
            It returns the ContainerControlBackground1.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.BackColor2PropertyName">
      <summary>
            Should get the property name of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the second BackColor.
            It returns the ContainerControlBackground2.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContainerControl.BorderColorPropertyName">
      <summary>
            Should get the property name of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the border color.
            It returns the ContainerControlBorder.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPersistableObject">
      <summary>
            Defines the interface that is implemented by the Controls and objects that can load and save their persistableObject state to a file.
            </summary>
      <remarks>
            Because some Controls like QToolBars can be moved and docked by the user,
            you can persist that information to a file or database via the QPersistenceManager.
            This enables the the user to open the Application the same way as they have closed it.
            Instances of IQPersistableObject are the objects that contain information that needs to 
            be persisted like position, size, etc. See the overview of <see cref="T:Qios.DevSuite.Components.QPersistenceManager" />
            for details on persistence.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPersistableObject.MustBePersistedAfter(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Because persistableObjects are saved in a specific order and loaded in the saved order, this function returns whether a persistableObject
            must be saved after some other persistableObject. This can be used when persisting arrays of items where
            the order of loading matters. Return false when it doesn't matter in which order it is persisted.
            </summary>
      <returns>
            True when the object must be persisted after the specified persistableObject, else false.
            </returns>
      <remarks>
            When 2 persistableObjects return true on each other (so they both must be persisted after each other) or via
             other persistableObjects (a loop) a stackoverflow can occur during the SavePersistableObjects method.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPersistableObject.SavePersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Saves the persistableObject as a childNode of the specified parentElement
            </summary>
      <param name="manager">
            Contains the manager where the PersistableObjects and PersistableHosts can be found.
            </param>
      <param name="parentElement">
            Contains the element where the persistableObject must save is state under. The persistableObject must
            save its state as a child element under the parentElement. You can use <see cref="M:Qios.DevSuite.Components.QPersistenceManager.CreatePersistableObjectElement(Qios.DevSuite.Components.IQPersistableObject,System.Xml.XPath.IXPathNavigable)" />
            to create the appropiate child element.
            </param>
      <returns>The XmlElement that contains the persistableObject. This can be null if nothing had to be persisted.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPersistableObject.LoadPersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable,System.Object)">
      <summary>
            Loads the persistableObject from the specified persistableObjectElement
            </summary>
      <param name="manager">The manager where the PersistableObjects and PersistableHosts can be found</param>
      <param name="persistableObjectElement">The XmlElement that describes the persistableObject.</param>
      <param name="parentState">When a persistableObject loads child persistableObjects itself, it can use the parentState to provide the childs with additional information.</param>
      <returns>True if the persistableObject is succesfully loaded, else false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPersistableObject.UnloadPersistableObject">
      <summary>
            Unloads a persistableObject. This is often called before re-loading the persistableObjects
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPersistableObject.PersistGuid">
      <summary>
            Contains a unique identifier to identify the PersistableObject object with.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPersistableObject.PersistObject">
      <summary>
            Indicates whether this IQPersistableObject should be persisted when it is in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection and <see cref="M:Qios.DevSuite.Components.QPersistenceManager.Save(System.String)" /> is called.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPersistableObject.IsPersisted">
      <summary>
            Defines a state boolean that indicates if the object is already persisted.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPersistableObject.RequiresUnload">
      <summary>
            Gets or sets whether this control requires an unload before loading from a persistableObjectElement.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPersistableObject.CreateNew">
      <summary>
            Indicates that a new instance of this PersistableObject must be created when it is loaded from file.
            If this is false the persistableObject must match an existing persistableObject in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPersistableObject.Name">
      <summary>
            Contains the Name of the object. (Used for reference only)
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.#ctor">
      <summary>
            Default Constructor, creates a QTabControl.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.CreateTabControlConfiguration">
      <summary>
            Creates the QTabControl configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.CreatePainter">
      <summary>
            Creates the QTabControlPainter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.CreateTabStrip(System.Windows.Forms.DockStyle)">
      <summary>
            Creates the QTabStrip for the specified dockPosition.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.CreateAppearanceInstance">
      <summary>
            Overridden. Creates a new <see cref="T:Qios.DevSuite.Components.QAppearance" />.
            </summary>
      <returns>a new <see cref="T:Qios.DevSuite.Components.QAppearance" /></returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.CreateToolTipConfigurationInstance">
      <summary>
            Overridden. Creates a new <see cref="T:Qios.DevSuite.Components.QEnabledToolTipConfiguration" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ShouldSerializeConfiguration">
      <summary>
            Gets whether the Configuration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ResetConfiguration">
      <summary>
            Resets the Configuration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ShouldSerializeTabStripLeftConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ResetTabStripLeftConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ShouldSerializeTabStripTopConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ResetTabStripTopConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ShouldSerializeTabStripRightConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ResetTabStripRightConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ShouldSerializeTabStripBottomConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ResetTabStripBottomConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ActivateTabPage(Qios.DevSuite.Components.QTabPage)">
      <summary>
            Activates the  specified page. Returns true when the page is activated. Returns false if the page is not activated
            because it was invisible or disabled.
            </summary>
      <param name="page">Contains the QTabPage to activate.</param>
      <returns>Whether the page is activated. This is true when the page is accessable, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ActivateNextTabPage(System.Boolean)">
      <summary>
            Activates the next available page. if loopAround is set, then it starts from the start if the end is reached.
            It returns true when a next page is activated.
            </summary>
      <param name="loopAround">Indicates if the activation should loop from the start again if the end is reached.</param>
      <returns>True when a Page is activated, else fase</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ActivatePreviousTabPage(System.Boolean)">
      <summary>
            Activates the previous available page. if loopAround is set, then it starts from the start if the end is reached.
            It returns true when a next page is activated.
            </summary>
      <param name="loopAround">Indicates if the activation should loop from the start again if the end is reached.</param>
      <returns>True when a Page is activated, else fase</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.GetNextAccessibleTabPage(Qios.DevSuite.Components.QTabPage,System.Boolean)">
      <summary>
            Gets the next accessible tabPage from the specified tabPage. Accessible means visible and enabled.
            </summary>
      <param name="fromPage">The page to start from. This can be null, then it starts at the beginning.</param>
      <param name="loopAround">Indicates that when no page is found, it starts from the beginning again</param>
      <returns>The found QTabPage, or null when no QTabPage is found.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.GetPreviousAccessibleTabPage(Qios.DevSuite.Components.QTabPage,System.Boolean)">
      <summary>
            Gets the previous accessible tabPage from the specified tabPage. Accessible means visible and enabled.
            </summary>
      <param name="fromPage">The page to start from. This can be null, then it starts at the end.</param>
      <param name="loopAround">Indicates that when no page is found, it starts from the end again</param>
      <returns>The found QTabPage, or null when no QTabPage is found.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.GetPageWithButtonAtPoint(System.Drawing.Point)">
      <summary>
            Gets the QTabPage whoes button lies on the specified point.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.IsOnStripPart(System.Drawing.Point)">
      <summary>
            Gets whether the specified Point is on a part of a QTabStrip.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.GetNextAccessibleTabButton(Qios.DevSuite.Components.QTabButton,System.Boolean)">
      <summary>
            Tries to find the next accessible QTabButton. fromButton can be null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.GetPreviousAccessibleTabButton(Qios.DevSuite.Components.QTabButton,System.Boolean)">
      <summary>
            Tries to find the previous accessible QTabButton. fromButton can be null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.GetNextAccessibleTabStrip(Qios.DevSuite.Components.QTabStrip,System.Boolean)">
      <summary>
            Gets the next accessible tabStrip. fromStrip can be null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.GetPreviousAccessibleTabStrip(Qios.DevSuite.Components.QTabStrip,System.Boolean)">
      <summary>
            Gets the previous accessible tabStrip. fromStrip can be null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.BeginInit">
      <summary>
            Begins the initialize procedure.
            </summary>
      <remarks>
            When initializing the <see cref="P:Qios.DevSuite.Components.QTabPage.ButtonOrder" /> property
            is not changed when it is not -1 and added to a collection, else it is possible
            that the ButtonOrder of tabbuttons are increased.
            
            Next to that you can set the <see cref="P:Qios.DevSuite.Components.QTabControl.ActiveTabPage" /> property while it the QTabPage is not
            added to the Controls collection yet. Besure that you add the ActiveTabPage to the Controls
            collection before calling EndInit().
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.EndInit">
      <summary>
            Ends the initialize procedure.
            </summary>
      <remarks>
            When initializing the <see cref="P:Qios.DevSuite.Components.QTabPage.ButtonOrder" /> property
            is not changed when it is not -1 and added to a collection, else it is possible
            that the ButtonOrder of tabbuttons are increased.
            
            Next to that you can set the <see cref="P:Qios.DevSuite.Components.QTabControl.ActiveTabPage" /> property while it the QTabPage is not
            added to the Controls collection yet. Besure that you add the ActiveTabPage to the Controls
            collection before calling EndInit().
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.SuspendDraw">
      <summary>
            Suspends painting events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ResumeDraw(System.Boolean)">
      <summary>
            Resumes painting events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.CreateControlsInstance">
      <summary>
            Overridden. Creates the <see cref="T:Qios.DevSuite.Components.QTabControlControlsCollection" /> where the TabPages (and other controls) are stored in.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.Refresh">
      <summary>
            Overridden. Refreshes the control when not suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>
            Overridden. Processes possible keys.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the mouseDown
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the mouse move actions.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles a MouseUp.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnMouseLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the nonclient area mouse leave actions.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Handles a Control add action.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Handles a Control remove action.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden, calculates the layout
            </summary>
      <param name="levent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the TabControl
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>
            Overridden. Raises the DragEnter event.
            </summary>
      <param name="drgevent">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>
            Overridden. Raises the DragOver event.
            </summary>
      <param name="drgevent">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>
            Overridden. Raises the QueryContinueDrag event of the QTabControl
            </summary>
      <param name="qcdevent">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>
            Overridden. Raises the GiveFeedback event of the QTabControl
            </summary>
      <param name="gfbevent">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>
            Overridden. Raises the DragDrop event.
            </summary>
      <param name="drgevent">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnDragLeave(System.EventArgs)">
      <summary>
            Overridden. Raises the DragLeave event.
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnTabButtonDragging(Qios.DevSuite.Components.QTabButtonDragEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabControl.TabButtonDragging" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnTabButtonDropped(Qios.DevSuite.Components.QTabButtonDragEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabControl.TabButtonDropped" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnTabButtonDragOver(Qios.DevSuite.Components.QTabButtonDragEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabControl.TabButtonDragOver" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnActivePageChanging(Qios.DevSuite.Components.QTabPageChangeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabControl.ActivePageChanging" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnActivePageChanged(Qios.DevSuite.Components.QTabPageChangeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabControl.ActivePageChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnHotPageChanged(Qios.DevSuite.Components.QTabPageChangeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabControl.HotPageChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Handles the TimerElapsed event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.HandleConfigurationChanged">
      <summary>
            Handles a change of the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.MustBePersistedAfter(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Indicates if this persistableObject must be saved after an other persistableObject.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.SavePersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Saves this Control to the parentElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.LoadPersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable,System.Object)">
      <summary>
            Loads this Control from the specified persistableObjectElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.UnloadPersistableObject">
      <summary>
            Unloads the persistableObject.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.UpdateTabStripPaintParams(Qios.DevSuite.Components.QTabStripPaintParams)">
      <summary>
            Updates the QTabStripPaintParams with the correct values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControl.UpdateTabControlPaintParams(Qios.DevSuite.Components.QTabControlPaintParams)">
      <summary>
            Updates the QTabControlPaintParams
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.AllowedDragDropTabButtonType">
      <summary>
            Gets the Type which is allowed to drag / drop on this QTabControl.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabControl.TabButtonDragging">
      <summary>
            Gets raised when a QTabButton is about to be dragged from its position
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabControl.TabButtonDropped">
      <summary>
            Gets raised when a QTabButton is dropped on this QTabControl on a valid position
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabControl.TabButtonDragOver">
      <summary>
            Gets raised when a QTabButton is dragged over a QTabButton or a QTabStrip where it can be dropped
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabControl.ActivePageChanging">
      <summary>
            Gets raised when the active QTabPage is about to change.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabControl.ActivePageChanged">
      <summary>
            Gets raised when the active QTabPage is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabControl.HotPageChanged">
      <summary>
            Gets raised when the hot QTabPage is changed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.Font">
      <summary>
            Overridden. Gets or sets the Font
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.Painter">
      <summary>
            Gets or sets the Painter for the QTabControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.Configuration">
      <summary>
            Contains the Configuration for the QTabControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.AllowDrop">
      <summary>
            Gets or sets a value indicating whether the user can drop QTabButtons on this QTabControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.AllowExternalDrop">
      <summary>
            Determines if users can drop QTabButtons from other QTabControls on this QTabControl if the AllowDrop property is also enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.AllowExternalDrag">
      <summary>
            Determines if users can drag QTabButton from this QTabButtons to drop it on another QTabControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.AllowDrag">
      <summary>
            Gets or sets a value indicating whether the user can drag QTabButtons from this QTabControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ToolTipText">
      <summary>
            Overridden. Gets or sets the ToolTip text. Don't use this. This is set via <see cref="P:Qios.DevSuite.Components.QTabPage.ButtonToolTipText" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.Controls">
      <summary>
            Gets the Controls.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ActivateNextKey">
      <summary>
            Defines the key(s) that activates the next QTabPage. Normally this is Control + Tab.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ActivatePreviousKey">
      <summary>
            Defines the key(s) that activates the previous QTabPage. Normally this is Control + Shift + Tab.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabPagesBounds">
      <summary>
            Gets the rectangle that is used to display the tabpages in
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabPagesSize">
      <summary>
            Gets or sets the Size of the TabPages area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ContentShapeBounds">
      <summary>
            Gets the bounds of the contentShape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.DockPadding">
      <summary>
            Is not used for QTabPages on a QTabControl. To specify a space between the TabStrips and the TabPages, use <see cref="P:Qios.DevSuite.Components.QTabControlConfiguration.ContentMargin" />. Dock can be used with
            other controls placed on a QTabControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabStripLeftConfiguration">
      <summary>
            Gets the configuration for the left QTabStrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabStripTopConfiguration">
      <summary>
            Gets the configuration for the top QTabStrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabStripRightConfiguration">
      <summary>
            Gets the configuration for the right QTabStrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabStripBottomConfiguration">
      <summary>
            Gets the configuration for the bottom QTabStrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ActiveTabPageRuntime">
      <summary>
            Gets the actual active QTabPage. this is the current activated page, for Runtime and DesignTime.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ActiveTabPage">
      <summary>
            Gets or sets the active QTabPage. In DesignTime this property always contains the QTabPage set via this property,
            because else the first QTabPage to activate runtime is adjusted when a QTabPage is clicked in DesignTime.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabStripTop">
      <summary>
            Gets the the <see cref="T:Qios.DevSuite.Components.QTabStrip" /> that is used at the top side.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabStripLeft">
      <summary>
            Gets the the <see cref="T:Qios.DevSuite.Components.QTabStrip" /> that is used at the left side.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabStripBottom">
      <summary>
            Gets the the <see cref="T:Qios.DevSuite.Components.QTabStrip" /> that is used at the bottom side.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabStripRight">
      <summary>
            Gets the the <see cref="T:Qios.DevSuite.Components.QTabStrip" /> that is used at the right side.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.BorderWidth">
      <summary>
            Obsolete since 1.0.7.20, use <see cref="P:Qios.DevSuite.Components.QAppearance.BorderWidth" /> instead
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.TabPageCloseBehavior">
      <summary>
            Gets or sets the behavior that occurs when a QTabPage is closed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ShowDropIndicator">
      <summary>
            Gets or sets whether the drop indicator is visible when dragging a QTabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ShowDropWindow">
      <summary>
            Gets or sets a value indicating whether a 50% transparent window with the QTabButton is visible under the cursor when dragging a QTabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.FocusTabButtons">
      <summary>
            Gets or sets whether the QTabButtons can receive the focus.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.WrapTabButtonNavigationAround">
      <summary>
            Gets or sets whether the key navigation (with arrows when focused or CTRL+TAB) of QTabButtons should wrap around.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.AutoScroll">
      <summary>
            Overridden. Always returns false.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.AutoScrollMinSize">
      <summary>
            New. AutoScrollMinSize is not used
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.AutoScrollMargin">
      <summary>
            New. AutoScrollMargin is not used
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ClientAreaMarginTop">
      <summary>
            Overridden. Gets the topmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ClientAreaMarginLeft">
      <summary>
            Overridden. Gets the leftmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ClientAreaMarginRight">
      <summary>
            Overridden. Gets the rightmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.ClientAreaMarginBottom">
      <summary>
            Overridden. Gets the bottommargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.BackColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of first background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.BackColor2PropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of second background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.BorderColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of border color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.PersistGuid">
      <summary>
            Gets or sets the PersistGuid. With this Guid the control is identified in the persistence files.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.PersistObject">
      <summary>
            Gets or sets whether this object must be persisted.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.IsPersisted">
      <summary>
            Gets or sets whether this control is already persisted to a file.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.RequiresUnload">
      <summary>
            Gets whether this control requires an unload before loading from a persistableObjectElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControl.CreateNew">
      <summary>
            Gets or sets whether a new instance of this PersistableObject must be created when it is loaded from file.
            If this is false the persistableObject must match an existing persistableObject in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="T:Qios.DevSuite.Components.QTranslucentWindow">
      <summary>
            The QTranslucentWindow is a window that can be assigned an image with translucent areas. It only shows the image.
            This way nice splashscreens can be build. Use <see cref="P:Qios.DevSuite.Components.QTranslucentWindow.BackgroundImage" /> to set the TranslucentImage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.#ctor(Qios.DevSuite.Components.QTranslucentWindowOptions)">
      <summary>
            Constructor. Creates the QTranslucentWindow with the specified options.
            </summary>
      <param name="options">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.#ctor">
      <summary>
            Constructor. Creates a new QTranslucentWindow with the default options.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.SetLayered(System.Boolean,System.Boolean)">
      <summary>
            Sets the layered property and refreshes when needed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.SetOpacity(System.Double,System.Boolean)">
      <summary>
            Sets the opacity and refreshed when needed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.Refresh">
      <summary>
            Overridden. repaints the form
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.CenterToScreen">
      <summary>
            Centers the TranslucentWindow on the screen.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.ShowCenteredOnScreen">
      <summary>
            Shows the QTranslucentWindow centered on the screen.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.Activate">
      <summary>
            Activates the Window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.Close">
      <summary>
            Closes the window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.SetOwnerWindow(System.Windows.Forms.IWin32Window,System.Boolean)">
      <summary>
            Sets the owner window. If force is true it is always set, no matter whether the current owner window is the same.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.OnCreateControl">
      <summary>
            Overridden. Raises the Load event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.CreateHandle">
      <summary>
            Overridden. Creates the Handle
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles several messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden, sets the VisibleCore
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden lays out the window.
            </summary>
      <param name="levent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.OnPaintMask(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the mask. White for opaque, Black for transparent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTranslucentWindow.Closing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.OnClosed(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTranslucentWindow.Closed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.OnLoad(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTranslucentWindow.Load" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.OnActivated(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTranslucentWindow.Activated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden, Draws the background.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindow.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Window.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTranslucentWindow.Activated">
      <summary>
            Gets raised when the window is activated.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTranslucentWindow.Load">
      <summary>
            Gets raised when the window is loaded.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTranslucentWindow.Closed">
      <summary>
            Gets raised when the window is closed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTranslucentWindow.Closing">
      <summary>
            Gets raised when the window is about to close.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.Opacity">
      <summary>
            Contains the Opacity of the Window. This can be between 0 and 1.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.MinimumSize">
      <summary>
            Gets or sets the MinimumSize of the Window
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.MaximumSize">
      <summary>
            Gets or sets the MaximumSize of the Window
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.TopMost">
      <summary>
            Gets or sets whether this Window is TopMost
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.Owner">
      <summary>
            Gets or sets the Owner (as a Form). To use a Control or something else as an owner use <see cref="P:Qios.DevSuite.Components.QTranslucentWindow.OwnerWindow" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.BackColor">
      <summary>
            Overridden. Gets or sets the BackColor. When the Alpha is smaller then 255 it makes the window layered.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.ForeColor">
      <summary>
            Overridden. Gets the ForeColor of this Control, this is never used on a QControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.ResizeToBackgroundImage">
      <summary>
            Gets or sets if the window should resize to the backgroundImage
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.Site">
      <summary>
            Overridden. Gets or sets the Site.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.OwnerWindow">
      <summary>
            Gets or sets the OwnerWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.OwnerControl">
      <summary>
            Gets or sets the Owner as a Control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.Options">
      <summary>
            Gets or sets additional options for the QTranslucentWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.IsLayered">
      <summary>
            Returns whether this QTranslucentWindow is Layered
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.BackgroundImage">
      <summary>
            Gets or sets the image that is used to show the Window. The translucent areas in this Image will
            make the Window translucent.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindow.CreateParams">
      <summary>
            Overridden. Gets the CreateParams.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.CreatePageConfiguration">
      <summary>
            Creates the QRibbonPageCompositeConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.CreateChildWindowConfiguration">
      <summary>
            Creates the ChildWindowConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.CreateChildCompositeConfiguration">
      <summary>
            Creates the ChildCompositeConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.CreateToolTipConfigurationInstance">
      <summary>
            Overridden. Creates the toolTip configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.CreateBalloon">
      <summary>
            Creates the balloon used for tooltips
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ShouldSerializeChildCompositeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbon.ChildCompositeColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ResetChildCompositeColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbon.ChildCompositeColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ShouldSerializeChildCompositeConfiguration">
      <summary>
            Gets whether the configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ResetChildCompositeConfiguration">
      <summary>
            Resets the configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ShouldSerializeChildWindowConfiguration">
      <summary>
            Gets whether the ChildWindowConfiguration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ResetChildWindowConfiguration">
      <summary>
            Resets the ChildWindowConfiguration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ShouldSerializeDefaultPageConfiguration">
      <summary>
            Gets whether the Configuration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ResetDefaultPageConfiguration">
      <summary>
            Resets the Configuration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.SelectItem(Qios.DevSuite.Components.QCompositeItemBase,Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Selects the specified composite item.
            </summary>
      <param name="item">The item to activate</param>
      <param name="activationType">The activationType to use.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ActivateItem(Qios.DevSuite.Components.QCompositeItemBase,Qios.DevSuite.Components.QCompositeItemActivationOptions,Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Activates an QCompositeItemBase
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.AddAdditionalNavigationControl(Qios.DevSuite.Components.QCompositeControl)">
      <summary>
            Adds an additional navigation control. This control will be included in the hotkey / navigation handling.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.RemoveAdditionalNavigationControl(Qios.DevSuite.Components.QCompositeControl)">
      <summary>
            Removes an additional navigation control that was added via <see cref="M:Qios.DevSuite.Components.Ribbon.QRibbon.AddAdditionalNavigationControl(Qios.DevSuite.Components.QCompositeControl)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.SimulateFocus">
      <summary>
            Simulates a focus. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.LoseSimulatedFocus">
      <summary>
            Loses the simulated focus set by SimulateFocus
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ContainsControl(System.Windows.Forms.Control)">
      <summary>
            Returns whether this QRibbon contains the specified control via the IQPart structure.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.EndInit">
      <summary>
            Overridden. ends the initialize sequence.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.CreateTabStrip(System.Windows.Forms.DockStyle)">
      <summary>
            Creates the QRibbonTabStrip
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.CreateAppearanceInstance">
      <summary>
            Overridden. Creates a QRibbonAppearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.CreateTabControlConfiguration">
      <summary>
            Overridden. Creates the QRibbonConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ShouldSerializeTabStripConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.ResetTabStripConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.UpdateTabStripPaintParams(Qios.DevSuite.Components.QTabStripPaintParams)">
      <summary>
            Overridden. Updates the QTabStripPaintParams with the correct values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.UpdateTabControlPaintParams(Qios.DevSuite.Components.QTabControlPaintParams)">
      <summary>
            Overridden. Updates the QTabControlPaintParams
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.HandleConfigurationChanged">
      <summary>
            Overridden.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Overridden. Handles additional functionality when a Control is added.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Overridden. Handles additional functionality when a Control is removed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnHotPageChanged(Qios.DevSuite.Components.QTabPageChangeEventArgs)">
      <summary>
            Overridden. Handles the HotPage changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Handles the layout.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the QRibbon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnCompositeKeyPress(Qios.DevSuite.Components.QCompositeKeyboardCancelEventArgs)">
      <summary>
            Raises the CompositeKeyPress event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnSelectedItemChanged(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the SelectedItemChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnPaintItem(Qios.DevSuite.Components.QCompositePaintStageEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbon.PaintItem" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnItemActivating(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemActivating" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnItemSelected(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnItemExpanding(Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs)">
      <summary>
            Raises the ItemExpanding event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnItemExpanded(Qios.DevSuite.Components.QCompositeExpandedEventArgs)">
      <summary>
            Raises the ItemExpanded event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnItemCollapsed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the ItemCollapsed event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnItemCollapsing(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the ItemCollapsing event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbon.OnHelpButtonActivated(System.EventArgs)">
      <summary>
            Raises the HelpButtonActivated event.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.Configuration">
      <summary>
            Contains the Configuration for the QRibbon
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.ChildCompositeColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used for child composites.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.ChildCompositeConfiguration">
      <summary>
            Contains the ChildCompositeConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.ChildWindowConfiguration">
      <summary>
            Contains the ChildWindowConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.DefaultPageConfiguration">
      <summary>
            Contains the Configuration for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.ShortcutScope">
      <summary>
            Gets or sets the scope of the shortcuts when HandleShortcutKeys is true
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.FocusTabButtons">
      <summary>
            Overridden. This is not used on a QRibbon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.WrapTabAround">
      <summary>
            Overridden. This is not used on a QRibbon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.WrapTabButtonNavigationAround">
      <summary>
            Overridden. This is not used on a QRibbon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.Caption">
      <summary>
            Gets or sets a possible ribbonCaption. When this is set the RibbonCaption is included in the hotkey handling.
            If you want to add additional Controls that should be included in the hotkey and navigation key handling use
            <see cref="M:Qios.DevSuite.Components.Ribbon.QRibbon.AddAdditionalNavigationControl(Qios.DevSuite.Components.QCompositeControl)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.LaunchBarHost">
      <summary>
            Gets or sets a possible LaunchBarHost. When this is set the LaunchBarHost is included in the hotkey handling.
            If you want to add additional Controls that should be included in the hotkey and navigation key handling use
            <see cref="M:Qios.DevSuite.Components.Ribbon.QRibbon.AddAdditionalNavigationControl(Qios.DevSuite.Components.QCompositeControl)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.Form">
      <summary>
            Gets or sets the Form that this QRibbon controls. It will override default MDI handling and the systemMenu of that form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.MdiButtonsShouldBeVisible">
      <summary>
            Gets whether the MdiButtons should be visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.ActiveRibbonPage">
      <summary>
            Gets the current active RibbonPage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.ActiveRibbonPageComposite">
      <summary>
            Gets the active ribbon page composite
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.CompositeKeyPress">
      <summary>
            Gets raised when the QComposite is about to handle navigation keys that are pressed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.SelectedItemChanged">
      <summary>
            Gets raised when the Selected item is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemSelected">
      <summary>
            Gets raised when the QCompositeItemBase is selected
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemExpanded">
      <summary>
            Gets raised when the item is expanded
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemExpanding">
      <summary>
            Gets raised when the child container is expanding
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemCollapsing">
      <summary>
            Gets raised when the item is collapsing
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemCollapsed">
      <summary>
            Gets raised when the item is collapsed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.PaintItem">
      <summary>
            Gets raised when a layer of the QCompositeItem is painted
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemActivating">
      <summary>
            Gets raised when the QCompositeItemBase is activating
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.ItemActivated">
      <summary>
            Gets raised when the QCompositeItemBase is activated
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbon.HelpButtonActivated">
      <summary>
            Gets raised when the help button is activated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.ExpandedItem">
      <summary>
            Gets the currently expanded item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.SelectedItem">
      <summary>
            Gets the current selected item as a QCompositeItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.ExpandedComposite">
      <summary>
            Gets the QComposite of the currently expanded item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.HasSimulatedFocus">
      <summary>
            Gets whether this Ribbon has Simulated focus.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.AllowedDragDropTabButtonType">
      <summary>
            Overridden. Gets the QRibbonTabButton type.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripConfiguration">
      <summary>
            Gets the configuration used for the QRibbonTabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStrip">
      <summary>
            Gets the Tabstrip used on this QRibbon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripTopConfiguration">
      <summary>
            New. Hides the TopConfiguration. Use the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripConfiguration" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripTop">
      <summary>
            New. Hides the TabStripTop. Use the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStrip" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripLeftConfiguration">
      <summary>
            New. Is not used on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripLeft">
      <summary>
            New. Is not used on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripBottomConfiguration">
      <summary>
            New. Is not used on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripBottom">
      <summary>
            New. Is not used on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripRightConfiguration">
      <summary>
            New. Is not used on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripRight">
      <summary>
            New. Is not used on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.BackColorPropertyName">
      <summary>
            Overridden. Gets the RibbonBackground1 property name
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.BackColor2PropertyName">
      <summary>
            Overridden. Gets the RibbonBackground2 property name
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbon.BorderColorPropertyName">
      <summary>
            Overridden. Gets the RibbonBorder property name
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonAppearance">
      <summary>
            Defines the appearance for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppearance">
      <summary>
            This class is used by controls to define their appearance. It inherits from <see cref="T:Qios.DevSuite.Components.QAppearanceBase" />
            It adds functionality for bordered controls to QAppearanceBase.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQBorderedAdvancedAppearance">
      <summary>
            Defines the interface for appearances that can customize the borders.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQBorderedAdvancedAppearance.ShowBorderLeft">
      <summary>
            gets whether the left border is visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQBorderedAdvancedAppearance.ShowBorderTop">
      <summary>
            gets whether the top border is visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQBorderedAdvancedAppearance.ShowBorderBottom">
      <summary>
            gets whether the bottom border is visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQBorderedAdvancedAppearance.ShowBorderRight">
      <summary>
            gets whether the right border is visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQBorderedAdvancedAppearance.ShowBorders">
      <summary>
            gets whether the borders are visible at all
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearance.PropShowBorders">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearance.PropShowBorderLeft">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearance.PropShowBorderRight">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearance.PropShowBorderTop">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearance.PropShowBorderBottom">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearance.PropBorderWidth">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearance.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearance.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearance.#ctor">
      <summary>
            The default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearance.GetRequestedCount">
      <summary>
            Overridden. gets the requested count for this appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearance.GetDrawControlBackgroundOptions(System.Boolean)">
      <summary>
            Returns the border settings as a QDrawControlBackGroundOptions type.
            </summary>
      <param name="horizontal">
            Defines if the borders must be interpreted for a horizontal oriented item or vertical oriented item.
            When vertical, the ShowBorderTop triggers the QDrawControlBackgroundOptions.DrawLeftRightBorder, etc.
            </param>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearance.ShowBorders">
      <summary>
            Gets or sets whether the borders should be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearance.ShowBorderLeft">
      <summary>
            Gets or sets whether the left border should be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearance.ShowBorderRight">
      <summary>
            Gets or sets whether the right border should be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearance.ShowBorderTop">
      <summary>
            Gets or sets whether the top border should be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearance.ShowBorderBottom">
      <summary>
            Gets or sets whether the bottom border should be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearance.BorderWidth">
      <summary>
            Gets or sets the borderWidth
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabControlPainter">
      <summary>
            This class is responsable for painting and calculating several items of the QTabControl.
            If you want to do some additional painting, override this class, implement the changes and assign it to the <see cref="P:Qios.DevSuite.Components.QTabControl.Painter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlPainter.#ctor">
      <summary>
            Constructor. Creates a new QTabControlPainter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlPainter.DrawContentShape(Qios.DevSuite.Components.QTabControl,System.Drawing.Rectangle,Qios.DevSuite.Components.QTabControlConfiguration,Qios.DevSuite.Components.QTabControlPaintParams,System.Drawing.Graphics)">
      <summary>
            Draws the contentShape of the QTabControl.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlPainter.DrawContentShade(Qios.DevSuite.Components.QTabControl,System.Drawing.Rectangle,Qios.DevSuite.Components.QTabControlConfiguration,Qios.DevSuite.Components.QTabControlPaintParams,System.Drawing.Graphics)">
      <summary>
            Draws the shade of the content shape of the specified tabControl.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollBarConfiguration">
      <summary>
            Contains configuration properties for the QScrollBar
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropButtonAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropButtonMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropButtonPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropButtonMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropScrollAnimated">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropScrollOnMouseOver">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropTrackButtonMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropAlwaysDrawBackground">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropTrackButtonAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.PropDirection">
      <summary>Index of the property </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBarConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBarConfiguration.CreateTrackButtonAppearance">
      <summary>
            Creates the appearance
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBarConfiguration.CreateButtonAppearance">
      <summary>
            Creates the appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBarConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBarConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QScrollBarConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QScrollBarConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.Direction">
      <summary>
            Gets or sets the direction of the scrollbar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.AlwaysDrawBackground">
      <summary>
            Gets or sets which items have a seperate hot style
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.ButtonPadding">
      <summary>
            Gets or sets the padding of the scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.ButtonMargin">
      <summary>
            Gets or sets the margin of the scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.ScrollAnimated">
      <summary>
            Gets or sets whether scrolling must happen animated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.ScrollOnMouseOver">
      <summary>
            Gets or sets whether there must be scrolled when the user hovers with the mouse over a scroll button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.ButtonMask">
      <summary>
            Gets or sets the mask of the scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.UsedButtonMask">
      <summary>
            Gets the used button mask. This depends on whether the mask is set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.TrackButtonMask">
      <summary>
            Gets or sets the mask of the trackbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.UsedTrackButtonMask">
      <summary>
            Gets the used trackbutton mask. This depends on whether the mask is set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.TrackButtonAppearance">
      <summary>
            Gets the appearance of a trackbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" /> or <see cref="T:Qios.DevSuite.Components.QCompositeGroup" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarConfiguration.ButtonAppearance">
      <summary>
            Gets the appearance of a scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" /> or <see cref="T:Qios.DevSuite.Components.QCompositeGroup" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollBarButtonAppearance">
      <summary>
            Contains the appearance for the scroll buttons on a QScrollBar
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBarButtonAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarButtonAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollBarAppearance">
      <summary>
            Contains the appearance for the QScrollBar
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBarAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBarAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeScrollVisibility">
      <summary>
            Defines the scrolling to use on a <see cref="T:Qios.DevSuite.Components.QComposite" /> or <see cref="T:Qios.DevSuite.Components.QCompositeGroup" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollVisibility.None">
      <summary>
            No scrolling
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollVisibility.Automatic">
      <summary>
            Scrolling is made visible automatically when needed.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollVisibility.Always">
      <summary>
            Scrolling is always visible.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeScrollType">
      <summary>
            Defines the type of scrolling to use on a <see cref="T:Qios.DevSuite.Components.QComposite" /> or <see cref="T:Qios.DevSuite.Components.QCompositeGroup" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollType.Button">
      <summary>
            Scrolling happens with buttons.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollType.ScrollBar">
      <summary>
            Scrolling happens with scrollbars.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeScrollBarItem">
      <summary>
            Defines a item on scrollbar
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollBarItem.None">
      <summary>
            No item
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollBarItem.ScrollButton">
      <summary>
            The buttons that scroll up or down
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollBarItem.ScrollBar">
      <summary>
            The bar that can be dragged
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollBarItem.CustomButton">
      <summary>
            A custom button
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextStyle">
      <summary>
            This class is used to create the correct instances of <see cref="T:Qios.DevSuite.Components.QMarkupTextElement" /> based on a tag and define default
            styles for the created element.
            </summary>
      <remarks>
            To define which tag this style handles, set the <see cref="P:Qios.DevSuite.Components.QMarkupTextStyle.DefaultTag" /> or <see cref="P:Qios.DevSuite.Components.QMarkupTextStyle.AdditionalTags" /> property. Use the <see cref="P:Qios.DevSuite.Components.QMarkupTextStyle.ElementType" /> property
            to indicate which type of element should be created. You can also inherit this class and implement <see cref="M:Qios.DevSuite.Components.QMarkupTextStyle.CanRenderNode(System.Xml.XmlNode)" /> and <see cref="M:Qios.DevSuite.Components.QMarkupTextStyle.CreateElement(System.Xml.XmlNode)" />.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.#ctor">
      <summary>
            Creates a new QMarkupTextStyle
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.#ctor(System.String)">
      <summary>
            Creates a new QMarkupTextStyle with the specified defaultTag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.#ctor(System.String,System.Type)">
      <summary>
            Creates a QMarkupTextStype for the specified defaultTag and elementType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.GetUsedTextColor(Qios.DevSuite.Components.QColorScheme,System.Drawing.Color)">
      <summary>
            Gets the used textCoor based on the specified colorScheme and the defaultColor when it is not set.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.GetUsedTextColorHot(Qios.DevSuite.Components.QColorScheme,System.Drawing.Color)">
      <summary>
            Gets the used textColorHot based on the specified colorScheme and the defaultColor when it is not set.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.GetUsedTextColorActive(Qios.DevSuite.Components.QColorScheme,System.Drawing.Color)">
      <summary>
            Gets the used textColorActive based on the specified colorScheme and the defaultColor when it is not set.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.GetUsedTextColorDisabled(Qios.DevSuite.Components.QColorScheme,System.Drawing.Color)">
      <summary>
            Gets the used textColorDisabled based on the specified colorScheme and the defaultColor when it is not set.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.ApplyAllFontDefinitions(Qios.DevSuite.Components.QFontDefinition)">
      <summary>
            Sets all the font definitions to the specified definition.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.CreateElement(System.Xml.XmlNode)">
      <summary>
            Creates a new element that should be used for the specified node.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.CanRenderNode(System.Xml.XmlNode)">
      <summary>
            Returns whether this style can render the specified node. Default this checks the DefaultTag and the AdditionalTags.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyle.Clone">
      <summary>
            Clones this object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.DefaultTag">
      <summary>
            Gets or sets the default tag that this style handles. For additional tags use <see cref="P:Qios.DevSuite.Components.QMarkupTextStyle.AdditionalTags" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.AdditionalTags">
      <summary>
            Gets the additional tags this QMarkupTextStyle can handle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.ElementType">
      <summary>
            Gets or sets the type of element to create during <see cref="M:Qios.DevSuite.Components.QMarkupTextStyle.CreateElement(System.Xml.XmlNode)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.TextColorProperty">
      <summary>
            Gets or sets the TextColor to use. Set it to null to inherit it.
            This can be a string containing a QColorScheme property or a color.
            Because the color is serialized to code as a string it is parsed with the InvariantCulture.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.TextColorHotProperty">
      <summary>
            Gets or sets the TextColor to use for a hot element. Set it to null to inherit it.
            This can be a string containing a QColorScheme property or a color.
            Because the color is serialized to code as a string it is parsed with the InvariantCulture.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.TextColorActiveProperty">
      <summary>
            Gets or sets the TextColor to use for an active element. Set it to null to inherit it.
            This can be a string containing a QColorScheme property or a color.
            Because the color is serialized to code as a string it is parsed with the InvariantCulture.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.TextColorDisabledProperty">
      <summary>
            Gets or sets the TextColor to use for a disabled element, set it to null to inherit it.
            This can be a string containing a QColorScheme property or a color.
            Because the Color is serialized to code as a string it is parsed with the InvariantCulture.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.FontDefinition">
      <summary>
            Gets or sets the default FontDefinition
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.FontDefinitionHot">
      <summary>
            Gets or sets the FontDefinition for a hot element
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.FontDefinitionActive">
      <summary>
            Gets the FontDefinition for an active element.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.CanFocus">
      <summary>
            Gets or sets whether the user can focus the element.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.NewLineBefore">
      <summary>
            Gets or sets whether this style inserts a new line before it is rendered.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.NewLineAfter">
      <summary>
            Gets or sets whether this style inserts a new line after it is rendered.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.AddEmptyPart">
      <summary>
            Gets or sets whether this style adds an empty part with the height of the currentFont to the currentLine. This can be usefull to render empty lines like the 'BR' tag.
            Always combine this property with NewLineAfter
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.WrapText">
      <summary>
            Gets or sets whether this style should wrap text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.ReapplyAttributesOnStateChange">
      <summary>
            Indicates if the the attributes should be reapplied when the state of an element changes.
            This should be set to true when an element is interactive and changes when it is active or hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.CanBeSourceForEvents">
      <summary>
            Indicates that this element can be source for events. If this is not true and an event takes place on this element the parent
            is used as the source (if that has CanBeSourceForEvents set to true).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.ParentMarkupText">
      <summary>
            Gets the parent MarkupText of this style.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyle.ColorScheme">
      <summary>
            Gets the used ColorScheme
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection">
      <summary>
            Is used to maintain a collection of <see cref="T:Qios.DevSuite.Components.QMarkupTextRenderedPart" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection.Add(Qios.DevSuite.Components.QMarkupTextRenderedPart)">
      <summary>
            Adds an part to the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection.Remove(Qios.DevSuite.Components.QMarkupTextRenderedPart)">
      <summary>
            Removes an part from the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection.Contains(Qios.DevSuite.Components.QMarkupTextRenderedPart)">
      <summary>
            Returns whether the collection contains part
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection.IndexOf(Qios.DevSuite.Components.QMarkupTextRenderedPart)">
      <summary>
            Gets the index of the specified part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection.GetPartThatContainsAbsolutePoint(System.Drawing.PointF)">
      <summary>
            Returns the Element that contains the specified absolute point. This is the point calculated in the parent control coordinates.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection.Dispose">
      <summary>
            Disposes the resources used by this partCollection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection.Dispose(System.Boolean)">
      <summary>
            Disposes this partCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPartCollection.Item(System.Int32)">
      <summary>
            Returns the part at index
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextElement">
      <summary>
            QMarkupTextElement defines the base class for elements visible in <see cref="T:Qios.DevSuite.Components.QMarkupText" />. This QMarkupText object is used
            by for example <see cref="T:Qios.DevSuite.Components.QMarkupLabel" /> to show formatted text.
            </summary>
      <remarks>
            a QMarkupTextElement is generally created by a <see cref="T:Qios.DevSuite.Components.QMarkupTextStyle" /> when it is parsing the markup text. It parses an XML Node and creates
            the correct QMarkupTextElement for that node. You can implement your own QMarkTextElement objects and styles. See <see cref="T:Qios.DevSuite.Components.QMarkupText" /> for additional information how to do this.
            </remarks>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElement.AttributeName">
      <summary>
            Defines the attribute name of the 'name' attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElement.AttributeEnabled">
      <summary>
            Defines the attribute name of the 'enabled' attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElement.AttributeWrapText">
      <summary>
            Defines the attribute name of the 'WrapText' attribute.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.#ctor(Qios.DevSuite.Components.QMarkupTextStyle,System.String)">
      <summary>
            Protected constructor. Gets or sets the owningStyle and the Tag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ResetEnabled">
      <summary>
            Resets the enabled property. This removes the attribute so it is inherited from its parent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ResetWrapText">
      <summary>
            Resets the WrapText property. This removes the attribute so it is inherited from its parent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.PutCurrentFont(System.Drawing.Font)">
      <summary>
            Sets the current Font. This should only be called during <see cref="M:Qios.DevSuite.Components.QMarkupTextElement.ApplyElementAttributes" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.PutCurrentColor(System.Drawing.Color)">
      <summary>
            Puts the Current Color. This should only be called during <see cref="M:Qios.DevSuite.Components.QMarkupTextElement.ApplyElementAttributes" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.AnyParentReapliesAttributesOnStateChange">
      <summary>
            Returns whether any parent of this element reapplies the attributes on a state change.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ContainsOrIsElement(Qios.DevSuite.Components.QMarkupTextElement)">
      <summary>
            Returns whether this element contains or is the specified element.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ContainsElement(Qios.DevSuite.Components.QMarkupTextElement)">
      <summary>
            Gets whether this element contains the specified element.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.FindElement(System.String)">
      <summary>
            Finds the element with the specified name in all the child elements and their child elements.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.FindElement(System.String,System.Boolean)">
      <summary>
            Finds the element with the specified name in its elements collection. If deep is specified, it searches all the child elements of the child elements too.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.IsOrHasParentOfType(System.Type)">
      <summary>
            Gets whether this or a parent is of the specified type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.GetElementThatContainsAbsolutePoint(System.Drawing.PointF)">
      <summary>
            Returns the element that contains the absolute point. This is the point calculated in the parent control coordinates.
            </summary>
      <param name="point">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ContainsAbsolutePoint(System.Drawing.PointF)">
      <summary>
            Indicates if the specified absolute point is located in this element. This is the point calculated in the parent control coordinates.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.SetAttributeValue(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
            Sets the attribute value with the specified name. Creates the attribute if it does not exists.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ResetAttributeValue(System.String,System.Boolean,System.Boolean)">
      <summary>
            Resets the attribute with the specified name.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.GetAttributeAsString(System.String,System.String)">
      <summary>
            Gets the attribute with the specified name from the <see cref="P:Qios.DevSuite.Components.QMarkupTextElement.MarkupNode" />. Returns defaultValue when there is none.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.GetAttributeAsString(System.String)">
      <summary>
            Gets the attribute with the specified name from the <see cref="P:Qios.DevSuite.Components.QMarkupTextElement.MarkupNode" />. Returns String.Empty when there is none.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.GetNextTextPart(System.String,System.Int32@,Qios.DevSuite.Components.QMarkupTextParams,System.Single,System.Boolean,System.Drawing.SizeF@,System.Int32[]@)">
      <summary>
            Returns the next textPart that fits inside maximumWidth from startIndex
            </summary>
      <param name="text">The text to get the part from</param>
      <param name="startIndex">The index to start at, After this method the startIndex contains a new startIndex.</param>
      <param name="textParams">Contains the textParams used to render</param>
      <param name="maximumWidth">Contains the maximum width the text can have.</param>
      <param name="removeStartingSpace">Indicates that no starting space should be included</param>
      <param name="textSize">Out. Contains the textSize of the part that is returned.</param>
      <param name="stringWidths">Contains the widths of the textPart for every character.</param>
      <returns>
            The part from startIndex when found.
            When there are no characters left to parse it returns null.
            If no word fits in the current width it returns an Empty string.
            </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.AddPart(Qios.DevSuite.Components.QMarkupTextRenderedPart,Qios.DevSuite.Components.QMarkupTextParams)">
      <summary>
            Adds a part to the CurrentLine of the TextParams and to the Parts collection of this element.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.RenderString(System.String,Qios.DevSuite.Components.QMarkupTextParams)">
      <summary>
            Renders a a text on the current textParams.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.RenderEmptyPart(Qios.DevSuite.Components.QMarkupTextParams)">
      <summary>
            Adds a <see cref="T:Qios.DevSuite.Components.QMarkupTextRenderedPart" /> with the height and baseLine of the current font. This can be usefull
            for empty line tags like 'BR'.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.RetrieveCurrentFontDefinition">
      <summary>
            Retrieves the current FontDefintion based the parent font and the state of this element.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.RetrieveCurrentTextColor">
      <summary>
            Retrieves the current TextColor based on the state of this element.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ProcessMarkup(System.Xml.XmlNode)">
      <summary>
            Processes the node and creates the required child elements.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ApplyAttributes">
      <summary>
            Applies alle the attributes. element and childAttributes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ApplyElementAttributes">
      <summary>
            Applies the attributes to this element. It sets the CurrentFont and CurrentColor, etc. to the properties defined in the owningStyle, the attributes on the markupNode or the parentElement.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.ApplyChildAttributes">
      <summary>
            Applies the child attributes. this Calls ApplyAttributes for every child.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.GetSourceForEvents">
      <summary>
            Gets the Source that should be used for events. This can be this element or the first parent that has
            <see cref="P:Qios.DevSuite.Components.QMarkupTextElement.CanBeSourceForEvents" /> set to true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.RenderElement(Qios.DevSuite.Components.QMarkupTextParams)">
      <summary>
            Renders this element and the ChildElemens to the lines of the specified textParams.
            </summary>
      <remarks>
            When implementing this method you shoud add instances of <see cref="T:Qios.DevSuite.Components.QMarkupTextRenderedPart" /> to <see cref="P:Qios.DevSuite.Components.QMarkupTextParams.CurrentLine" />.
            If you want to add a line call <see cref="M:Qios.DevSuite.Components.QMarkupTextParams.AddLine" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.RenderChildElements(Qios.DevSuite.Components.QMarkupTextParams)">
      <summary>
            Renders the ChildElemens to the lines of the textParams.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.Draw(System.Drawing.Graphics)">
      <summary>
            Draws the element on the graphics. This usually draws all the rendered parts beloning to this element. 
            After that it draws the child Elements if it has any.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.OnMouseEnter(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupTextElement.MouseEnter" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.OnMouseLeave(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupTextElement.MouseLeave" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.OnMouseDown(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupTextElement.MouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.OnMouseUp(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupTextElement.MouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.OnMouseClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupTextElement.MouseClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.OnLinkClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupTextElement.LinkClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.OnGotFocus(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupTextElement.GotFocus" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.OnLostFocus(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupTextElement.LostFocus" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.Dispose">
      <summary>
            Disposes the resources used by this part
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.DisposeAttributes(System.Boolean)">
      <summary>
            Disposes the attributes of this element. When deep is true all the child elements will dispose their contents true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.DisposeRenderedObjects(System.Boolean)">
      <summary>
            Disposes the rendered objects. When deep is true all the child elements will dispose their contents true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.Dispose(System.Boolean)">
      <summary>
            Disposes this part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElement.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupTextElement.MouseEnter">
      <summary>
            Occurs when the mouse enters an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupTextElement.MouseLeave">
      <summary>
            Occurs when the mouse leaves an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupTextElement.MouseDown">
      <summary>
            Occurs when the user presses the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupTextElement.MouseUp">
      <summary>
            Occurs when the user releases the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupTextElement.MouseClick">
      <summary>
            Occurs when the user clicks on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupTextElement.LinkClick">
      <summary>
            Occurs when the user clicks on a link.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupTextElement.GotFocus">
      <summary>
            Occurs when an element gets the focus
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupTextElement.LostFocus">
      <summary>
            Occurs when an element lost the focus
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.Tag">
      <summary>
            Gets the tag for this element.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.Name">
      <summary>
            Gets or sets the value of the 'name' attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.IsAccessible">
      <summary>
            Gets whether this element is accessible. If the element is accessible it raises mouse events.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.Enabled">
      <summary>
            Gets or sets the value of the 'enabled' attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.ParentWrapText">
      <summary>
            Gets whether the parent wraps the text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.WrapText">
      <summary>
            Gets or sets the value of the 'WrapText' attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.Active">
      <summary>
            Gets whether this is active
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.Hot">
      <summary>
            Gets whether this is hot
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.Focused">
      <summary>
            Gets whether this element is focused.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.ParentFont">
      <summary>
            Gets the parent Font.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.CurrentFont">
      <summary>
            Gets the Current Font
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.ParentColor">
      <summary>
            Gets the Parent Color
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.CurrentColor">
      <summary>
            gets the Current Color
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.ParentElement">
      <summary>
            Gets the Parent element.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.OwningStyle">
      <summary>
            Gets or sets the owner markup text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.OwningMarkupText">
      <summary>
            Gets the owning MarkupText
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.MarkupNode">
      <summary>
            Gets the Xml MarkupNode that identifies this element.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.HasElements">
      <summary>
            Gets whether this element has elements.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.Elements">
      <summary>
            Gets the child elements in this element. If this element does not have elements and this property is called,
            the element collection is created. So call <see cref="P:Qios.DevSuite.Components.QMarkupTextElement.HasElements" /> to avoid unnecessary creation.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.HasParts">
      <summary>
            Gets whether this element has parts.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.Parts">
      <summary>
            Gets the rendered parts for this element. If this element does not have parts and this property is called
            the parts  collection is created. So call <see cref="P:Qios.DevSuite.Components.QMarkupTextElement.HasParts" />  to avoid unnecessary creation.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.CanFocus">
      <summary>
            Indicates if the user can focus this element or one of its parents.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.CanBeSourceForEvents">
      <summary>
            Indicates that this element can be source for events. If this is not true and an event takes place on this element the parent
            is used as the source (if that has CanBeSourceForEvents set to true).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElement.ReapplyAttributesOnStateChange">
      <summary>
            Indicates if the attributes should be reapplied when the state of an element changes.
            This should be set to true when an element is interactive and changes its font or color when it is active or hot.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextElementEventHandler">
      <summary>
            Defines the event handler used for controls using on <see cref="T:Qios.DevSuite.Components.QMarkupText" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextElementEventArgs">
      <summary>
            Defines the event args used by events events on controls using <see cref="T:Qios.DevSuite.Components.QMarkupText" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementEventArgs.#ctor(Qios.DevSuite.Components.QMarkupTextElement,System.Windows.Forms.MouseEventArgs)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementEventArgs.Element">
      <summary>
            Gets the element the event was raised on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementEventArgs.HRef">
      <summary>
            Gets the Href of the element when the element is a <see cref="T:Qios.DevSuite.Components.QMarkupTextElementAnchor" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementEventArgs.MouseArgs">
      <summary>
            Gets possible MouseEventArgs when there are additional arguments. This can be null.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupText">
      <summary>
            The QMarkupText object is used by <see cref="T:Qios.DevSuite.Components.QMarkupLabel" /> and <see cref="T:Qios.DevSuite.Components.QBalloon" /> to show formatted text. For this purpose it implements a small subset of HTML. This should be written
            in legal XML. So when formatting, be sure to end empty tags like 'BR' with a slash like this is done in XML. Next to formatting
            you can make the QMarkupText interactive by using anchors.
            </summary>
      <remarks>
            To see the tags that can be used in QMarkupText, see the <a href="088eec04-2535-4aeb-9092-638574e8a38b.htm">QMarkupText XML Reference</a>.<br /><br />
            You can implement your own elements or styles to use with the QMarkupText. To do this, do the following:
            <list><item>
            inherit a class from <see cref="T:Qios.DevSuite.Components.QMarkupTextStyle" />. This class is responsible for creating the element.
            </item><item></item>Inherit if needed a a class from <see cref="T:Qios.DevSuite.Components.QMarkupTextElement" /> and return a new instance of this element in the <see cref="M:Qios.DevSuite.Components.QMarkupTextStyle.CreateElement(System.Xml.XmlNode)" /> method or set the <see cref="P:Qios.DevSuite.Components.QMarkupTextStyle.ElementType" /> to the type of this element.
            <item>
            Implement the required methods like <see cref="M:Qios.DevSuite.Components.QMarkupTextElement.ApplyElementAttributes" />, <see cref="M:Qios.DevSuite.Components.QMarkupTextElement.RenderElement(Qios.DevSuite.Components.QMarkupTextParams)" /> or <see cref="M:Qios.DevSuite.Components.QMarkupTextElement.Draw(System.Drawing.Graphics)" />.
            </item><item>
            Add an instance of your new created style to the <see cref="P:Qios.DevSuite.Components.QMarkupText.CustomStyles" /> collection.
            </item></list></remarks>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPartSizedContent">
      <summary>
            Defines an interface for custom part contents with a size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartSizedContent.CalculateSize(Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Can Calculate the size based on the layoutContext.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPartSizedContent.Size">
      <summary>
            Gets the size of the content object
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPartSizedContent.ContentObject">
      <summary>
            Gets the content object
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultTagAnchor">
      <summary>
            Defines the default Anchor tag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultTagBold">
      <summary>
            Defines the default Bold tag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultTagBig">
      <summary>
            Defines the default Big tag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultTagBR">
      <summary>
            Defines the default BR tag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultTagItalic">
      <summary>
            Defines the default Italic tag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultTagFont">
      <summary>
            Defines the default Font tag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultNobreak">
      <summary>
            Defines the default Nobreak tag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultTagUnderline">
      <summary>
            Defines the default Underline tag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultTagParagraph">
      <summary>
            Defines the default Paragraph tag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupText.DefaultTagSmall">
      <summary>
            Defines the default Small tag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupText.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupText.ShouldSerializeConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupText.ResetConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupText.GetStyleForNode(System.Xml.XmlNode)">
      <summary>
            Returns the style that can render the specified node.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupText.SuspendProcessing">
      <summary>
            Suspends any processing or layout methods. This can be usefull when configuring the QMarkupText or changing
            much styles. Be sure to call <see cref="M:Qios.DevSuite.Components.QMarkupText.ResumeProcessing(System.Boolean)" /> when done.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupText.ResumeProcessing(System.Boolean)">
      <summary>
            Resumes the processing suspended by <see cref="M:Qios.DevSuite.Components.QMarkupText.SuspendProcessing" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupText.OnUpdateRequested(Qios.DevSuite.Components.QCommandUIRequestEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupText.UpdateRequested" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupText.Clone">
      <summary>
            Clones this object.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupText.UpdateRequested">
      <summary>
            Occurs when the QMarkupText requests an update of the UI.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Root">
      <summary>
            Gets the RootElement of the MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.CustomStyles">
      <summary>
            Gets the collection with custom styles.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Enabled">
      <summary>
            Gets or sets whether this is enabled
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Bounds">
      <summary>
            Gets the Bounds.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Size">
      <summary>
            Gets the Size
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Location">
      <summary>
            Gets the Location.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Left">
      <summary>
            Gets the Left
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Top">
      <summary>
            Gets the Top
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Width">
      <summary>
            Gets the Width
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Height">
      <summary>
            Gets the Height
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.LastCalculatedSize">
      <summary>
            Contains the last actual calculated size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Configuration">
      <summary>
            Gets the configuration for the QMarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.Font">
      <summary>
            Contains the Font to use for elements withouth a Font.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.TextColor">
      <summary>
            Contains the TextColor to use for elements without a color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.ColorScheme">
      <summary>
            Contains the ColorScheme that is used to get the Colors from.
            You need to call ApplyAttributes(
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.MarkupText">
      <summary>
            Gets or sets the MarkupText for this QMarkupText
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.HotElement">
      <summary>
            Gets the Hot Element
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.ActiveElement">
      <summary>
            Gets the Active Element
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.FocusedElement">
      <summary>
            Gets the Focused Element
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupText.ClippingBounds">
      <summary>
            Gets the clipping bounds of this QMarkupText.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextParams">
      <summary>
            Is used to pass data to the various methods when a <see cref="T:Qios.DevSuite.Components.QMarkupText" /> object is rendered.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextParams.#ctor">
      <summary>
            Constructor without params
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextParams.#ctor(System.Drawing.Graphics)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextParams.AddLine">
      <summary>
            Adds a line to the Lines collection and sets CurrentLine to that line.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextParams.Graphics">
      <summary>
            Gets or sets the Graphics to calculate and paint on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextParams.CurrentLine">
      <summary>
            Gets the Current Line. The fontToCalculateHeight is used to calculate the height of a (possible) new line
            when it is empty.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxPainter">
      <summary>
            This class is responsable for painting and calculating the sizes of <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            If you want to do some additional painting, override this class, implement the changes and assign it to the <see cref="P:Qios.DevSuite.Components.QInputBox.Painter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPainter.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPainter.LayoutInputBox(Qios.DevSuite.Components.QInputBox,Qios.DevSuite.Components.QInputBoxPaintParams)">
      <summary>
            Calculates the QInputBox layout
            </summary>
      <param name="inputBox">QInputBox to layout</param>
      <param name="paintParams">QInputBoxPaintParams that contains the parameters</param>
      <returns>True if the NonClientArea has to be recalculated because the size changed, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPainter.DrawInputBox(Qios.DevSuite.Components.QInputBox,Qios.DevSuite.Components.QInputBoxPaintParams,System.Windows.Forms.PaintEventArgs)">
      <summary>
            Draws the QInputBox based on the calculations of the LayoutInputBox method.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPainter.DrawInputBoxButtons(Qios.DevSuite.Components.QInputBox,Qios.DevSuite.Components.QInputBoxPaintParams,System.Windows.Forms.PaintEventArgs)">
      <summary>
            Draws the buttons of the QInputBox based on the calculations of the LayoutInputBox method.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPainter.DrawInputBoxButton(Qios.DevSuite.Components.QInputBoxButtonType,Qios.DevSuite.Components.QInputBoxButtonDrawType,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Image,Qios.DevSuite.Components.QInputBox,System.Windows.Forms.PaintEventArgs)">
      <summary>
            Draws a button of the QInputBox based on the calculations of the LayoutInputBox method.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPainter.DrawInputBoxBackground(Qios.DevSuite.Components.QInputBox,Qios.DevSuite.Components.QInputBoxPaintParams,System.Windows.Forms.PaintEventArgs)">
      <summary>
            Draws the background of the QInputBox based on the calculations of the LayoutInputBox method.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPainter.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPainter.Dispose">
      <summary>
            Disposes the Painter
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPainter.Dispose(System.Boolean)">
      <summary>
            Disposes this painter.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPainter.Win32Window">
      <summary>
            Gets or sets a Win32Window that is used to open or close ThemeData with when needed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxPaintParams">
      <summary>
            Contains information about the drawing procedure of the QInputBox
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxPaintParams.#ctor">
      <summary>
            Contructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPaintParams.PaintTransparentBackground">
      <summary>
            Gets or sets whether a transparent background must be painted. When this is false the background color of the parent is painted on this Control.
            This can increase performance. Set this to false when the Control is situated on a Parent with a solid background or when the control has a rectangular filled out shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPaintParams.UpButtonBounds">
      <summary>
            Gets or sets the bounds of the UpButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPaintParams.UpImageBounds">
      <summary>
            Gets or sets the bounds of the UpButton image
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPaintParams.DownButtonBounds">
      <summary>
            Gets or sets the bounds of the DownButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPaintParams.DownImageBounds">
      <summary>
            Gets or sets the bounds of the DownButton image
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPaintParams.DropDownButtonBounds">
      <summary>
            Gets or sets the bounds of the DropDownButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPaintParams.DropDownImageBounds">
      <summary>
            Gets or sets the bounds of the image of the DropDownButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPaintParams.ClientAreaMargin">
      <summary>
            Gets or sets the client area margin of the QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxPaintParams.BackgroundBounds">
      <summary>
            Gets or sets the bounds of the background of the QInputBox. 
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxButtonType">
      <summary>
            Defines the possible buttons of a QInputBox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonType.UpButton">
      <summary>
            The button that is used as the top button of a NumericUpDown control.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonType.DownButton">
      <summary>
            The button that is used as the bottom button of a NumericUpDown control.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonType.DropDownButton">
      <summary>
            The button that is used as the button of a ComboBox
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QGlobalColorSchemeManager">
      <summary>
            This is a manager that makes it possible to define the <see cref="T:Qios.DevSuite.Components.QGlobalColorScheme" /> in design-time.
            If you want to manage the <see cref="T:Qios.DevSuite.Components.QGlobalColorScheme" /> in code, then adjust the <see cref="P:Qios.DevSuite.Components.QColorScheme.Global" /> property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalColorSchemeManager.ShouldSerializeGlobal">
      <summary>
            Returns whether the <see cref="P:Qios.DevSuite.Components.QGlobalColorSchemeManager.Global" /> changes from its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalColorSchemeManager.ResetGlobal">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QGlobalColorSchemeManager.Global" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalColorSchemeManager.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Constructor. Creates the manager and adds it to container.
            </summary>
      <param name="container">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalColorSchemeManager.#ctor">
      <summary>
            Constructor. Creates the manager.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGlobalColorSchemeManager.Global">
      <summary>
            Returns the <see cref="P:Qios.DevSuite.Components.QColorScheme.Global" />. Editing this value has influence on the complete application.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemControl">
      <summary>
            Defines one item in a <see cref="T:Qios.DevSuite.Components.QComposite" /> that can contain a Control.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQCompositeItemControl">
      <summary>
            Defines the interface for QCompositeItemBase types that can have a control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQCompositeItemControl.Control">
      <summary>
            Gets or sets the control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.SetControlSize(System.Drawing.Size,System.Boolean)">
      <summary>
            Sets the ControlSize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.SetControl(System.Windows.Forms.Control,System.Boolean)">
      <summary>
            Sets the control to the specified value. Notify parent indicates if recalculation is required.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeControl
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.SetDisplayParent(Qios.DevSuite.Components.IQManagedLayoutParent)">
      <summary>
            Overridden. Sets the parent of the control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.MoveUnclonablesToClone">
      <summary>
            Overridden. Moves the Control to the LastClonedItem
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.RestoreUnclonablesFromClone">
      <summary>
            Overridden. Restores the Control from the LastClonedItem that was moved with <see cref="M:Qios.DevSuite.Components.QCompositeItemControl.MoveUnclonablesToClone" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.HandleAncestorEnabledChanged">
      <summary>
            Is called when an ancestor is set enabled / disabled. This sets the Control enabled state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.HandleAncestorVisibilityChanged">
      <summary>
            Overridden. Is called when an ancestor is set visible / invisible. This sets the Control visibility state.
            This method is not called if the visibility is changed via the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.HandleScrollingStage(Qios.DevSuite.Components.IQScrollablePart,Qios.DevSuite.Components.QScrollablePartScrollStage)">
      <summary>
            Overridden. Handles a scrolling stage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControl.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Handles a paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemControl.Control">
      <summary>
            Contains the control for this QCompositeItemControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemControl.ControlSize">
      <summary>
            Gets or sets the preferd size of the Control. This is maintained separatly because when the item is stretched
            the size changes constantly and gets serialized in design. This property is taken over from the control
            when the hierarchy is not initializing.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemControl.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemControl.AssociatedComponents">
      <summary>
            Overridden. Gets the designable items.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeIcon">
      <summary>
            Defines one item in a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeIcon
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.ShouldSerializeIcon">
      <summary>
            Returns whether the Icon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.ResetIcon">
      <summary>
            Resets the Icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.SetIcon(System.Drawing.Icon,System.Boolean)">
      <summary>
            Sets the icon and lets you specify whether the parent must be notified.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.ShouldSerializeDisabledIcon">
      <summary>
            Returns whether the Icon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.ResetDisabledIcon">
      <summary>
            Resets the Icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIcon.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Handles a paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIcon.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIcon.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIcon.Icon">
      <summary>
            Gets or sets the Icon of the QCompositeIcon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIcon.IconResourceName">
      <summary>
            Gets or sets a possible resource name to load the Icon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIcon.IconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIcon.DisabledIcon">
      <summary>
            Gets or sets the Icon of the QCompositeIcon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIcon.DisabledIconResourceName">
      <summary>
            Gets or sets a possible resource name to load the Icon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIcon.DisabledIconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIcon.UsedIcon">
      <summary>
            Gets the Icon that is used. This is determined by whether the item is enabled or disableds.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropLayout">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropExpandBehavior">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropExpandingDelay">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropPressedBehaviour">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropInheritWindowsSettings">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropHotkeyPrefixVisibilityType">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropExpandDirection">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropIconBackgroundVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropIconBackgroundMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropIconBackgroundSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropHotkeyWindowConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropHotkeyWindowShowBehavior">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.PropScrollConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.CreateAppearance">
      <summary>
            Creates the appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.CreateScrollConfiguration">
      <summary>
            Creates the scrollConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetMinimumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. Gets the minimumsize. If the MinimumSize was configured as 0,0 the minimum size of the shape will be used.
            If the item is on a QContainerControl that minimum size will be considered  also.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. Gets the paddings.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetExpandDirection(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the Expand direction for the specified part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetExpandBehavior(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the Expand behavior for the specified part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetExpandingDelay(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the Expand delay for the specified part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetPressedBehavior(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the Pressed behavior for the specified part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetInheritWindowsSettings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns whether the windows settings must be inherited.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetHotkeyPrefixVisibilityType(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the hotkey prefix visibility type for the specified part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetHotkeyWindowShowBehavior(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the HotkeyWindow show behavior for the specified part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetHotkeyWindowConfiguration(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the hotkeyWIndow configuration for the specified part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetIconBackgroundVisible(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns whether the iconbackground must be visible
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetIconBackgroundMargin(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the icon background margin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetIconBackgroundSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the icon background size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetAppearance(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the appearance to use.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetLayout(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the layout to use.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeConfiguration.GetScrollConfiguration(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the configuration to use.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Not used on a QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.ExpandDirection">
      <summary>
            Gets or sets the direction a QCompositeItem will expand to when it contains child QCompositeItems.
            This can be overridden by the QCompositeItems.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.ExpandBehavior">
      <summary>
            Gets or sets the behaviour for expanded or expanding items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.ExpandingDelay">
      <summary>
            Gets or sets the delay for expanding items that have CompositeChildItems when hovering above the item
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.InheritWindowsSettings">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QComposite" /> should inherit WindowsSettings like showing hotkeys
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.HotkeyPrefixVisibilityType">
      <summary>
            Gets or sets if the hotkey prefix (underline) should always be visible, only when Alt is pressed or never.
            This is not used when <see cref="P:Qios.DevSuite.Components.QCompositeConfiguration.InheritWindowsSettings" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.UsedHotkeyPrefixVisibilityType">
      <summary>
            Gets the used HotkeyVisibility type. This depends on whether the WindowsSettings are inherited.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.PressedBehaviour">
      <summary>
            Gets or sets the behaviour for pressed items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.IconBackgroundVisible">
      <summary>
            Gets or sets whether the icon background of the QCompositeMenu is visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.IconBackgroundMargin">
      <summary>
            Gets or sets the margin of the icon background
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.IconBackgroundSize">
      <summary>
            Gets or sets the size of the icon background
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.HotkeyWindowConfiguration">
      <summary>
            Gets the configuration for the HotkeyWindow. This window is displayed when ALT is pressed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.HotkeyWindowShowBehavior">
      <summary>
            Gets or sets the show behavior of the QHotkeyWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.Layout">
      <summary>
            Gets or set the layout of the QCompositeItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.Appearance">
      <summary>
            Gets the appearance of a <see cref="T:Qios.DevSuite.Components.QComposite" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeConfiguration.ScrollConfiguration">
      <summary>
            Gets the scrollconfiguration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeAppearance">
      <summary>
            Contains the appearance for qcompositeitems.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeAppearance.Shape">
      <summary>
            Gets or sets the shape of this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeOrderedConfiguration">
      <summary>
            Defines a configuration for a QComposite that has a set of predefined child items that can be ordered
            with the <see cref="P:Qios.DevSuite.Components.QCompositeOrderedConfiguration.ContentLayoutOrder" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeOrderedConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeOrderedConfiguration.ContentLayoutOrder">
      <summary>
            Gets or sets the content layout order of the child parts. This defines when a part is layed out.
            The actual position is also determined by the alignment of a part.
            Set this string to String.Empty (not null) when you want to order manually or want to add parts.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QBalloonWindowConfiguration">
      <summary>
            Defines configuration properties for QBalloonWindows.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapedWindowConfiguration">
      <summary>
            Defines configuration properties for QShapedWindows.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropAutoMinimumSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropShadeVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropShadePosition">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropShadeGradientSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropCanSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropCanMove">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropCanClose">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropLayered">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropTopMost">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropMinimumSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropMaximumSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropCloseButtonOffset">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropInheritWindowsSettings">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropCustomCloseButtonMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropCloseButtonStyle">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropCustomCloseButtonSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropButtonAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.PropReceivesMouseMessages">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowConfiguration.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QShapedWindowConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowConfiguration.Dispose">
      <summary>
            Disposes the Configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowConfiguration.Dispose(System.Boolean)">
      <summary>
            Disposes this Configuration.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QShapedWindowConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of this configuration changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.ButtonAppearance">
      <summary>
            Gets or sets the button appearance
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.CustomCloseButtonSize">
      <summary>
            Gets or sets the size of the custom close button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.CloseButtonStyle">
      <summary>
            Gets or sets the style of the close button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.UsedCustomCloseButtonMask">
      <summary>
            Gets the used custom restore button mask. This depends on whether <see cref="P:Qios.DevSuite.Components.QShapedWindowConfiguration.CustomCloseButtonMask" /> is set.
            When this is not set the default is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.CustomCloseButtonMask">
      <summary>
            Gets or sets the CloseButton Mask when custom buttons are drawn.
            In the Mask the Color Red is replaced by the TextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.MinimumSize">
      <summary>
            Gets or sets the minimum size of the window. This will not be used when <see cref="P:Qios.DevSuite.Components.QShapedWindowConfiguration.AutoMinimumSize" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.MaximumSize">
      <summary>
            Gets or sets the maximum size of the window. This will not be used when <see cref="P:Qios.DevSuite.Components.QShapedWindowConfiguration.AutoMinimumSize" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.ReceivesMouseMessages">
      <summary>
            Gets or sets if the QShapedWindow receives mouse messages or that the underlying window receives them.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.Layered">
      <summary>
            Gets or sets if the window is a layered form. Non-layered forms are not anti-aliased, and do not have a dropshadow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.TopMost">
      <summary>
            Gets or sets whether the window is topmost. This can be used to display the window above the taskbar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.InheritWindowsSettings">
      <summary>
            Gets or sets whether the QBalloonWindow should inherit WindowsSettings like drawing a shade.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.AutoMinimumSize">
      <summary>
            Determines if the QShapedWindow may set its own MinimumSize, based on the shape and the configuration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.ShadeVisible">
      <summary>
            Gets or sets if the window has shading.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.ShadePosition">
      <summary>
            Gets or sets the position of the shade
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.ShadeGradientSize">
      <summary>
            Contains the size in pixels of the gradient (edges) of the shade.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.CanSize">
      <summary>
            Gets or sets if the window can size
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.CanMove">
      <summary>
            Gets or sets if the window can move
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.CanClose">
      <summary>
            Gets or sets if the user can close the QShapedWindow.
            If true, a close button will appear at the top right corner
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowConfiguration.CloseButtonOffset">
      <summary>
            Gets or sets the close button offset.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.PropWrapText">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.PropDrawTextOptions">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.PropTextAlign">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.PropTextPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.PropDrawText">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.PropAutoSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.PropCanActivate">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.PropMarkupTextEnabled">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.PropLocationOffset">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindowConfiguration.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindowConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindowConfiguration.LocationOffset">
      <summary>
            Gets or sets a location offset of the QBalloonWindow. This offset can be used to adjust the starting location of a QBalloonWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindowConfiguration.MarkupTextEnabled">
      <summary>
            Gets or sets whether the MarkupText object is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindowConfiguration.TextAlign">
      <summary>
            Gets or sets the alignment of the text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindowConfiguration.WrapText">
      <summary>
            Gets or sets whether the text must be wrapped.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindowConfiguration.DrawTextOptions">
      <summary>
            Gets or sets additional options for drawing text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindowConfiguration.CanActivate">
      <summary>
            Gets or sets if the window can be activated by the mouse.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindowConfiguration.DrawText">
      <summary>
            Gets or sets if the QBalloonWindow draws its Text property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindowConfiguration.AutoSize">
      <summary>
            Gets or sets if the QBalloon automatically sizes based on the text in the Text property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindowConfiguration.TextPadding">
      <summary>
            Gets or sets the padding of the text
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppStateIndicatorType">
      <summary>
            This enumeration is used by <see cref="T:Qios.DevSuite.Components.QAppStateIndicatorItem" /> to indicate how the state of an
            item should be represented in the MainState.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppStateIndicatorType.NotInMain">
      <summary>
            The state of the QAppStateIndicatorItem should not be used in the MainState.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppStateIndicatorType.OneInMain">
      <summary>
            When the state of the QAppStateIndicatorItem is greater than zero then use
            just one 1 the MainState.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppStateIndicatorType.AllInMain">
      <summary>
            When the state of the QAppStateIndicatorItem is greater than zero then add
            the current value of that state in the MainState.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppStateIndicator">
      <summary>
            The QAppStateIndicator makes it possible to create a stack of different application states. This stack
            can be increased or decreased with different descriptions, this way the user always sees what the application
            is doing. The QAppStateIndicator works together with the <see cref="T:Qios.DevSuite.Components.QProgressBar" /> and the <see cref="T:Qios.DevSuite.Components.QStatusBar" />.
            Set the <see cref="P:Qios.DevSuite.Components.QAppStateIndicator.StateImagesContainer" /> to a Panel or other container control if the StateImages should be displayed.
            A <see cref="T:Qios.DevSuite.Components.QAppStateIndicator" /> has a <see cref="P:Qios.DevSuite.Components.QAppStateIndicator.MainState" /> that is a sum of all the states of the items.
            The value of the MainState is expressed in the QProgressBar
            </summary>
      <example>
        <code>
            //Create a progressBar.
            QProgressBar myProgressBar = new QProgressBar();
            myProgressBar.BlockSize = 6;
            myProgressBar.BlockMargin = 1;
            myProgressBar.Dock = DockStyle.Fill;
            myProgressBar.Location = new Point(200, 10);
            myProgressBar.Size = new Size(50,16);
            myProgressBar.MaxValue = 10;
            
            //There is a QStatusBar on the Form that contains a
            //QStatusBarPanelControlContainer with the name myProgressPanel.
            //Add ProgressBar as control to the myStatusPanel.
            this.myProgressPanel.Control = myProgressBar;
            
            //Create a container like control to hold the QAppStateIndicator Images.
            Panel myAppStateImageContainer = new Panel();
            myAppStateImageContainer.Size = new Size(60, 16);
            myAppStateImageContainer.Dock = DockStyle.Right;
            myAppStateImageContainer.BackColor = Color.Transparent;
            
            //There is a QStatusBar on the Form that contains
            //a QStatusBarPanelControlContainer with the name myStatusPanel.
            //Add myAppStateImageContainer as control to the myStatusPanel.
            this.myStatusPanel.Control = myAppStateImageContainer;
            
            //Create the QAppStateIndicator. It is created with the components collection
            //default defined by the form when you add a component to the form.
            QAppStateIndicator myStateIndicator = new QAppStateIndicator(this.components);
            //Set the controls
            myStateIndicator.StateImagesContainer = myAppStateImageContainer;
            myStateIndicator.MainProgressBar = myProgressBar;
            myStateIndicator.MainStatusBarPanel = this.myStatusPanel;
            
            //Set the state of the AppStateIndicator
            myStateIndicator.SetState(
            //The name of the state you want to set.
            "RetrievalState",
            //The description
            "Downloading...",
            //The tooltip text
            "Downloading...",
            //The value of the state
            this.qsiAppState["RetrievalState"] + 5,
            //Defines whether the progressbar shoud add 1 or 5 progress values
            QAppStateIndicatorType.AllInMain,
            //A possible bitmap with the current state
            null);
            
            </code>
      </example>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppStateIndicator.#ctor(System.ComponentModel.IContainer)">
      <summary>
            The constructor with an IContainer.
            </summary>
      <param name="container">The container to add this component to</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppStateIndicator.#ctor">
      <summary>
            The default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppStateIndicator.SetState(System.String,System.String,System.String,System.Int32,Qios.DevSuite.Components.QAppStateIndicatorType,System.Drawing.Bitmap)">
      <summary>
            Sets the state of the <see cref="T:Qios.DevSuite.Components.QAppStateIndicatorItem" /> where the StateName is name.
            If the item does not exist, it creates it. If the
            State is 0, then it removes the <see cref="T:Qios.DevSuite.Components.QAppStateIndicatorItem" />.
            </summary>
      <param name="name">Defines the name of the state to set.</param>
      <param name="description">Contains a description of the state.</param>
      <param name="toolTipText">Contains the ToolTip text of the state.</param>
      <param name="state">Contains the value.</param>
      <param name="stateType">Contains how the ProgressBar should be increased. This can be <b>NotInMain</b>, <b>AllInMain</b> or <b>OneInMain</b></param>
      <param name="bitmap">Defines a possible bitmap for the state.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppStateIndicator.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicator.MainToolTipText">
      <summary>
            Gets or sets the ToolTip text for the MainState. This must contain valid Xml like used on <see cref="T:Qios.DevSuite.Components.QMarkupText" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicator.MainDoneText">
      <summary>
            Gets or sets the main text when all the states are set to 0.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicator.MainStatusBarPanel">
      <summary>
            Gets or sets the <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" /> that should display the main state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicator.StateImagesContainer">
      <summary>
            Gets or sets the Control that will show the Images set by the <see cref="T:Qios.DevSuite.Components.QAppStateIndicatorItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicator.MainProgressBar">
      <summary>
            Gets or sets the <see cref="T:Qios.DevSuite.Components.QProgressBar" /> that should display the main state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicator.Item(System.String)">
      <summary>
            Gets or sets the <see cref="T:Qios.DevSuite.Components.QAppStateIndicatorItem" /> by name. When the item does not exist,
            it creates the item (without an image, description or tooltip).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicator.MainState">
      <summary>
            Returns the MainState.
            The MainState is a sum of all the <see cref="T:Qios.DevSuite.Components.QAppStateIndicatorItem" /> States in this QAppStateIndicator.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QThemeInfo">
      <summary>
            QThemeInfo contains information about the Windows Themes. It is used by the <see cref="T:Qios.DevSuite.Components.QColorScheme" />
            to manage theme information. You can define your own QThemeInfo objects if you want a custom theme.
            When the <see cref="M:Qios.DevSuite.Components.QGlobalColorScheme.SetCurrentThemeToWindows" /> is called or the
            <see cref="P:Qios.DevSuite.Components.QGlobalColorScheme.InheritCurrentThemeFromWindows" /> is set, the <see cref="P:Qios.DevSuite.Components.QThemeInfo.FileName" /> and
            <see cref="P:Qios.DevSuite.Components.QThemeInfo.WindowsSchemeName" /> properties of the QThemeInfo object are matched with the properties of Windows.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.#ctor">
      <summary>
            Constructor. Creates a new QThemeInfo object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.#ctor(System.String)">
      <summary>
            Constructor. Creates a new QThemeInfo object.
            </summary>
      <param name="themeName">The name of the Theme</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.#ctor(System.String,System.String,System.String)">
      <summary>
            Constructor. Creates a new QThemeInfo object.
            </summary>
      <param name="themeName">The name of the Theme</param>
      <param name="fileName">The FileName of the Theme. When a QColorScheme should use the WindowsTheme, the FileName is matched with the one.</param>
      <param name="windowsSchemeName">the WindowsSchemeName</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.ShouldSerialize">
      <summary>
            Returns whether this QThemeInfo instance should be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.ShouldSerializeThemeName">
      <summary>
            Returns whether the ThemeName should be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.ResetThemeName">
      <summary>
            Resets the ThemeName to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.ShouldSerializeFileName">
      <summary>
            Returns whether the FileName should be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.ResetFileName">
      <summary>
            Resets the FileName to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.ShouldSerializeWindowsSchemeName">
      <summary>
            Returns whether the WindowsSchemeName should be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.ResetWindowsSchemeName">
      <summary>
            Resets the WindowsSchemeName to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.SaveToXml(System.Xml.XPath.IXPathNavigable)">
      <summary>
            Saves the QThemeInfo to Xml
            </summary>
      <param name="collectionElement">Contains the collection XML Element</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfo.LoadFromXml(System.Xml.XPath.IXPathNavigable)">
      <summary>
            Loads the contents of this QMenuItem from the specified XmlElement.
            </summary>
      <param name="itemElement">The element to load it from</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QThemeInfo.ThemeName">
      <summary>
            Gets or sets the the name of the QThemeInfo.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QThemeInfo.FileName">
      <summary>
            Gets or sets the FileName of the Theme. When a <see cref="T:Qios.DevSuite.Components.QColorScheme" /> should use the WindowsTheme,
            the FileName is matched with the one.
            </summary>
      <remarks>
            When the <see cref="M:Qios.DevSuite.Components.QGlobalColorScheme.SetCurrentThemeToWindows" /> is called or the
            <see cref="P:Qios.DevSuite.Components.QGlobalColorScheme.InheritCurrentThemeFromWindows" /> is set, the <see cref="P:Qios.DevSuite.Components.QThemeInfo.FileName" /> and
            <see cref="P:Qios.DevSuite.Components.QThemeInfo.WindowsSchemeName" /> properties of the QThemeInfo object are matched with the properties of Windows.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QThemeInfo.WindowsSchemeName">
      <summary>
            Gets or sets the WindowsSchemeName.
            </summary>
      <remarks>
            When the <see cref="M:Qios.DevSuite.Components.QGlobalColorScheme.SetCurrentThemeToWindows" /> is called or the
            <see cref="P:Qios.DevSuite.Components.QGlobalColorScheme.InheritCurrentThemeFromWindows" /> is set, the <see cref="P:Qios.DevSuite.Components.QThemeInfo.FileName" /> and
            <see cref="P:Qios.DevSuite.Components.QThemeInfo.WindowsSchemeName" /> properties of the QThemeInfo object are matched with the properties of Windows.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QThemeInfo.IsSystemTheme">
      <summary>
            Gets whether this theme is a system theme.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QConstants">
      <summary>
            Defines constants used in the Qios.DevSuite.Components library.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QConstants.DevSuiteProductInfo">
      <summary>
            Gets de default DevSuite product info.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorSchemeShowColorsAttribute">
      <summary>
            Attribute for ColorScheme properties that determine which colors will be shown in the propertygrid.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeShowColorsAttribute.#ctor(Qios.DevSuite.Components.QColorSchemeShowColorsMethod)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeShowColorsAttribute.#ctor(Qios.DevSuite.Components.QColorSchemeShowColorsMethod,Qios.DevSuite.Components.QColorCategory)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeShowColorsAttribute.#ctor(Qios.DevSuite.Components.QColorSchemeShowColorsMethod,Qios.DevSuite.Components.QColorCategory,System.Boolean)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeShowColorsAttribute.ShowColor(System.Object[],Qios.DevSuite.Components.QColorSchemeScope,System.Boolean@)">
      <summary>
            Determines if the color will be shown based on the categories that are defined in the color and the requested scope.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeShowColorsAttribute.Method">
      <summary>
            Gets the method (add, remove or clear) of this attribute
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeShowColorsAttribute.Related">
      <summary>
            Determines if the color is only related to the control
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeShowColorsAttribute.Category">
      <summary>
            Gets the color category of this attribute
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorSchemeShowColorsMethod">
      <summary>
            Gets the method (add, remove or clear) of altering the visibility logic of colors
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeShowColorsMethod.None">
      <summary>
            Do nothing
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeShowColorsMethod.Add">
      <summary>
            Add the category to be shown
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeShowColorsMethod.Remove">
      <summary>
            Removes the category to be shown
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeShowColorsMethod.Clear">
      <summary>
            Clear previous entries
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QControlDesigner">
      <summary>
            Designer for QControl and inherited controls
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QControlDesigner.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer
            </summary>
      <param name="component">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QControlDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner">
      <summary>
            Root Designer class for the QCompositeWindow and QCompositeControl
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QContainerControlDocumentDesigner">
      <summary>
            Defines a Document Designer for the instances of <see cref="T:Qios.DevSuite.Components.QContainerControl" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContainerControlDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContainerControlDocumentDesigner.ShouldSerializeBackColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.Design.QContainerControlDocumentDesigner.BackColor" /> changes from the default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContainerControlDocumentDesigner.ResetBackColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.Design.QContainerControlDocumentDesigner.BackColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContainerControlDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
            Overridden. Sets the BackColor property to this so that will react correct to ShouldSerialize and SetToDefault.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QContainerControlDocumentDesigner.BackColor">
      <summary>
            Gets or sets the overridden BackColor property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QContainerControlDocumentDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.IQDesigner">
      <summary>
            Summary description for IQDesigner.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.IQDesigner.NotifyComponentCreation(System.Object,System.Boolean)">
      <summary>
            Is called by collection editors and possible other sources that
            it is about to create a component. In this case the implementor should ignore any componentAdded events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.GetCreationTypes">
      <summary>
            Gets the types this designer can create.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
            Overridden, removes some prefilter properties
            </summary>
      <param name="properties">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.OnSetCursor">
      <summary>
            Handles cursor changes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>
            Handes a begin drag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>
            Handles a MouseDragMove
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>
            Handles an End Drag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Handles the paint adornments.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Handles winproc messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.NotifyComponentCreation(System.Object,System.Boolean)">
      <summary>
            Is called by collection editors and possible other sources that
            it is about to create a component. In this case the implementor should ignore any componentAdded events.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.DrawGrid">
      <summary>
            Gets or sets if the grid should be drawn in the designer
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.Verbs">
      <summary>
            Gets the verbs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.DrawOutlines">
      <summary>
            Gets or sets whether outlines must be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlRootDesigner.AssociatedComponents">
      <summary>
            Overridden. Gets the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QCompositeWindow" /> component.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration">
      <summary>
            this class implements the configuration for the TabStrip on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripConfiguration">
      <summary>
            Contains configuration properties for instances that uses a QTabStrip like <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropAllowDrop">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropAllowDrag">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropStripVisibleWithoutButtons">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropStripMinimumHeight">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropStripPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropStripMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropButtonAreaMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropButtonAreaClip">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropButtonSpacing">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropSizeBehavior">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropFontStyleHot">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropFontStyleActive">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropCloseButtonVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropScrollButtonsAlwaysVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropNavigationAreaPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropNavigationAreaMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropNavigationAreaAlignment">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropNavigationAreaContentAlignment">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropCloseMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropScrollLeftMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropScrollRightMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropScrollStep">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropScrollMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropScrollBehavior">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropStackBehavior">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropNavigationAreaAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropNavigationButtonHotAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropButtonConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.PropNavigationButtonPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.#ctor(System.Drawing.Font)">
      <summary>
            Default Constructor. Creates a configuration and sets the font
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.CreateTabStripAppearance">
      <summary>
            Creates the TabStripAppearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.CreateTabButtonConfiguration">
      <summary>
            Creates the QTabButtonConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.CreateNavigationAreaAppearance">
      <summary>
            Creates the QTabStripNavigationAreaAppearance
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.CreateNavigationButtonHotAppearance">
      <summary>
            Creates the appearance for the hot buttons on the Navigation Area.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.PutFont(System.Drawing.Font)">
      <summary>
            Sets the Font of this configuration and calculates the Hot and Active fonts.
            This does not raise any events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabStripConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.Dispose">
      <summary>
            Disposes the Configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.Dispose(System.Boolean)">
      <summary>
            Disposes this Configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripConfiguration.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabStripConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.AllowDrag">
      <summary>
            Gets or sets a value indicating whether the user can drag QTabButtons from this QTabControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.AllowDrop">
      <summary>
            Gets or sets a value indicating whether the user can drop QTabButtons on this QTabControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.StripPadding">
      <summary>
            Contains the padding between the edge of the TabStrip and the buttons.
            The BottomPadding, when the strip is docked top, is not used, visa versa.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.StripMargin">
      <summary>
            Contains the margin between the edge of the TabControl and the TabStrip.
            The BottomMargin, when the strip is docked top, is not used, visa versa.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ButtonAreaMargin">
      <summary>
            Contains the margin between the of the content rectangle (plus padding) and the start of the buttons.
            The BottomMargin, when the strip is docked top, is not used, visa versa.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ButtonAreaClip">
      <summary>
            Gets or sets whether the buttons should be clipped when exceeding left or right in the buttonarea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.StripMinimumHeight">
      <summary>
            Gets or sets the minimumHeight of the strip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.StripVisibleWithoutButtons">
      <summary>
            Gets or sets whether the strip must be visible when no buttons are shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ButtonSpacing">
      <summary>
            Contains the spacing between buttons. This spacing is not used before the first and after the last button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.SizeBehavior">
      <summary>
            Gets or sets how the QTabStrip should behave when the buttons do not fit
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ButtonConfiguration">
      <summary>
            Gets or sets the configuration of the buttons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.Appearance">
      <summary>
            Gets or sets the appearance of the TabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.NavigationAreaAppearance">
      <summary>
            Gets or sets the appearance of the NavigationArea
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.NavigationButtonHotAppearance">
      <summary>
            Gets or sets the appearance of the hot navigation buttons
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.UsedNavigationButtonHotAppearance">
      <summary>
            Gets or sets the Used navigationButtonHotAppearance. Some classes like QRibbon override this property
            and change the type, therefore NavigationButtonHotAppearance can be null.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.FontStyleHot">
      <summary>
            Gets or sets the style of the font when the button is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.FontStyleActive">
      <summary>
            Gets or sets the style of the font when the button is activated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.Font">
      <summary>
            Gets the Font that is used
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.FontActive">
      <summary>
            Gets the Font that is used for Active buttons
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.FontHot">
      <summary>
            Gets the Font that is used for Hot buttons
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.CloseButtonVisible">
      <summary>
            Gets or sets whether the buttons can be closed. To actually be able to close a button <see cref="P:Qios.DevSuite.Components.QTabButton.CanClose" /> must be specified.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ScrollButtonsAlwaysVisible">
      <summary>
            Gets or sets whether the scrollbuttons must always be visible. This is ignored if the 
            <see cref="P:Qios.DevSuite.Components.QTabStripConfiguration.SizeBehavior" /> does not contain <see cref="F:Qios.DevSuite.Components.QTabStripSizeBehaviors.Scroll" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.NavigationAreaPadding">
      <summary>
            Gets or sets the padding used for the navigation buttons like the scroll and close buttons.
            This padding flips when the QTabStrip is docked vertical
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.NavigationAreaMargin">
      <summary>
            Gets or sets the margin used between the actual content area of the TabStrip and the start of the NavigationArea.
            This padding flips when the QTabStrip is docked vertical
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.NavigationAreaAlignment">
      <summary>
            Gets or sets the alignment for bounding shape of the NavigationArea that contains the scroll and close buttons.
            This alignment flips when the QTabStrip is docked vertical
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.NavigationAreaContentAlignment">
      <summary>
            Gets or sets the alignment for the CustomButtons like the scroll and close buttons.
            This alignment flips when the QTabStrip is docked vertical
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.UsedCloseMask">
      <summary>
            Gets the actual used CloseMask. This is based on whether the CloseMask
            is set. If it is not set the default is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.CloseMask">
      <summary>
            Gets or sets the base image that is used to for the Close button.
            In the Mask the Color Red is replaced by the TabButtonTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.UsedScrollLeftMask">
      <summary>
            Gets the actual used ScrollLeftMask. This is based on whether the CloseMask
            is set. If it is not set the default is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ScrollLeftMask">
      <summary>
            Gets or sets the base image that is used to for the Scroll left button.
            In the Mask the Color Red is replaced by the TabButtonTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.UsedScrollRightMask">
      <summary>
            Gets the actual used ScrollLeftMask. This is based on whether the CloseMask
            is set. If it is not set the default is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ScrollRightMask">
      <summary>
            Gets or sets the base image that is used to for the Scroll right button.
            In the Mask the Color Red is replaced by the TabButtonTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ScrollStep">
      <summary>
            Gets or sets the default scroll step when scrolling is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ScrollMargin">
      <summary>
            Gets or sets the margin that is used when scrolling a button into the view.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.ScrollBehavior">
      <summary>
            Gets or sets the scroll behavior when scrolling is used
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.StackBehavior">
      <summary>
            Gets or sets the stack behavior when stacking is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.NavigationButtonPadding">
      <summary>
            Gets or sets the padding used for buttons on the NavigationArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.UseStackExtendBackground">
      <summary>
            Gets whether the StackBehavior must extend the button background till the bottom.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.UseStackMoveToFront">
      <summary>
            Gets whether the StackBehavior must move the button to the front when activated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.UseScrollAnimation">
      <summary>
            Gets whether the ScrollBehavior must animate.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripConfiguration.UseScrollOneButton">
      <summary>
            Gets whether the ScrollBehavior must be one button.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.PropMdiCloseMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.PropMdiRestoreMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.PropMdiMinimizeMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.PropHelpMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.PropMdiCloseButtonVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.PropMdiRestoreButtonVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.PropMdiMinimizeButtonVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.PropHelpButtonVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.#ctor(System.Drawing.Font)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.CreateTabStripAppearance">
      <summary>
            Overridden. Creates the QRibbonTabStripAppearance
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.CreateNavigationButtonHotAppearance">
      <summary>
            Overridden. Creates a new NavigationButtonHotAppearance
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.CreateTabButtonConfiguration">
      <summary>
            Creates the QTabButtonConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.Appearance">
      <summary>
            New. Gets or sets the appearance of the TabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.NavigationButtonHotAppearance">
      <summary>
            New. Gets or sets the appearance a navigation button of the TabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.ButtonConfiguration">
      <summary>
            New. Gets or sets the configuration of the TabButtons
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.MdiRestoreButtonVisible">
      <summary>
            Gets or sets whether the MDI restore button is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.MdiMinimizeButtonVisible">
      <summary>
            Gets or sets whether the MDI minimize button is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.MdiCloseButtonVisible">
      <summary>
            Gets or sets whether the MDI close button is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.HelpButtonVisible">
      <summary>
            Gets or sets whether the Help button is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.MdiCloseMask">
      <summary>
            Gets or sets the base image that is used to for the MDI Close button.
            In the Mask the Color Red is replaced by the TabButtonTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.MdiRestoreMask">
      <summary>
            Gets or sets the base image that is used to for the MDI Restore button.
            In the Mask the Color Red is replaced by the TabButtonTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.MdiMinimizeMask">
      <summary>
            Gets or sets the base image that is used to for the MDI Minimize button.
            In the Mask the Color Red is replaced by the TabButtonTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.HelpMask">
      <summary>
            Gets or sets the base image that is used to for the help button.
            In the Mask the Color Red is replaced by the TabButtonTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.UsedMdiCloseMask">
      <summary>
            Gets the used mask. This returns the default mask if the property isn't set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.UsedMdiRestoreMask">
      <summary>
            Gets the used mask. This returns the default mask if the property isn't set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.UsedMdiMinimizeMask">
      <summary>
            Gets the used mask. This returns the default mask if the property isn't set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripConfiguration.UsedHelpMask">
      <summary>
            Gets the used mask. This returns the default mask if the property isn't set.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationButtonAppearance">
      <summary>
            Defines the appearance for a button on the navigation area of a QTabStrip of a QRibbon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationButtonAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationButtonAppearance.Shape">
      <summary>
            Overridden. Gets or sets the shape.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabStripAppearance">
      <summary>
            Defines the Appearance for the QRibbonTabStrip
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripAppearance">
      <summary>
            Defines the Appearance for the <see cref="T:Qios.DevSuite.Components.QTabStrip" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripAppearance.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration">
      <summary>
            Defines the Configuration of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.PropOverlay">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.PropButtonStyle">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.PropCustomPaintSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.CreateAppearance">
      <summary>
            Creates the Appearance for this item. Returns null, not used in this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.Appearance">
      <summary>
            Overridden. Not used in this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.Overlay">
      <summary>
            Gets or sets the amount of overlay the QRibbonApplicationButton has. If the button has any overlay,
            a QTranslucentWindow is created that hovers above the button (and possible other controls).
            If it doesn't have any overlay the button is just painted on it's parent composite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.ButtonStyle">
      <summary>
            Gets or sets the rendering style of the QRibbonApplicationButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonConfiguration.CustomPaintSize">
      <summary>
            Gets or sets the size when the QRibbonApplicationButton.ButtonStyle is set CustomPaint.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonStyle">
      <summary>
            Determines the rendering style of the QRibbonApplicationButton
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonStyle.CustomPaint">
      <summary>
            The button is painted by using the colors from the QColorScheme
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButtonStyle.Image">
      <summary>
            The button is drawn by using a seperate image for each state
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabPage">
      <summary>
            QTabPage represents one tab and control on a <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
      <remarks>
            QTabPages uses an instance of <see cref="T:Qios.DevSuite.Components.QTabButton" /> to represent the tab. You can use <see cref="P:Qios.DevSuite.Components.QTabStripConfiguration.ButtonConfiguration" />
            to configure the way QTabButtons look on the complete strip. To override these settings on a single QTabPage, you can use <see cref="P:Qios.DevSuite.Components.QTabPage.ButtonConfiguration" /><br /><br />
            Use <see cref="P:Qios.DevSuite.Components.QTabPage.ButtonOrder" /> to define the index where the QTabPage should be displayed. Use <see cref="P:Qios.DevSuite.Components.QTabPage.ButtonDockStyle" /> to indicate
            if the button should be located top / left / right or bottom.
            <br /><br />
            For the colors of the tabs it first looks if the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> of the QTabPage has a color defined.
            That is, that it does not contain a default value (it is bold).
            If it does contain a default value, it uses the Color from the parenting <see cref="T:Qios.DevSuite.Components.QTabControl" />. This way you
            can define the QTabPage colors on QTabControl level.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.CreateTabButton">
      <summary>
            Creates the QTabButton for this QTabPage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.CreateAppearanceInstance">
      <summary>
            Overridden. Creates a new <see cref="T:Qios.DevSuite.Components.QTabPageAppearance" />.
            </summary>
      <returns>a new <see cref="T:Qios.DevSuite.Components.QAppearance" /></returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Sets the VisibleCore
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Sets the boundsCore
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ResetButtonConfiguration">
      <summary>
            Resets the button configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ShouldSerializeButtonConfiguration">
      <summary>
            Returns whether the button configuration should serialize.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ShouldSerializeButtonBackgroundImage">
      <summary>
            Returns whether the BackgroundImage must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ResetButtonBackgroundImage">
      <summary>
            Resets the BackgroundImage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ShouldSerializeIcon">
      <summary>
            Returns whether the Icon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ResetIcon">
      <summary>
            Resets the Icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ShouldSerializeDisabledIcon">
      <summary>
            Returns whether the DisabledIcon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ResetDisabledIcon">
      <summary>
            Resets the DisabledIcon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.Close">
      <summary>
            Closes the TabPage. Returns whether it is actually closed
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ShouldLayoutWhenInvisible">
      <summary>
            Gets whether this page should layout when invisible. This should only return true when
            UseControlBackgroundForTabButton is set for the regular or hot appearance.
            Because then the gradient should be updated when the control resizes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Updates the bounds without actually setting the window size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.RetrieveFirstDefinedColor(System.String)">
      <summary>
            This method looks if the ColorScheme of this QTabPage has a color defined for the specified
            colorName. When it has it returns that one, else it returns the color of the parenting QTabControl.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.Select(System.Boolean,System.Boolean)">
      <summary>
            Overridden. Selects the this QTabPage
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.OnColorsChanged(System.EventArgs)">
      <summary>
            Is called when the colors or other system settings get changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.OnEnabledChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the OnEnabledChanged
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.OnGotFocus(System.EventArgs)">
      <summary>
            Overridden. Handles the GotFocus
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.OnLostFocus(System.EventArgs)">
      <summary>
            Overridden. Handles the LostFocus
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.OnVisibleChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the VisibleChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.OnActivated(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabPage.Activated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.OnDeactivated(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabPage.Deactivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabPage.Closing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.OnClosed(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabPage.Closed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes this QTabPage and its resources.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.HandleScrollStep">
      <summary>
            Handles one scroll step.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.DeactivateTabPageCore">
      <summary>
            Deactivates the QTabPage
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.ActivateTabPageCore">
      <summary>
            Activates the QTabPage
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.UpdateTabButtonPaintParams(Qios.DevSuite.Components.QTabButtonPaintParams)">
      <summary>
            Updates the TabButton paint params.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.MustBePersistedAfter(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Indicates if this persistableObject must be saved after an other persistableObject.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.SavePersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Saves this Control to the parentElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.LoadPersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable,System.Object)">
      <summary>
            Loads this Control from the specified persistableObjectElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPage.UnloadPersistableObject">
      <summary>
            Unloads the persistableObject.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabPage.VisibleChanged">
      <summary>
            Overridden. This shouldn't on a QTabPage
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabPage.Activated">
      <summary>
            Gets raised when the QTabPage is activated.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabPage.Deactivated">
      <summary>
            Gets raised when the QTabPage is Deactivated.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabPage.Closing">
      <summary>
            Gets raised when the QTabPage is about to close.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabPage.Closed">
      <summary>
            Gets raised when the QTabPage is closed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.TabIndex">
      <summary>
            Gets or sets the TabIndex. This shouldn't be used. A QTabPage has no TabIndex.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.Visible">
      <summary>
            Gets or sets whether this is visible. This shouldn't be used. Not activated tabButtons are not visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.CanFocusTabButton">
      <summary>
            Gets whether the button of this QTabPage can receive the focus.  This depends on <see cref="P:Qios.DevSuite.Components.QTabControl.FocusTabButtons" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ButtonVisible">
      <summary>
            Gets or sets whether the TabButton is visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.CanClose">
      <summary>
            Gets or sets whether this QTabPage can be closed. To actually see the CloseButton <see cref="P:Qios.DevSuite.Components.QTabStripConfiguration.CloseButtonVisible" />
            must be specified
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ButtonOrder">
      <summary>
            Gets or sets the order of the button. -1 means it is added as last.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.MinimumClientSize">
      <summary>
            Overridden. Gets or sets the minimum size of the client area of the QTabPage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.Dock">
      <summary>
            Overridden. A QTabPage cannot be docked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.Text">
      <summary>
            Overridden. Gets or sets the Text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.Font">
      <summary>
            Overridden. Gets or sets the Font
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.TabButton">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QTabButton" /> for this Page
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ButtonConfiguration">
      <summary>
            Gets or sets the configuration of the QTabButton for this QTabPage.
            This configuration uses the values of a parenting <see cref="T:Qios.DevSuite.Components.QTabStrip" />.
            You can override these values by setting values for this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ButtonDockStyle">
      <summary>
            Gets or sets the DockStyle of a QTabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ButtonToolTipText">
      <summary>
            Gets or sets the text on the ToolTip of the TabButton. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ButtonBackgroundImage">
      <summary>
            Gets or sets the BackgroundImage of the QTabPage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ButtonBackgroundImageResourceName">
      <summary>
            Gets or sets a possible resource name to load the BackgroundImage from. This must be in the format 'NameSpace.IconName.extension, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.Icon">
      <summary>
            Gets or sets the Icon of the QTabPage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.IconResourceName">
      <summary>
            Gets or sets a possible resource name to load the Icon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.DisabledIcon">
      <summary>
            Gets or sets the Disabled Icon of the QTabPage. When this is not set the default Icon is used for painting.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.DisabledIconResourceName">
      <summary>
            Gets or sets a possible resource name to load the DisabledIcon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ClientAreaMarginTop">
      <summary>
            Overridden. Gets the topmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ClientAreaMarginLeft">
      <summary>
            Overridden. Gets the leftmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ClientAreaMarginRight">
      <summary>
            Overridden. Gets the rightmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.ClientAreaMarginBottom">
      <summary>
            Overridden. Gets the bottommargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.BackColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of first background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.BackColor2PropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of second background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.BorderColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of border color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.TabControl">
      <summary>
            Gets or sets the QTabControl this QTabPage belongs to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.PersistGuid">
      <summary>
            Gets or sets the PersistGuid. With this Guid the control is identified in the persistence files.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.PersistObject">
      <summary>
            Gets or sets whether this object must be persisted.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.IsPersisted">
      <summary>
            Gets or sets whether this control is already persisted to a file.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.RequiresUnload">
      <summary>
            Gets whether this control requires an unload before loading from a persistableObjectElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPage.CreateNew">
      <summary>
            Gets or sets whether a new instance of this PersistableObject must be created when it is loaded from file.
            If this is false the persistableObject must match an existing persistableObject in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabPageAppearance">
      <summary>
            Defines the Appearance for the <see cref="T:Qios.DevSuite.Components.QTabPage" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPageAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabPageCloseBehavior">
      <summary>
            Defines what should happen when a QTabPage is closed.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabPageCloseBehavior.Dispose">
      <summary>
            The QTabPage is removed and disposed.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabPageCloseBehavior.MakeInvisible">
      <summary>
            The QTabButton of the page is made invisible.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapedWindowComponentConfiguration">
      <summary>
            Defines configuration properties for a QTranslucentWindowComponent.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration">
      <summary>
            Defines configuration properties for a QTranslucentWindowComponent.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.PropTopMost">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.PropBackgroundImage">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.PropOpacity">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.PropCursor">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.Dispose">
      <summary>
            Disposes the Configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.Dispose(System.Boolean)">
      <summary>
            Disposes this Configuration.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of this configuration changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.TopMost">
      <summary>
            Gets or sets if the QTranslucentWindow must be topmost
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.BackgroundImage">
      <summary>
            Gets or sets the background image of the QTranslucentWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.Opacity">
      <summary>
            Gets or sets the opacity of the QTranslucentWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindowComponentConfiguration.Cursor">
      <summary>
            Gets or sets the mouse cursor of the QTranslucentWindow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.PropShapedWindowConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.PropShapedWindowAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.PropFlipHorizontal">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.PropFlipVertical">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.PropSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size of this configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.OnShapedWindowConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.ShapedWindowConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.OnShapedWindowAppearanceChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.ShapedWindowAppearanceChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.CreateShapedWindowConfigurationInstance">
      <summary>
            Can be used by subclasses to implement another ShapedWindowConfiguration
            </summary>
      <returns>A new QShapedWindowConfiguration Instance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.CreateShapedWindowAppearanceInstance">
      <summary>
            Can be used by subclasses to implement another ShapedWindowAppearance
            </summary>
      <returns>A new QShapedWindowAppearance</returns>
    </member>
    <member name="E:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.ShapedWindowConfigurationChanged">
      <summary>
            Gets raised when the ShapedWindowConfiguration changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.ShapedWindowAppearanceChanged">
      <summary>
            Gets raised when the ShapedWindowAppearance changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.Size">
      <summary>
            Determines the initial size of the window
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.FlipHorizontal">
      <summary>
            Determines if the shape must be flipped horizontally
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.FlipVertical">
      <summary>
            Determines if the shape must be flipped vertically
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.ShapedWindowConfiguration">
      <summary>
            Gets the QShapedWindowConfiguration for the QShapedWindow. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.ShapedWindowAppearance">
      <summary>
            Gets the QShapedWindowAppearance for the QShapedWindow. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.BackgroundImage">
      <summary>
            Gets or sets the background image of the QShapedWindow. This is used to create a shaped window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowComponentConfiguration.TopMost">
      <summary>
            Gets or sets if the QTranslucentWindow must be topmost. Use the TopMost property of the QShapedWindowConfiguration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapedWindowComponent">
      <summary>
            A component to configure and create QShapedWindows in the designer.
            Use the Configuration property to configure the QShapedWindow and call the Show or ShowCenteredOnScreen
            method to create and show the QShapedWindow. It is also possible to use the QShapedWindow without
            this component.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QControlComponent">
      <summary>
            The QControlComponent is used by components that host a QControl, like <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            It implements the appearance properties like <b>ColorScheme</b> or <b>FontScope</b>.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Constructor. Creates a QControlComponent and adds it to container.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.#ctor">
      <summary>
            Default Constructor. Creates a QControlComponent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.StartTimer(System.Int32)">
      <summary>
            Starts a timer to the specified interval for this Component, and returns the generated timerid.
            When the timer elapses the <see cref="E:Qios.DevSuite.Components.QControlComponent.TimerElapsed" /> event is raised with the returned timerid.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.StopTimer(System.Int32)">
      <summary>
            Stops the timer that was set with <see cref="M:Qios.DevSuite.Components.QControlComponent.StartTimer(System.Int32)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.OnFontChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QControlComponent.FontChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QControlComponent.TimerElapsed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.ShouldSerializeColorScheme">
      <summary>
            Returns whether the <see cref="P:Qios.DevSuite.Components.QControlComponent.ColorScheme" /> changes from its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.ResetColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QControlComponent.ColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.ShouldSerializeLocalFont">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QControlComponent.LocalFont" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.ResetLocalFont">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QControlComponent.LocalFont" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlComponent.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QControlComponent.TimerElapsed">
      <summary>
            Gets raised when a timer that was set with the <see cref="M:Qios.DevSuite.Components.QControlComponent.StartTimer(System.Int32)" /> method elapses.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QControlComponent.FontChanged">
      <summary>
            Gets raised when the font changes
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlComponent.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlComponent.IsDisposed">
      <summary>
            Gets whether this component is disposed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlComponent.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlComponent.Font">
      <summary>
            The Font is set by the values depending
            on <see cref="P:Qios.DevSuite.Components.QControlComponent.LocalFont" /> and the <see cref="P:Qios.DevSuite.Components.QControlComponent.FontScope" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlComponent.FontScope">
      <summary>
            Gets or sets the scope of the font. When the scope is set
            To <b>Local</b> the <see cref="P:Qios.DevSuite.Components.QControlComponent.LocalFont" /> is used, else the Font is defined by Windows or the QGlobalFont
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlComponent.LocalFont">
      <summary>
            Is used when the <see cref="P:Qios.DevSuite.Components.QControlComponent.FontScope" /> is set to Local.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.ShouldSerializeConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.ResetConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.Show">
      <summary>
            Shows the QTranslucentWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.ShowCenteredOnScreen">
      <summary>
            Shows the QTranslucentWindow centered on the screen
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.OnShapedWindowCreated(Qios.DevSuite.Components.QShapedWindowEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QShapedWindowComponent.ShapedWindowCreated" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.CreateConfigurationInstance">
      <summary>
            Creates the configuration instance for this QShapedWindowComponent
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowComponent.CreateShapedWindowInstance">
      <summary>
            Creates the QTranslucentWindow based on the configuration settings of this component.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="E:Qios.DevSuite.Components.QShapedWindowComponent.ShapedWindowCreated">
      <summary>
            Gets raised when the QShapedWindow is created
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowComponent.Configuration">
      <summary>
            Gets or sets the QShapedWindowComponentConfiguration for the component.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapedWindowEventHandler">
      <summary>
            Defines the delegate to use with the ShapedWindowCreated event.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapedWindowEventArgs">
      <summary>
            Contains the EventArgs for QShapedWindowComponent events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowEventArgs.#ctor(Qios.DevSuite.Components.QShapedWindow)">
      <summary>
            Constructor. Creates a new instance of QShapedWindowEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowEventArgs.ShapedWindow">
      <summary>
            Gets or sets the QShapedWindow.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDiffChangeType">
      <summary>
            Enumeration that represents the type of change of a string part
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDiffChangeType.Delete">
      <summary>
            Delete
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDiffChangeType.Insert">
      <summary>
            Insert
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDiffChangeType.Change">
      <summary>
            Change
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDiffChange">
      <summary>
            Class to represent a change of a stringpart between two versions of a string
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffChange.#ctor(Qios.DevSuite.Components.QDiffChangeType,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Default constructor
            </summary>
      <param name="type">Type of change</param>
      <param name="startA">Index of the original string parts collection that has changed</param>
      <param name="startB">Index of the new string parts collection that the change points to</param>
      <param name="lengthA">Number of string parts of the original the change spans</param>
      <param name="lengthB">Number of string parts of the new string the change spans</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffChange.Type">
      <summary>
            Gets the type of change (insert, update, delete)
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffChange.StartA">
      <summary>
            Gets the index of the original string parts collection that has changed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffChange.StartB">
      <summary>
            Gets the index of the new string parts collection that the change points to
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffChange.LengthA">
      <summary>
            A number of string parts that the change spans
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffChange.LengthB">
      <summary>
            A number of string parts that the change spans
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDiffChangeCollection">
      <summary>
            Collection class for the QChange class
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffChangeCollection.CopyTo(Qios.DevSuite.Components.QDiffChange[],System.Int32)">
      <summary>
            Copies this collection to the QDiffChange collection.
            </summary>
      <param name="changes">The array to copy to.</param>
      <param name="index">The index to start at.</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffChangeCollection.Item(System.Int32)">
      <summary>
            Returns a QChange instance at a specific position
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeWindow">
      <summary>
            Defines a floating window for combining and drawing visual elements such as textparts and iconparts.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingWindow">
      <summary>
            A window used by the QInputBox to show the items the user can choose from
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.#ctor(System.Windows.Forms.IWin32Window)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.ShouldSerializeConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.ResetConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.ContainsControl(System.Windows.Forms.Control)">
      <summary>
            Returns whether this container control or any of its child controls contain the specified control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.CalculateBounds(System.Drawing.Rectangle,System.Drawing.Rectangle,Qios.DevSuite.Components.QRelativePositions@,Qios.DevSuite.Components.QCommandDirections@)">
      <summary>
            Calculates the bounds of the QFloatingWindow.
            This methods returns the calculated bounds.
            The openingItemRelativePosition and animateDirection may have changed if the preferred bounds do not fit.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.Show(System.Drawing.Rectangle,Qios.DevSuite.Components.QCommandDirections)">
      <summary>
            Shows this QFloatingWindow.
            </summary>
      <param name="bounds">Bounds of the QFloatingWindow for positioning</param>
      <param name="animateDirection">The direction of the animation</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.Show(System.Drawing.Rectangle,System.Drawing.Rectangle,Qios.DevSuite.Components.QRelativePositions,Qios.DevSuite.Components.QCommandDirections)">
      <summary>
            Shows this QFloatingWindow.
            </summary>
      <param name="openingItemZone">The bounds where the QFloatingWindow may not overlap and where the openingItem is contained</param>
      <param name="openingItemBounds">The bounds of the item that opened the item, within the openingItemZone. </param>
      <param name="openingItemRelativePosition">The relative position of the Item that opened the Item. </param>
      <param name="animateDirection">The direction of the animation</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.OnClosed(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QFloatingWindow.Closed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QFloatingWindow.Closing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Hides or shows the QFloatingMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles WindowMessages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.SetOwnerWindowCore">
      <summary>
            Overridden. Sets the ownerwindow of this window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.CreateShadeWindow">
      <summary>
            Creates the shade window for this QFloatingWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.CreateConfigurationInstance">
      <summary>
            Creates the configuration instance for this QFloatingWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.OnSizeChanged(System.EventArgs)">
      <summary>
            Overridden. Handles a size changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.SetShadeWindowProperties">
      <summary>
            Sets the ShadeWindow properties
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.SetShadeWindowRegion">
      <summary>
            Sets the region of the Shade window. This normally excludes any parent Menu's so that the shade never overlaps
            any parent menu when it is drawn on the top or left side.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.Close(Qios.DevSuite.Components.QFloatingWindowCloseType)">
      <summary>
            Closes the window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindow.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes this window.
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="E:Qios.DevSuite.Components.QFloatingWindow.Closing">
      <summary>
            Gets raised when the QFloatingWindow is closing
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QFloatingWindow.Closed">
      <summary>
            Gets raised when the QFloatingWindow is closed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindow.OwnerWindow">
      <summary>
            New. Gets or sets the Owner of this window
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindow.Site">
      <summary>
            Gets or sets the Site of the control
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindow.Configuration">
      <summary>
            Gets or sets the QFloatingWindowConfiguration for this QFloatingWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindow.CreateParams">
      <summary>
            Overridden. Returns the CreateParams for this QFloatingMenu.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQManagedLayoutParent">
      <summary>
            Defines the interface for parent items that can be layed-out child items with the IQPart system.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQManagedLayoutParent.HandleChildObjectChanged(System.Boolean,System.Drawing.Rectangle)">
      <summary>
            Handles a change in a child object. (Normally action should be performing).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQManagedLayoutParent.IsPerformingLayout">
      <summary>
            Gets wether the control is performing layout
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQManagedLayoutParent.Control">
      <summary>
            Gets the control the ManagedLayoutParent is or is contained by.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.#ctor(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartCollection)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.#ctor(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartCollection,Qios.DevSuite.Components.QColorScheme,System.Windows.Forms.IWin32Window)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.#ctor(System.Windows.Forms.IWin32Window)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.CreateComposite(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartCollection)">
      <summary>
            Creates the QComposite for this QFloatingWindow.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.CreateCompositeConfiguration">
      <summary>
            Creates a possible composite configuration. The default implementation returns null and the composite is responsible
            for providing the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.CreateToolTipConfigurationInstance">
      <summary>
            Overridden. Creates the toolTip configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.CreateBalloon">
      <summary>
            Creates the balloon used for tooltips
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles WindowMessages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.SetShadeWindowProperties">
      <summary>
            Sets the ShadeWindow properties
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.SetShadeWindowRegion">
      <summary>
            Sets the region of the Shade window. This normally excludes any parent Menu's so that the shade never overlaps
            any parent menu when it is drawn on the top or left side.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Hides or shows the QFloatingMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.CreateConfigurationInstance">
      <summary>
            Creates the configuration instance for this QFloatingWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnUserSizing(Qios.DevSuite.Components.QUserSizingEventArgs)">
      <summary>
            Raises the UserSizing event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.CreateShadeWindow">
      <summary>
            Creates the shade window for this QFloatingWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.Close(Qios.DevSuite.Components.QFloatingWindowCloseType)">
      <summary>
            Closes the window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.Close(Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Closes the window with the specified closetype.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.HandleChildObjectChanged(System.Boolean,System.Drawing.Rectangle)">
      <summary>
            Handles a change of the childObjects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.ShouldSerializeChildCompositeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QCompositeWindow.ChildCompositeColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.ResetChildCompositeColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QCompositeWindow.ChildCompositeColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.ShouldSerializeChildCompositeConfiguration">
      <summary>
            Gets whether the ChildCompositeConfiguration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.ResetChildCompositeConfiguration">
      <summary>
            Resets the ChildCompositeConfiguration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.CreateAppearanceInstance">
      <summary>
            Overridden. Creates the Appearance instance. Overridden to return null. The QCompositeControl uses the appearance
            of its Configuration object to match the structure of the QCompositeItems.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnSizeChanged(System.EventArgs)">
      <summary>
            Overridden. Handles a size changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnEnabledChanged(System.EventArgs)">
      <summary>
            Raises the EnabledChanged event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnCompositeKeyPress(Qios.DevSuite.Components.QCompositeKeyboardCancelEventArgs)">
      <summary>
            Raises the CompositeKeyPress event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnSelectedItemChanged(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the SelectedItemChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnItemSelected(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeWindow.ItemSelected" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnItemExpanded(Qios.DevSuite.Components.QCompositeExpandedEventArgs)">
      <summary>
            Raises the ItemExpanded event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnItemExpanding(Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs)">
      <summary>
            Raises the ItemExpanding event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnItemCollapsed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the ItemCollapsed event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnItemCollapsing(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the ItemCollapsing event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnPaintItem(Qios.DevSuite.Components.QCompositePaintStageEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeWindow.PaintItem" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnItemActivating(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeWindow.ItemActivating" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeWindow.ItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.ShouldSerializeChildWindowConfiguration">
      <summary>
            Gets whether the ChildWindowConfiguration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.ResetChildWindowConfiguration">
      <summary>
            Resets the ChildWindowConfiguration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.ShouldSerializeCompositeConfiguration">
      <summary>
            Gets whether the Configuration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.ResetCompositeConfiguration">
      <summary>
            Resets the Configuration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseWheel event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseMove event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnMouseLeave(System.EventArgs)">
      <summary>
            Handles the MouseLeave event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnMouseEnter(System.EventArgs)">
      <summary>
            Handles the MouseEnter event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseDown event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseUp event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the background of the control
            </summary>
      <param name="pevent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.PerformLayout(System.Drawing.Size)">
      <summary>
            Performs layout with the requested size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Lays out the control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.SuspendChangeNotification">
      <summary>
            Suspends any change notification. Now no redraw or layout will occur.  It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.ResumeChangeNotification(System.Boolean)">
      <summary>
            Resumes any layout notification suspended by <see cref="M:Qios.DevSuite.Components.QCompositeWindow.SuspendChangeNotification" />. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.Show(System.Drawing.Rectangle,Qios.DevSuite.Components.QCommandDirections)">
      <summary>
            Overridden. Shows the window and handles the show of the container.
            </summary>
      <param name="bounds">
      </param>
      <param name="animateDirection">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.CalculateBounds(System.Drawing.Rectangle,System.Drawing.Rectangle,Qios.DevSuite.Components.QRelativePositions@,Qios.DevSuite.Components.QCommandDirections@)">
      <summary>
            Calculates the bounds of the QFloatingWindow.
            This methods returns the calculated bounds.
            The openingItemRelativePosition and animateDirection may have changed if the preferred bounds do not fit.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>
            Overridden. Deals with closing of this window.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindow.OnClosed(System.EventArgs)">
      <summary>
            Overridden. Deals with the close of this window.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.CompositeKeyPress">
      <summary>
            Gets raised when the QComposite is about to handle navigation keys that are pressed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.SelectedItemChanged">
      <summary>
            Gets raised when the selected item is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.ItemSelected">
      <summary>
            Gets raised when the QCompositeItemBase is selected
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.ItemExpanded">
      <summary>
            Gets raised when the item is expanded
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.ItemExpanding">
      <summary>
            Gets raised when the child container is expanding
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.ItemCollapsing">
      <summary>
            Gets raised when the item is collapsing
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.ItemCollapsed">
      <summary>
            Gets raised when the item is collapsed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.PaintItem">
      <summary>
            Gets raised when a layer of the QCompositeItem is painted
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.ItemActivating">
      <summary>
            Gets raised when the QCompositeItemBase is activating
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeWindow.ItemActivated">
      <summary>
            Gets raised when the QCompositeItemBase is activated
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.Controls">
      <summary>
            New. Contains the controls of the QCompositeControl. It is new because this property does not get serialized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.Configuration">
      <summary>
            Gets or sets the QFloatingWindowConfiguration for this QCompositeWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.MinimumClientSize">
      <summary>
            Overridden. Gets or sets the minimum size of the client area of the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.AssociatedComponents">
      <summary>
            Gets the associated components.
            </summary>
      <remarks>
            The list instance shouldn't be the same as the the Items instance, because overrides may add new designable items
            to the list.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.Composite">
      <summary>
            Gets the QComposite component. It is not recommended to use or configure this component directly. 
            All configuration should be done by the QCompositeControl or QCompositeWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.ChildCompositeColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used for child composites.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.ChildCompositeConfiguration">
      <summary>
            Contains the ChildCompositeConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.Appearance">
      <summary>
            Overridden. Gets the QAppearance for the QControl. Overridden to return null. The QCompositeControl uses the appearance
            of its Configuration object to match the structure of the QCompositeItems.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.ToolTipText">
      <summary>
            Gets or sets the ToolTipText. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            The ToolTip, see ToolTipConfiguration, must be enabled for this to show.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.BackColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarBackground1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.BackColor2PropertyName">
      <summary>
            Overridden. Returns the ToolBarBackground2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.BorderColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarBorderColor from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.Items">
      <summary>
            Gets the collection of QCompositeItems of this QCompositeControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.ChildWindowConfiguration">
      <summary>
            Contains the ChildWindowConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.CompositeConfiguration">
      <summary>
            Contains the Configuration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.ParentItem">
      <summary>
            Gets the parent composite item that opened this QCompositeWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindow.ChangeNotificationSuspended">
      <summary>
            Gets how many times the change is suspended.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeSeparatorConfiguration">
      <summary>
            Defines the configuration for the icon a <see cref="T:Qios.DevSuite.Components.QCompositeSeparator" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMaskConfiguration">
      <summary>
            Defines the base class for QCompositeItems that use a mask as an image.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeImageConfiguration">
      <summary>
            Defines the configuration for the Image a <see cref="T:Qios.DevSuite.Components.QCompositeImage" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImageConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImageConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMaskConfiguration.PropMask">
      <summary>Contains the property index</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMaskConfiguration.CurrentPropertyCount">
      <summary>Contains the property count in this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMaskConfiguration.TotalPropertyCount">
      <summary>Contains the total property count</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMaskConfiguration.#ctor(System.Drawing.Image)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMaskConfiguration.GetRequestedCount">
      <summary>
            Overridden, gets the requested property count
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMaskConfiguration.DefaultMask">
      <summary>
            Gets or sets the default mask for this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMaskConfiguration.UsedMask">
      <summary>
            Gets the actual used ShowDialogMask. This is based on whether the DropDownMask
            is set. If it is not set the default is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMaskConfiguration.Mask">
      <summary>
            Gets or sets the mask that is used.
            In the Mask the Color Red is replaced by the TextColor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparatorConfiguration.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparatorConfiguration.#ctor(System.Drawing.Image)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparatorConfiguration.GetOptions(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the options for the specified part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeSeparatorConfiguration.StretchHorizontal">
      <summary>
            Gets or sets whether the item is horizontal stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeSeparatorConfiguration.StretchVertical">
      <summary>
            Gets or sets whether the item is vertical stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeSeparatorConfiguration.ShrinkHorizontal">
      <summary>
            Gets or sets whether the item is horizontal shrinked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeSeparatorConfiguration.ShrinkVertical">
      <summary>
            Gets or sets whether the item is vertical stretched.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeIconConfiguration">
      <summary>
            Defines the configuration for the icon a <see cref="T:Qios.DevSuite.Components.QCompositeItem" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeIconConfiguration.PropIconSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeIconConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeIconConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIconConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIconConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIconConfiguration.IconSize">
      <summary>
            Gets or sets the size of the Icon
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeResizeItemConfiguration">
      <summary>
            Defines the configuration for the Image a <see cref="T:Qios.DevSuite.Components.QCompositeImage" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeItemConfiguration.PropResizeBorder">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeItemConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeItemConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeResizeItemConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeResizeItemConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeResizeItemConfiguration.ResizeBorder">
      <summary>
            Gets or sets the resize border
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeTextConfiguration">
      <summary>
            Defines the configuration for the title a <see cref="T:Qios.DevSuite.Components.QCompositeItem" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeTextConfiguration.PropDrawTextOptions">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeTextConfiguration.PropFontDefinition">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeTextConfiguration.PropFontDefinitionHot">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeTextConfiguration.PropFontDefinitionPressed">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeTextConfiguration.PropFontDefinitionExpanded">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeTextConfiguration.PropWrapText">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeTextConfiguration.PropOrientation">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeTextConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeTextConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeTextConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeTextConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeTextConfiguration.FontDefinition">
      <summary>
            Gets or sets the default FontDefinition
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeTextConfiguration.FontDefinitionHot">
      <summary>
            Gets or sets the FontDefinition for the hot state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeTextConfiguration.FontDefinitionPressed">
      <summary>
            Gets or sets the FontDefinition for the pressed state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeTextConfiguration.FontDefinitionExpanded">
      <summary>
            Gets or sets the FontDefinition for the expanded state
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeTextConfiguration.DrawTextOptions">
      <summary>
            Gets or sets additional options for drawing text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeTextConfiguration.WrapText">
      <summary>
            Gets or sets wether text must be wrapped when it doesn't fit.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeTextConfiguration.Orientation">
      <summary>
            Gets or sets the orientation
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemControlConfiguration">
      <summary>
            Defines the configuration for a <see cref="T:Qios.DevSuite.Components.QCompositeItemControl" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemControlConfiguration.PropScrollWithImage">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemControlConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemControlConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControlConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemControlConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested property  count.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemControlConfiguration.ScrollWithImage">
      <summary>
            Gets or sets whether an image of the control must be used when scrolling animated.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMarkupTextConfiguration">
      <summary>
            Defines the configuration for a QCompositeMarkupText.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMarkupTextConfiguration.PropFontDefinition">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMarkupTextConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMarkupTextConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupTextConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupTextConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupTextConfiguration.FontDefinition">
      <summary>
            Gets or sets the default FontDefinition
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupTextConfiguration.ContentAlignmentHorizontal">
      <summary>
            Overridden. This is not used on QCompositeMarkupText
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupTextConfiguration.ContentAlignmentVertical">
      <summary>
            Overridden. This is not used on QCompositeMarkupText
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandContainer">
      <summary>
            Is the base class for every control that contains a list of <see cref="T:Qios.DevSuite.Components.QCommand" /> objects like <see cref="T:Qios.DevSuite.Components.QMenu" /> or <see cref="T:Qios.DevSuite.Components.QFloatingMenu" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QControl">
      <summary>
            This is a base implementation for a controls that needs <see cref="T:Qios.DevSuite.Components.QColorScheme" /> or <see cref="T:Qios.DevSuite.Components.QAppearance" /> implementations.
            <br /><br />
            It also contains the possibility to inherit the default Windows font by specifying the <see cref="P:Qios.DevSuite.Components.QControl.FontScope" />. You can define
            the position of the background image by setting <see cref="P:Qios.DevSuite.Components.QControl.BackgroundImageAlign" /> property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.#ctor">
      <summary>
            Default contructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.SetQControlStyles(Qios.DevSuite.Components.QControlStyles,System.Boolean)">
      <summary>
            Sets extra <see cref="T:Qios.DevSuite.Components.QControlStyles" /> for this control. Value indicates whether the styles must be set.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ShouldSerializeColorScheme">
      <summary>
            Returns whether the <see cref="P:Qios.DevSuite.Components.QControl.ColorScheme" /> changes from its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ResetColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QControl.ColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ShouldSerializeAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QControl.Appearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ResetAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QControl.Appearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ShouldSerializeToolTipConfiguration">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QControl.ToolTipConfiguration" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ResetToolTipConfiguration">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QControl.ToolTipConfiguration" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ShouldSerializeLocalFont">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QControl.LocalFont" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ResetLocalFont">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QControl.LocalFont" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ShouldSerializeBackColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QControl.BackColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ResetBackColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QControl.BackColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ShouldSerializeBackColor2">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QControl.BackColor2" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ResetBackColor2">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QControl.BackColor2" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ShouldSerializeBorderColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QControl.BorderColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.ResetBorderColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QControl.BorderColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.AddAdditionalToolTipControl(System.Windows.Forms.Control)">
      <summary>
            Adds a control for which this the ToolTipText of this control will also be shown.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.RemoveAdditionalToolTipControl(System.Windows.Forms.Control)">
      <summary>
            Remove a control that was added via <see cref="M:Qios.DevSuite.Components.QControl.AddAdditionalToolTipControl(System.Windows.Forms.Control)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.StartTimer(System.Int32,System.Int32)">
      <summary>
            Starts a timer with the specified timerId to the specified interval for this Control.
            When the timer elapses the <see cref="E:Qios.DevSuite.Components.QControl.TimerElapsed" /> event is raised with the specified timerId.
            To change the interval of a timer call this method again with the same timerId.
            You set several timers with different timerIds. The timerIds only have to be unique for this Control
            </summary>
      <remarks>Make sure you start your TimerIds from 1024, under 1024 are used for internal purposes</remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.StopTimer(System.Int32)">
      <summary>
            Stops the timer that was set with <see cref="M:Qios.DevSuite.Components.QControl.StartTimer(System.Int32,System.Int32)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.SetFontToFontScope">
      <summary>
            Is used to set the Font property to the correct Font. This is based on the QFontScope.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.OnFontChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the FontChanged event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.OnBackgroundImageChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the BackgroundImageChanged event when necessary.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.DefaultOnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Executes the default OnPaintBackground of a Control. Use this method
            if you don't want the customized QControl.OnPaintBackground to execute.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.DefaultPaintBackground(Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceBase,System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the background with the specified params.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the background of the control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.CreateAppearanceInstance">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QAppearance.
            This can be an inherited class of QAppearance.
            </summary>
      <returns>A new QAppearance instance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.CreateToolTipConfigurationInstance">
      <summary>
            Can be used by subclasses to implement an other ToolTipConfiguration.
            </summary>
      <returns>A new QToolTipConfiguration Instance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.CreateBalloon">
      <summary>
            Creates the balloon used for tooltips
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Extends the WndProc.
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.OnHandleCreated(System.EventArgs)">
      <summary>
            Overridden. Handles the HandleCreated event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.OnWindowsXPThemeChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QControl.WindowsXPThemeChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QControl.TimerElapsed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControl.OnColorsChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QControl.ColorsChanged" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.InitialFontScope">
      <summary>
            Gets the FontScope to initialize the QControl with
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QControl.WindowsXPThemeChanged">
      <summary>
            Is raised when the Windows XP theme is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QControl.ColorsChanged">
      <summary>
            Gets raised when the colors or the QColorScheme changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QControl.TimerElapsed">
      <summary>
            Gets raised when a timer that was set with the <see cref="M:Qios.DevSuite.Components.QControl.StartTimer(System.Int32,System.Int32)" /> method elapses.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.BackgroundImageAlign">
      <summary>
            Gets the or sets the alignment of the BackgroundImage for the QControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.BackgroundImageOffset">
      <summary>
            Gets or sets a relative offset to add to the BackgroundImage position.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.ParentForm">
      <summary>
            Gets the ParentForm of the Control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.Appearance">
      <summary>
            Gets the QAppearance for the QControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.ToolTipText">
      <summary>
            Gets or sets the ToolTipText. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            The ToolTip, see <see cref="P:Qios.DevSuite.Components.QControl.ToolTipConfiguration" />, must be enabled for this to show.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.ToolTipConfiguration">
      <summary>
            Gets the QToolTipConfiguration for this QControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.Font">
      <summary>
            Overridden. The new Font property hides the Font. The Font is set by the values depending
            on <see cref="P:Qios.DevSuite.Components.QControl.LocalFont" /> and the <see cref="P:Qios.DevSuite.Components.QControl.FontScope" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.FontScope">
      <summary>
            The scope of the font. When the scope is set
            To <b>Local</b> the <see cref="P:Qios.DevSuite.Components.QControl.LocalFont" /> is used, else the Font is defined by Windows or the QGlobalFont.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.LocalFont">
      <summary>
            Is used when the <see cref="P:Qios.DevSuite.Components.QControl.FontScope" /> is set to Local.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.BackColor">
      <summary>
            Overridden. Gets the BackColor of this Control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.BackColor2">
      <summary>
            Overridden. Gets or Sets the BackColor2 of this Control.  This Color is used when the Appearance is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.ForeColor">
      <summary>
            Overridden. Gets the ForeColor of this Control, this is never used on a QControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.BorderColor">
      <summary>
            Overridden. Gets or sets the BorderColor of this control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.CreateParams">
      <summary>
            Overridden. Returns the CreateParams for this QMenuItemContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.DrawBorders">
      <summary>
            Determines if the borders are drawn
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.BackColorPropertyName">
      <summary>
            Should return the PropertyName of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the first BackColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.BackColor2PropertyName">
      <summary>
            Should return the PropertyName of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the second BackColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.BorderColorPropertyName">
      <summary>
            Should return the PropertyName of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the BorderColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.WindowsXPThemeClass">
      <summary>
            Should return the ThemeClass to use for the Windows XP Theme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControl.WindowsXPTheme">
      <summary>
            Gets the Opened Windows XP Theme. 
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQCommandContainer">
      <summary>
            IQCommandContainer is the base interface for every QCommandContainer. 
            This is implemented by <see cref="T:Qios.DevSuite.Components.QCommandContainer" /> for example.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQCommandContainer.HandleCommandCollectionChanged(System.Int32,System.Int32)">
      <summary>
            Handles a change on the CommandCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQCommandContainer.HandleCommandChanged(Qios.DevSuite.Components.QCommandUIRequest,Qios.DevSuite.Components.QCommand)">
      <summary>
            Handles a change on the ChildCommand.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQCommandContainer.ContainsOrIsContainerWithHandle(System.IntPtr)">
      <summary>
            Returns whether this QCommandContainer is the container with handle as its Handle, or contains
            a ChildContainer with handle as its Handle.
            </summary>
      <returns>true when it is or contains the handle, else false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.IQCommandContainer.RetrieveTopmostControl">
      <summary>
            Retrieves the Top control of the chain of QCommandContainers. This is probably the main form.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQCommandContainer.Refresh">
      <summary>
            Refreshes the container.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQCommandContainer.FullName">
      <summary>
            Gets the FullName of the CommandContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQCommandContainer.Bounds">
      <summary>
            Gets or sets the Bounds of the container.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQCommandContainer.IsDisposed">
      <summary>
            Returns whether the CommandContainer is disposed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQCommandContainer.OwnerWindow">
      <summary>
            Contains a possible OwnerWindow for this container.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQCommandContainer.Commands">
      <summary>
            Gets the QCommandCollection of this CommandContainer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.#ctor">
      <summary>
            Protected constructor. Creates a QCommandContainer with its own QCommandCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.#ctor(Qios.DevSuite.Components.IQCommandContainer)">
      <summary>
            Protected contstructor. Creates a QCommandContainer and uses commands as its collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.#ctor(Qios.DevSuite.Components.QCommand,Qios.DevSuite.Components.QCommandCollection)">
      <summary>
            Protected contstructor. Creates a QCommandContainer and uses commands as its collection.
            </summary>
      <param name="parentCommand">Defines the parent <see cref="T:Qios.DevSuite.Components.QCommand" /> of this CommandContainer.</param>
      <param name="commands">Defines the <see cref="T:Qios.DevSuite.Components.QCommandCollection" /> to use.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.SuspendChanges">
      <summary>
            Suspends changes. This is usefull when changing a lot of items.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.ResumeChanges(Qios.DevSuite.Components.QCommandUIRequest)">
      <summary>
            Resumes the changes suspended with <see cref="M:Qios.DevSuite.Components.QCommandContainer.SuspendChanges" />. When a updateRequest is given
            the redraw or performlayout is executed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.SetOwnerWindowCore">
      <summary>
            Virtual. When overridden it must take appropiate action for a changed owner window.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.HandleCommandCollectionChanged(System.Int32,System.Int32)">
      <summary>
            Handles a change on the CommandCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.HandleCommandChanged(Qios.DevSuite.Components.QCommandUIRequest)">
      <summary>
            Obsolete since Qios.DevSuite 2.0. Use the overload with the sender
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.HandleCommandChanged(Qios.DevSuite.Components.QCommandUIRequest,Qios.DevSuite.Components.QCommand)">
      <summary>
            Handles a change on the ChildCommand.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.RetrieveTopmostControl">
      <summary>
            Retrieves the top Control of the chain of QCommandContainers. This is probably the MainForm.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.ContainsOrIsContainerWithHandle(System.IntPtr)">
      <summary>
            Returns whether this QCommandContainer is the container with handle, or contains
            a ChildContainer with handle.
            </summary>
      <returns>true when it is or contains the handle, else false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.CreateCommandCollection">
      <summary>
            Creates a new QCommandCollection to store commands in.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandContainer.PutPerformingLayout(System.Boolean)">
      <summary>
            Sets the <see cref="P:Qios.DevSuite.Components.QCommandContainer.PerformingLayout" /> property to the specified value.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.FullName">
      <summary>
            Gets the full name of the QCommandContainer. This is equal to the full name of its <see cref="P:Qios.DevSuite.Components.QCommandContainer.ParentCommand" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.Commands">
      <summary>
            Gets the collection of QCommands of this QCommandContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.ParentCommand">
      <summary>
            Gets the QCommand that is used to create this QCommandContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.CustomParentCommandContainer">
      <summary>
            Gets or sets a custom parent CommandContainer. This can be used to link QCommandContainers
            without a command.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.ParentCommandContainer">
      <summary>
            Gets the parent CommandContainer. When the Container has a parent command
            the parent of that command will be returned as QCommandContainer.
            Otherwise the CustomParentCommandContainer will be returned.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.PerformingLayout">
      <summary>
            Gets whether this QCommandContainer is busy performing layout.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.OwnerWindow">
      <summary>
            Gets or sets a possible OwnerWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.ChangesSuspended">
      <summary>
            Gets whether layout and redraw changes are suspended. This is usefull when changing a lot of items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.Bounds">
      <summary>
            Overridden. Gets or sets the bounds of this QCommandContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandContainer.IsDisposed">
      <summary>
            Overridden. Gets whether this QCommandContainer is disposed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandContainerOrientation">
      <summary>
            This enumeration is used to indicate the orientation of a <see cref="T:Qios.DevSuite.Components.QCommandContainer" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandContainerOrientation.None">
      <summary>
            No orientation.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandContainerOrientation.Vertical">
      <summary>
            The Container is oriented vertically.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandContainerOrientation.Horizontal">
      <summary>
            The Container is oriented horizontally.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QRoundedRectanglePainter">
      <summary>
            Defines the painter for rounded rectangles.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRoundedRectanglePainter.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRoundedRectanglePainter.FillBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QRoundedRectanglePainterProperties,Qios.DevSuite.Components.QAppearanceFillerProperties,Qios.DevSuite.Components.QPainterOptions,System.Drawing.Graphics)">
      <summary>
            Fills the background of the rounded rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRoundedRectanglePainter.FillForeground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QRoundedRectanglePainterProperties,Qios.DevSuite.Components.QAppearanceFillerProperties,Qios.DevSuite.Components.QPainterOptions,System.Drawing.Graphics)">
      <summary>
            Fills the foreground, drawing the borders, of the rounded rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRoundedRectanglePainter.Paint(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QRoundedRectanglePainterProperties,Qios.DevSuite.Components.QAppearanceFillerProperties,Qios.DevSuite.Components.QPainterOptions,System.Drawing.Graphics)">
      <summary>
            Paints the complete rounded rectangle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRoundedRectanglePainter.Default">
      <summary>
            Gets the default RoundedRectanglePainter.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QRoundedRectanglePainterProperties">
      <summary>
            Contains additional properties to Paint with <see cref="T:Qios.DevSuite.Components.QRoundedRectanglePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRoundedRectanglePainterProperties.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRoundedRectanglePainterProperties.Options">
      <summary>
            Gets or sets the RoundedRectangle Options.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRoundedRectanglePainterProperties.CornerSize">
      <summary>
            Gets or sets the CornerSize
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRoundedRectanglePainterProperties.Default">
      <summary>
            Contains the default QRectanglePainterProperties
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDrawRoundedRectangleOptions">
      <summary>
            Indicates which corners should be rounded in the <see cref="T:Qios.DevSuite.Components.QRoundedRectanglePainter" /> painter.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawRoundedRectangleOptions.None">
      <summary>
            No corner is rounded
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawRoundedRectangleOptions.TopLeft">
      <summary>
            The top-left corner is rounded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawRoundedRectangleOptions.TopRight">
      <summary>
            The top-right corner is rounded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawRoundedRectangleOptions.BottomLeft">
      <summary>
            The bottom-left corner is rounded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawRoundedRectangleOptions.BottomRight">
      <summary>
            The bottom-right corner is rounded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawRoundedRectangleOptions.All">
      <summary>
            All corners are rounded.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QRectanglePainter">
      <summary>
            Defines the painter for rectangles.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRectanglePainter.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRectanglePainter.FillBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QRectanglePainterProperties,Qios.DevSuite.Components.QAppearanceFillerProperties,Qios.DevSuite.Components.QPainterOptions,System.Drawing.Graphics)">
      <summary>
            Fills the background of the rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRectanglePainter.FillForeground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QRectanglePainterProperties,Qios.DevSuite.Components.QAppearanceFillerProperties,Qios.DevSuite.Components.QPainterOptions,System.Drawing.Graphics)">
      <summary>
            Fills the foreground, drawing the borders, of the rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRectanglePainter.Paint(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QRectanglePainterProperties,Qios.DevSuite.Components.QAppearanceFillerProperties,Qios.DevSuite.Components.QPainterOptions,System.Drawing.Graphics)">
      <summary>
            Paints the complete rectangle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRectanglePainter.Default">
      <summary>
            Gets the default rectanglePainter.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QRectanglePainterProperties">
      <summary>
            Contains additional properties to Paint with <see cref="T:Qios.DevSuite.Components.QRectanglePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRectanglePainterProperties.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRectanglePainterProperties.Default">
      <summary>
            Contains the default QRectanglePainterProperties
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQShadedAppearance">
      <summary>
            Defines the interface for shaded appearances
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQShadedAppearance.ShadeOffset">
      <summary>
            Gets the offset of the shade
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQShadedAppearance.ShadeGradientSize">
      <summary>
            Gets or sets the size of the gradient of the shade.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQShadedAppearance.ShadeVisible">
      <summary>
            Gets or sets whether the shade is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQShadedAppearance.ShadeClipToShapeBounds">
      <summary>
            Gets or sets whether the shade must be clipped to the bounds of the shape. This is usefull to make sure
            a shade does not overlap some underlaying element. If the clipping is to small adjust
            the ShadeClipMargin or make the bounds of the shape bigger.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQShadedAppearance.ShadeClipMargin">
      <summary>
            Gets or sets the margin to correct shade-clipping. This is used with <see cref="P:Qios.DevSuite.Components.IQShadedAppearance.ShadeClipToShapeBounds" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQShadedAppearance.ShadeGrowPadding">
      <summary>
            Gets or sets the amount of padding that the shade must grow relative to the Shape.
            This is usefull for example when a Shape is drawn with Dock = Right and the shade must 
            be drawn till the left of the shape.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQShadedShapeAppearance">
      <summary>
            Defines the interface for shaped and shaped appearances
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppearanceFillers">
      <summary>
            Contains the available AppearanceFillers. Access the instance of this class via <see cref="P:Qios.DevSuite.Components.QAppearanceFiller.Fillers" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceFillers.Item(Qios.DevSuite.Components.QColorStyle)">
      <summary>
            Gets the filler for the specified colorStyle
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMath">
      <summary>
            Contains helper math functions
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.GetStartForCenter(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns the StartCoordinate to align the object with size in the middle
            of position1 and position2.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.ValueInMargin(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns whether value is between measureValue - margin and measureValue + margin
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.SetX(System.Drawing.Rectangle,System.Int32)">
      <summary>
            Sets the X property of the specified rectangle. This is used because you cannot set the X or Y when
            the rectangle is a property.
            </summary>
      <returns>The adapted rectangle</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.SetY(System.Drawing.Rectangle,System.Int32)">
      <summary>
            Sets the Y property of the specified rectangle. This is used because you cannot set the X or Y when
            the rectangle is a property.
            </summary>
      <returns>The adapted rectangle</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.SetHeight(System.Drawing.Rectangle,System.Int32)">
      <summary>
            Sets the Height property of the specified rectangle. This is used because you cannot set the Height or Width when
            the rectangle is a property.
            </summary>
      <returns>The adapted rectangle</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.SetWidth(System.Drawing.Rectangle,System.Int32)">
      <summary>
            Sets the Width property of the specified rectangle. This is used because you cannot set the Height or Width when
            the rectangle is a property.
            </summary>
      <returns>The adapted rectangle</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.SetRight(System.Drawing.Rectangle,System.Int32)">
      <summary>
            Sets the Right property of the specified rectangle.
            </summary>
      <returns>The adapted rectangle</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.SetBottom(System.Drawing.Rectangle,System.Int32)">
      <summary>
            Sets the Bottom property of the specified rectangle.
            </summary>
      <returns>The adapted rectangle</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.MoveRectangleIntoBounds(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
            Makes sure the rectangle exists in the specified bounds. So it moves it to the left if it
            exceeds on the right side, moves it to the top if rectangle exceeds at the bottom, etc.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.RotateAlignment(System.Drawing.ContentAlignment,Qios.DevSuite.Components.QContentOrientation)">
      <summary>
            Rotates the specified content to the specified orientation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.RotateImageAlign(Qios.DevSuite.Components.QImageAlign,Qios.DevSuite.Components.QContentOrientation)">
      <summary>
            Rotates the specified content to the specified orientation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.AlignElement(System.Int32,Qios.DevSuite.Components.QContentAlignment,System.Boolean,Qios.DevSuite.Components.QRange)">
      <summary>
            Aligns the specified size in the specified range with the specified alignment.
            </summary>
      <param name="size">the size to align</param>
      <param name="alignment">the type of alignment</param>
      <param name="nearIsStart">Indicates if 'near' indicates the start of the range, else it indicates the end of the range.</param>
      <param name="range">The range to align it in</param>
      <returns>The range that contains the size aligned in the specified range</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.AlignElement(System.Drawing.Size,System.Drawing.ContentAlignment,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Aligns the element with size in the specified rectangle. 
            </summary>
      <param name="size">The size of the element to align</param>
      <param name="alignment">Type of alignment</param>
      <param name="rectangle">The rectangle to align the element in.</param>
      <param name="allowOverflow">Indicates if the resulting rectangle may overflow the rectangle</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.AlignTextIconRangesNextToEachOther(Qios.DevSuite.Components.QContentOrder,Qios.DevSuite.Components.QRange@,Qios.DevSuite.Components.QRange@,Qios.DevSuite.Components.QRange,System.Boolean)">
      <summary>
            Aligns the image and text ranges next to eachother in the fullRange when the overlap. Besides that
            it makes sure the ranges are set as contentOrder specifies.
            </summary>
      <param name="contentOrder">Contains the content order. If the ranges do not meet the content order they are moved.</param>
      <param name="imageRange">Contains the range where the image is located.</param>
      <param name="textRange">Contains the range where the text is located.</param>
      <param name="fullRange">The full range where imageRange and textRange must be aligned in</param>
      <param name="resizeTextRangeOnOverflow">Indicates if textRange must be resized when it doesn't fit. If this is false imageRange is resized</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.AlignRangesNextToEachOther(Qios.DevSuite.Components.QRange@,Qios.DevSuite.Components.QRange@,Qios.DevSuite.Components.QRange,System.Boolean)">
      <summary>
            Aligns the two ranges next to eachother in the fullRange when the overlap. range1 is always aligned to the left
            and range2 is always aligned to the right.
            </summary>
      <param name="range1">The range to align left. On output this contains the new range1</param>
      <param name="range2">The range to align right. On output this contains the new range2</param>
      <param name="fullRange">The full range where range1 and range2 must be aligned in</param>
      <param name="resizeRange2OnOverflow">Indicates if range2 must be resized when it doesn't fit. If this is false range1 is resized</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.RotateAngle(System.Int32,System.Int32)">
      <summary>
            Rotates an angle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.CalculateNormalizedVector(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Gets the vector of a point relative to the next point. The normalized vector means the value
            that the location must move down with Y when moving right with X to travel 1 in length.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.CalculateLineLength(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Calculates the line length between 2 points.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.PointInBetween(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Returns whether pointToCheck lies between point0 and point1. The order of point0 and point1 doesn't matter
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.LinesIntersect(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Returns whether the two lines defined by (point0-point1) and (point2-point3) intersect eachother.
            The intersectionPoint contains the point where they intersect (also when they don't intersect).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.LineCrossesPoint(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single)">
      <summary>
            Returns whether the line crosses the specified pointToCompare with the specified margin.
            intersectionPoint contains the point closesed to pointToCompare that intersects the specified line.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.LineCrossesRectangle(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.RectangleF)">
      <summary>
            Returns whether the line specified by linePoint1 and linePoint2 crosses the rectangle.
            If it crosses the intersectionPoint contains the intersectionPoint.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.CreateTransformationMatrix(System.Drawing.RectangleF,System.Drawing.SizeF,System.Windows.Forms.DockStyle)">
      <summary>
            Creates a Transformation Matrix to rotate the a size.
            </summary>
      <param name="destinationBounds">Contains the destination rectangle.</param>
      <param name="size">Contains the size of the destination (always horizontal)</param>
      <param name="dockStyle">Contains the DockStyle</param>
      <returns>The new created matrix</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.CalculateFontAscent(System.Drawing.Graphics,System.Drawing.Font)">
      <summary>
            Calculates the font ascent of the element. This is the height above the baseline
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.CalculateFontDescent(System.Drawing.Graphics,System.Drawing.Font)">
      <summary>
            Calculates the font descent of the part. This is the height below the baseline
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMath.CalculateOuterSize(Qios.DevSuite.Components.QShape,Qios.DevSuite.Components.QPadding,Qios.DevSuite.Components.QMargin,System.Drawing.Size,System.Boolean)">
      <summary>
            Calculates the OuterSize based on the contentSize, a shape, a margin and a padding.
            </summary>
      <param name="shape">Contains the shape. Can be null.</param>
      <param name="padding">Contains the padding</param>
      <param name="margin">Contains the margin</param>
      <param name="contentSize">Contains the size of the content.</param>
      <param name="horizontal">Defines whether it must be calculated horizontal or vertical</param>
      <returns>The outer size</returns>
    </member>
    <member name="T:Qios.DevSuite.Components.QLinePointResult">
      <summary>
            Result class for methods that return a boolean value and a corresponding point.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QLinePointResult.#ctor(System.Boolean,System.Drawing.PointF)">
      <summary>
            Default constructor
            </summary>
      <param name="result">Primary result of the method</param>
      <param name="location">Corresponding point calculated by the method</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QLinePointResult.Result">
      <summary>
            Primary result of the method
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QLinePointResult.Location">
      <summary>
            Corresponding point calculted by the method
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QWeakReference">
      <summary>
            Implements a WeakReference with a finalized bit. When all objects are getting disposed in an application (because it gets closed).
            It is possible that a WeakReference is finalized before the object that contains the WeakReference. In that case WeakReference.IsAlive throws an exception.
            Therefore the finalized bit.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReference.#ctor(System.Object)">
      <summary>
            Constructor.
            </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReference.Finalize">
      <summary>
            Finalizer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QWeakReference.Finalized">
      <summary>
            Gets whether the finalizer of this QWeakReference has run.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPropertyBagHost">
      <summary>
            Defines the interface for classes that have a QPropertyBag as its property container. This can be usefull
            for using the <see cref="T:Qios.DevSuite.Components.Design.QPropertyBagHostTypeConverter" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPropertyBagHost.Properties">
      <summary>
            Contains the PropertyBag
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartShapePainter">
      <summary>
            QPartPaintedShape defines the object used by <see cref="T:Qios.DevSuite.Components.IQPart" /> to indicate that a <see cref="T:Qios.DevSuite.Components.QShape" /> is drawn.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartObjectPainter">
      <summary>
            Defines a base implementation of IQPartObjectPainter. This is the best base for object painters.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPartObjectPainter">
      <summary>
            IQPartObjectPainter defines the interface used by <see cref="T:Qios.DevSuite.Components.IQPart" /> to specify how it is drawn.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartObjectPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Draws the specified object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartObjectPainter.AddPainter(Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Adds the specified painter to end of the linked list.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartObjectPainter.RemovePainter(Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Removes the specified painter from the linked list.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartObjectPainter.ContainsPainter(Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Returns whether the specified painter is contained in the linked list of the current painter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartObjectPainter.GetPainter(System.Type)">
      <summary>
            Gets the painter of the specified type out of the linked list.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPartObjectPainter.Enabled">
      <summary>
            Gets or sets whether the painter is enabled. If it is disabled nothing should be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPartObjectPainter.NextPainter">
      <summary>
            Gets or sets a possible next Painter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.ContainsPainter(Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Gets whether this painter contains the specified painter in the linked list.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.GetPainter(System.Type)">
      <summary>
            Gets the first painter of the specified type
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.AddPainter(Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Adds a painter as last painter in the linked list.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.RemovePainter(Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Removes a painter from the linked list.
            </summary>
      <param name="painter">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Must paint the specified part on the specified paint context.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.ContainsPainter(Qios.DevSuite.Components.IQPartObjectPainter[],Qios.DevSuite.Components.QPartPaintLayer,Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Returns whether the specified painter array contains the specified painter for the specified layer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.SetObjectPainter(Qios.DevSuite.Components.IQPartObjectPainter[],Qios.DevSuite.Components.QPartPaintLayer,Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Sets a painter in the specified array. If the array is null it gets created. It returns the (possible new) array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.GetObjectPainter(Qios.DevSuite.Components.IQPartObjectPainter[],Qios.DevSuite.Components.QPartPaintLayer)">
      <summary>
            Gets a painter from the specified array. Returns null if there is none.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.GetObjectPainter(Qios.DevSuite.Components.IQPartObjectPainter[],Qios.DevSuite.Components.QPartPaintLayer,System.Type)">
      <summary>
            Gets the first painter painter from the specified array of the specified type.
            painterType can be null, then the first painter is returned.
            Returns null if there is none.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.AddObjectPainter(Qios.DevSuite.Components.IQPartObjectPainter[],Qios.DevSuite.Components.QPartPaintLayer,Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Adds an object painter for the specified layer. Returns a possible altered painter array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartObjectPainter.RemoveObjectPainter(Qios.DevSuite.Components.IQPartObjectPainter[],Qios.DevSuite.Components.QPartPaintLayer,Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Removes an object painter from the specified layer. Returns a possible altered painter array.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartObjectPainter.Enabled">
      <summary>
            Gets or sets whether the painter is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartObjectPainter.NextPainter">
      <summary>
            Gets or sets a possible next painter for the layer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartShapePainter.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartShapePainter.PutLastDrawnGraphicsPath(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
            Sets the last drawn graphics path.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartShapePainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartShapePainter.DrawOnBounds">
      <summary>
            Gets or sets the bounds where the painter should paint on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartShapePainter.Appearance">
      <summary>
            Gets or sets the appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartShapePainter.LastDrawnGraphicsPath">
      <summary>
            Gets the last drawn GraphicsPath.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartShapePainter.Properties">
      <summary>
            Gets or sets shape painter properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartShapePainter.FillerProperties">
      <summary>
            Gets or sets appearance filler properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartShapePainter.PropertiesToUse">
      <summary>
            Gets the properties to use for painting. This returns the default properties if there are no properties set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartShapePainter.FillerPropertiesToUse">
      <summary>
            Gets the properties to use for filling. This returns the default properties if there are no properties set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartShapePainter.Options">
      <summary>
            Gets or sets painter options.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartShapePainter.ColorSet">
      <summary>
            Gets or sets the QColorSet to use
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QThemeInfoCollectionCodeSerializer">
      <summary>
            Defines a CodeDomSerializer for the <see cref="T:Qios.DevSuite.Components.QThemeInfoCollection" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QThemeInfoCollectionCodeSerializer.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QThemeInfoCollectionCodeSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Serializes the specified <see cref="T:Qios.DevSuite.Components.QThemeInfoCollection" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QThemeInfoCollectionCodeSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Deserializes the specified <see cref="T:Qios.DevSuite.Components.QThemeInfoCollection" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QShapeItemConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QShapeItem" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QShapeItem" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QShapeItem" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeItemConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this Typeconvert can convert a <see cref="T:Qios.DevSuite.Components.QShapeItem" /> from the given SourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeItemConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because this type has properties, GetPropertiesSupported returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeItemConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            Overridden. returns the properties of a <see cref="T:Qios.DevSuite.Components.QShapeItem" /> object.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QPartCollectionEditor">
      <summary>
            Defines a base CollectionEditor for the QPartCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPartCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor.
            </summary>
      <param name="type">The Type to create this Editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPartCollectionEditor.CreateCollectionForm">
      <summary>
            Overridden. Returns an instance of the used CollectionForm.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPartCollectionEditor.GetItems(System.Object)">
      <summary>
            Overridden. Gets the items. It does not show the system parts.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPartCollectionEditor.CreateChildCollectionEditor">
      <summary>
            Creates a new collection editor to edit childs with.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPartCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Overridden. Edits the specified <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPartCollectionEditor.CreateInstance(System.Type)">
      <summary>
            Overridden. Creates an instance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QMenuItemConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QMenuItem" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> to the specified destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> to the given destinationType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QImageAlignConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QImageAlign" /> type. It can convert from and to a ContentAlignment type
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QImageAlignConverter.#ctor">
      <summary>
            Constructor, creates a QImageAlignConverter
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QImageAlignConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QPadding" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QImageAlignConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Overridden. Converts an object to a <see cref="T:Qios.DevSuite.Components.QImageAlign" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QImageAlignConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QPadding" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QImageAlignConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this Typeconvert can convert a <see cref="T:Qios.DevSuite.Components.QPadding" /> from the given SourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QImageAlignConverter.ConvertFromContentAlignment(System.Drawing.ContentAlignment)">
      <summary>
            Converts a ContentAlignment to a QImageAlign
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QImageAlignConverter.ConvertToContentAlignment(Qios.DevSuite.Components.QImageAlign)">
      <summary>
            Converts a QImageAlign to a ContentAlignment
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QExplorerBarDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QMenuItemContainer" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.GetHitTest(System.Drawing.Point)">
      <summary>
            Overridden. Handles the hit test request.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Overriden. Creates an instances of a toolbox item and places it on the control.
            </summary>
      <param name="tool">Toolboxitem to create an instance of</param>
      <param name="x">X coordinate to place the control</param>
      <param name="y">Y coordinate to place the control</param>
      <param name="width">Width of the control</param>
      <param name="height">Height of the control</param>
      <param name="hasLocation">True if the location is specified</param>
      <param name="hasSize">True if the size is specified</param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.OnSetCursor">
      <summary>
            Overriden. Sets the cursor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>
            Overridden. Handles the dragenter event.
            </summary>
      <param name="de">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>
            Overridden. Handles the dragdrop event.
            </summary>
      <param name="de">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>
            Overridden. Handles the dragover event
            </summary>
      <param name="de">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.OnDragLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the dragleave event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.Verbs">
      <summary>
            Overridden. Gets the verbs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QMenuItemContainerDesigner.AssociatedComponents">
      <summary>
            Overridden. Gets the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QContextMenuDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QContextMenu" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QContextMenuDesigner.Verbs">
      <summary>
            Overridden. Gets the verbs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QContextMenuDesigner.AssociatedComponents">
      <summary>
            Overridden. Gets the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeItemConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> to the specified destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> to the given destinationType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite">
      <summary>
            Defines the composite for the QRibbonCaption
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QComposite">
      <summary>
            Defines a class for combining and drawing visual interactive elements such as shapes, textparts, iconparts and imageparts.
            The QComposite should be contained by a Control that passes the mouse events and handles the invalidate and perform requests.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQScrollablePart">
      <summary>
            Defines the interface for parts that can be scrolled.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQScrollablePart.CaptureMouse(Qios.DevSuite.Components.QScrollablePartData)">
      <summary>
            Tells the implementor to capture the mouse for the speciified scrollablePartData.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQScrollablePart.ScrollData">
      <summary>
            Gets the QScrollablePart data.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.Finalize">
      <summary>
            Destructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.GetState(Qios.DevSuite.Components.QItemStates,System.Boolean)">
      <summary>
            Gets the state of the current item. This implementation does nothing with includeParentStates
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.HasStatesDefined(Qios.DevSuite.Components.QItemStates,Qios.DevSuite.Components.QTristateBool)">
      <summary>
            Gets which state of the checkForStates has a definition that equals stateValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.HasStatesDefined(Qios.DevSuite.Components.QItemStates)">
      <summary>
            Gets whether this item has a definition for the specified state(s). The default implementation
            calls HasStatesDefined with QTristateBool.True, and returns true if all the states are defined.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.AdjustState(Qios.DevSuite.Components.QItemStates,System.Boolean)">
      <summary>
            Sets the state for this QComposite, invalidates it when requested.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ShouldSerializeConfiguration">
      <summary>
            Gets whether the Configuration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ResetConfiguration">
      <summary>
            Resets the Configuration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ShouldSerializeChildWindowConfiguration">
      <summary>
            Gets whether the ChildWindowConfiguration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ResetChildWindowConfiguration">
      <summary>
            Resets the ChildWindowConfiguration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ShouldSerializeChildCompositeConfiguration">
      <summary>
            Gets whether the ChildWindowConfiguration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ResetChildCompositeConfiguration">
      <summary>
            Resets the ChildCompositeConfiguration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ShouldSerializeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QComposite.ColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ResetColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QComposite.ColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ShouldSerializeChildCompositeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QComposite.ChildCompositeColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ResetChildCompositeColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QComposite.ChildCompositeColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.CreateScrollData">
      <summary>
            Creates the ScrollData.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.SynchronizeScrollData">
      <summary>
            Creates or destroys scroll data when needed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ClearCachedParents">
      <summary>
            Clears the cached parents.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeItemBase and returns the array with painters.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.CreateColorScheme">
      <summary>
            Creates the ColorScheme for this QComposite
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.CreateChildCompositeColorScheme">
      <summary>
            Creates the ColorScheme for child composites
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.CreateConfiguration">
      <summary>
            Creates the Configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.CreateChildWindowConfiguration">
      <summary>
            Creates the ChildWindowConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.CreateChildCompositeConfiguration">
      <summary>
            Creates the ChildCompositeConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.Dispose(System.Boolean)">
      <summary>
            Disposes the group configuration
            </summary>
      <param name="disposing">Disposing</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.FocusChildControl(System.Windows.Forms.Control)">
      <summary>
            Focusses the specified child control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.UnfocusCurrentChildControl">
      <summary>
            Unfocuses the possible focused child control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ClearCurrentFocusedChildControl">
      <summary>
            Clears the focused child control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.PutLastDrawnGraphicsPath(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
            Puts the lastDrawnShape path.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.SetObjectPainter(Qios.DevSuite.Components.QPartPaintLayer,Qios.DevSuite.Components.IQPartObjectPainter)">
      <summary>
            Sets the object to paint for the specified layer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.RectangleToClient(System.Drawing.Rectangle)">
      <summary>
            Converts a rectangle in screen coordinates to client rectangle
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.RectangleToScreen(System.Drawing.Rectangle)">
      <summary>
            Converts a rectangle in client coordinates to screen coordinates
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.PointToClient(System.Drawing.Point)">
      <summary>
            Converts a point in screen coordinates to a client coordinate
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.PointToScreen(System.Drawing.Point)">
      <summary>
            Converts a point in client coordinates to a screen  coordinate
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message,System.Boolean)">
      <summary>
            Handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <param name="force">If true, the QComposite will handle the message even if the message was sent to another toplevel window</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.SelectNextItem(Qios.DevSuite.Components.QCompositeActivationType,System.Boolean,System.Boolean)">
      <summary>
            Selects the next (or previous) item based on the current item that is hot.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.SelectFirstItem(Qios.DevSuite.Components.QCompositeActivationType,System.Boolean)">
      <summary>
            Selects the first (or last) item that can have the hot state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.SelectItem(Qios.DevSuite.Components.QCompositeItemBase,Qios.DevSuite.Components.QCompositeActivationType,System.Boolean)">
      <summary>
            Selects an item.
            </summary>
      <param name="item">The item to select</param>
      <param name="activationType">The activationtype to use.</param>
      <param name="resetStateOfCurrentItem">
            Indicates whether the hotstate of the current selected item must be reset.
            This is variable because a QComposite can be able to have multiple items hot.
            </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ActivateItem(Qios.DevSuite.Components.QCompositeItemBase,Qios.DevSuite.Components.QCompositeItemActivationOptions,Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Activates an QCompositeItemBase
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ExpandItem(Qios.DevSuite.Components.QCompositeItem,Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Shows the composite child container of an item if it has child items.  If the item is already expanded
            and CloseExpandedItemOnClick is on, then it is collapsed again.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.CollapseExpandedItem(Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Collapses the expanded item if there is an expanded item
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.CollapseItem(Qios.DevSuite.Components.QCompositeItem,Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Collapses the specified item if it is expanded.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.ConfigureChildWindow(Qios.DevSuite.Components.QCompositeItem,Qios.DevSuite.Components.QCompositeWindow)">
      <summary>
            Configures the child container before it opens.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.Dispose">
      <summary>
            Disposes the group configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.RetrieveFirstDefinedColor(System.String)">
      <summary>
            Returns the first defined color in the colorScheme with the specified name.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Gets the colorSet for the specified item in the specified state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.PaintComposite(Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the composite and notifies al the registered parts for the PaintComplete stage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnCompositeKeyPress(Qios.DevSuite.Components.QCompositeKeyboardCancelEventArgs)">
      <summary>
            Raises the HandleNavigationKey event. Remark: This event bubbles up to all the QComposites.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnUsedToolTipTextChanged(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the UsedToolTipTextChanged event. Remark: This event bubbles up to all the QComposites.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnSelectedItemChanged(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the SelectedItemChanged event. Remark: This event bubbles up to all the QComposites.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnPaintItem(Qios.DevSuite.Components.QCompositePaintStageEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QComposite.PaintItem" /> event. Remark: This event bubbles up to all the QComposites.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnItemExpanded(Qios.DevSuite.Components.QCompositeExpandedEventArgs)">
      <summary>
            Raises the ItemExpanded event.  Remark: This event bubbles up to all the QComposites.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnItemExpanding(Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs)">
      <summary>
            Raises the ItemExpanding event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnItemCollapsing(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the ItemCollapsing event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnItemCollapsed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the ItemCollapsed event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnItemActivating(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QComposite.ItemActivating" /> event. Remark: This event bubbles up to all the QComposites.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnItemSelected(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QComposite.ItemSelected" /> event. Remark: This event bubbles up to all the QComposites.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QComposite.ItemActivated" /> event. Remark: This event bubbles up to all the QComposites.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnColorsChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QComposite.ColorsChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.OnChange(Qios.DevSuite.Components.QCompositeChangeEventArgs)">
      <summary>
            Raises the Change event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.PutContentClipRegion(System.Drawing.Region)">
      <summary>
            Sets the content clip region.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.IsVisible(Qios.DevSuite.Components.QPartVisibilitySelectionTypes)">
      <summary>
            IQPart implementation. Gets whether the part is visible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.HitTest(System.Int32,System.Int32)">
      <summary>
            IQPart implementation. Returns what location of the part was hit.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.GetObjectPainter(Qios.DevSuite.Components.QPartPaintLayer,System.Type)">
      <summary>
            IQPart implementation. Returns the object of the specified type to paint on the specified layer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.FitsInSelection(Qios.DevSuite.Components.QPartSelectionTypes[])">
      <summary>
            IQPart implementation. Gets the whether the Part fits the selection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Handles a paint stage, returns the used colorset
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.HandleChildObjectChanged(System.Boolean)">
      <summary>
            Handles the change of a child IQPart
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComposite.HandleChildObjectChanged(System.Boolean,System.Drawing.Rectangle)">
      <summary>
            Handles the change of a child IQPart
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.CompositeKeyPress">
      <summary>
            Gets raised when the QComposite is about to handle navigation keys that are pressed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.UsedToolTipTextChanged">
      <summary>
            Gets raised when the UsedToolTip has changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.SelectedItemChanged">
      <summary>
            Gets raised when the UsedToolTip has changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.ItemActivating">
      <summary>
            Gets raised when an QCompositeItemBase is activating. This event can be cancelled.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.ItemActivated">
      <summary>
            Gets raised when an QCompositeItemBase is activated.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.ItemSelected">
      <summary>
            Gets raised when an QCompositeItemBase is selected.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.ItemExpanded">
      <summary>
            Gets raised when the item is expanded
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.ItemExpanding">
      <summary>
            Gets raised when the child container is expanding
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.ItemCollapsing">
      <summary>
            Gets raised when the item is collapsing
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.ItemCollapsed">
      <summary>
            Gets raised when the item is collapsed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.Disposed">
      <summary>
            Gets raised when the QComposite gets disposed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.Change">
      <summary>
            Gets raised when the QComposite has visually changed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.ColorsChanged">
      <summary>
            Gets raised when the colors or the QColorScheme changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QComposite.PaintItem">
      <summary>
            Gets raised when a painting stage of an QCompositeItemBase is complete
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ColorHost">
      <summary>
            Gets or sets the color host that is responsible for providing colors for this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.Cursor">
      <summary>
            Gets or sets the mouse cursor for this QComposite
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ItemState">
      <summary>
            Gets the QItemStates for the QComposite
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.HasHotState">
      <summary>
            Gets whether this composite has a hot state. The default implementation returns false.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.HasPressedState">
      <summary>
            Gets whether this composite has a pressed state. The default implementation returns false.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.IsFloating">
      <summary>
            Gets whether this QComposite is on a floating window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ParentControlIsVisible">
      <summary>
            Gets wether the parent control this QComposite is on is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.Enabled">
      <summary>
            Gets or sets whether this item is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ToolTipText">
      <summary>
            Gets or sets the ToolTipText. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            The ToolTip, see ToolTipConfiguration, must be enabled for this to show.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.UsedToolTipText">
      <summary>
            Gets the used tooltiptext. This depends on which item the mouse pointer is hovering.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.IsDisposed">
      <summary>
            Gets whether this QStatusBarPanel is disposed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.Items">
      <summary>
            Gets the collection of QCompositeItems of this QComposite. This are the items that can be desigend.
            If you want all the items that are on this QComposite, see the <see cref="P:Qios.DevSuite.Components.QComposite.Parts" /> property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.Configuration">
      <summary>
            Contains the Configuration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ChildWindowConfiguration">
      <summary>
            Contains the ChildWindowConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ChildCompositeConfiguration">
      <summary>
            Contains the ChildCompositeConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ChildCompositeColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used for child composites.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ToolTipConfiguration">
      <summary>
            Gets the QToolTipConfiguration of the parent control
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ParentControl">
      <summary>
            Gets the parent control that hosts this QComposite, for instance a QCompositeControl or a QCompositeWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ParentItem">
      <summary>
            Gets the parent QCompositeItemBase that opened this QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ParentComposite">
      <summary>
            Gets a possible parent Composite. This is the QComposite that hosts the <see cref="P:Qios.DevSuite.Components.QComposite.ParentItem" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.SelectedItem">
      <summary>
            Gets or sets the selected QCompositeItemBase. This is the hot item that can be pressed and has a hot state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ExpandedItem">
      <summary>
            Gets the currently expanded composite item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ShowHotkeyWindows">
      <summary>
            Gets or sets whether HotkeyWindows should be shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.LastDrawnGraphicsPath">
      <summary>
            Gets the last drawn graphics path.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.LayoutEngine">
      <summary>
            Gets the LayoutEngine
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.PaintEngine">
      <summary>
            Gets the PaintEngine
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ContentClipRegion">
      <summary>
            Gets the current clip region.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.PartName">
      <summary>
            IQPart implementation. Gets the name.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ContentObject">
      <summary>
            IQPart implementation. Gets the contentObject.
            </summary>
      <remarks>When overridden in a derived class, you should also override <see cref="P:Qios.DevSuite.Components.QComposite.Parts" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.Parts">
      <summary>
            IQPart implementation. Gets the contentObject casted as an QPartsCollection
            </summary>
      <remarks>When overridden in a derived class, you should also override <see cref="P:Qios.DevSuite.Components.QComposite.ContentObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.CalculatedProperties">
      <summary>
            IQPart implementation. Gets the CalculatedProperties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.LayoutOrder">
      <summary>
            IQPart implementation. Gets the LayoutOrder.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.Properties">
      <summary>
            IQPart implementation. Gets the Properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ParentPart">
      <summary>
            IQPart implementation. Gets the parent IQPart.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.ParentCollection">
      <summary>
            IQPart implementation. Gets the parent QPartCollection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.DisplayParent">
      <summary>
            IQPart implementation. Gets the display parent of this QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.LayoutListener">
      <summary>
            IQPart Implementation. Gets or sets a possible listener.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.PaintListener">
      <summary>
            IQPart Implementation. Gets or sets a possible listener.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComposite.IsPerformingLayout">
      <summary>
            Determines if the QComposite is performing layout
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.#ctor(Qios.DevSuite.Components.Ribbon.QRibbonCaption)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.CreateConfiguration">
      <summary>
            Overridden. Creates the configuratoin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.CreateChildCompositeConfiguration">
      <summary>
            Overridden. Creates the ChildCompositeConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.SetApplicationText(System.String,System.Boolean)">
      <summary>
            Sets the application text.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.SetDocumentText(System.String,System.Boolean)">
      <summary>
            Sets the Document text.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.SetMDIParentText(System.String)">
      <summary>
            Sets the text if this was on a maximized MDI Parent. Basically texts on maximized MDI Parents look like:
            "MdiParent - [MDIChild]"
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the required QColorSet for this Composite.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Overridden. Handles the layout stage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Handles the paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.CaptionFont">
      <summary>
            Gets or sets the Font for the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.Configuration">
      <summary>
            New. Casts the configuration as a QRibbonCaptionConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.RibbonCaption">
      <summary>
            Gets the ribbon caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.ApplicationText">
      <summary>
            Gets or sets the text presented in the application area of the caption. This is usually after the dash.
            Set this via the Text property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.DocumentText">
      <summary>
            Gets or sets the text presented in the document area of the caption. This is usually before the dash.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.ApplicationDocumentSeparator">
      <summary>
            Gets the separator text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.Text">
      <summary>
            Gets or sets the text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.CloseButton">
      <summary>
            Gets the close button of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.MinimizeButton">
      <summary>
            Gets the minimize button of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.MaximizeButton">
      <summary>
            Gets the maximize button of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.RestoreButton">
      <summary>
            Gets the restore button of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.IconPart">
      <summary>
            Gets the IconPart ot the QRibbonCaptionComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.ApplicationButtonAreaPart">
      <summary>
            Gets ApplicationButtonAreaPart of the QRibbonCaptionComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.LaunchBarAreaPart">
      <summary>
            Gets LaunchBarAreaPart of the QRibbonCaptionComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.TextAreaPart">
      <summary>
            Gets the TextAreaPart of the QRibbonCaptionComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.ItemAreaPart">
      <summary>
            Gets the ItemAreaPart of the QRibbonCaptionComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionComposite.ButtonAreaPart">
      <summary>
            Gets the TextArea part of the QRibbonCaption.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBarHost">
      <summary>
            The QToolBarHost is used to host one or more <see cref="T:Qios.DevSuite.Components.QToolBar" /> instances or a <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPersistableHost">
      <summary>
            Defines the interface that is implemented by controls that can host IQPersistableObject objects.
            </summary>
      <remarks>
            Because some Controls like QToolBars can be moved and docked by the user,
            you can persist that information to a file or database via the QPersistenceManager.
            This enables the the user to open the Application the same way as they have closed it.
            IQPersistableHosts are Controls that are solid in the application.
            PersistableObjects can refer to those hosts to define where they are located in the application.
            Examples of IQPersistableHosts are <see cref="T:Qios.DevSuite.Components.QToolBarHost" /> and <see cref="T:Qios.DevSuite.Components.QDockBar" />.<br /><br />
            See the overview of <see cref="T:Qios.DevSuite.Components.QPersistenceManager" />
            for details on persistence.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPersistableHost.PersistGuid">
      <summary>
            Contains a unique identifier to identify the PersistableHost with.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.#ctor">
      <summary>
            Constructor. Creates a QToolBarHost.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.CreateAppearanceInstance">
      <summary>
            Overridden. Returns a new instance of the <see cref="T:Qios.DevSuite.Components.QToolBarAppearance" /></summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.RetrieveCustomizeMenu">
      <summary>
            Gets the CustomizeMenu. This can be used as a QContextMenu.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.BeginInit">
      <summary>
            Starts initializing the Host
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.EndInit">
      <summary>
            Ends initializing the Host.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden. Sets the Bounds
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Overridden. Handles the ControlAdded.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Overridden. Handles the ControlRemoved.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.OnVisibleChanged(System.EventArgs)">
      <summary>
            Handles the OnVisibleChanged of the QToolBarHost
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Handles the OnLayout
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHost.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden, draws the background.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.PersistGuid">
      <summary>
            Gets or sets the persistence Guid. This is defined in <see cref="P:Qios.DevSuite.Components.IQPersistableHost.PersistGuid" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.Appearance">
      <summary>
            Overridden. Gets the QToolBarHostAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.ToolBarHostPadding">
      <summary>
            Gets or sets the Padding for the ToolBarHost
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.ToolBarMargin">
      <summary>
            Gets or sets the margin for the ToolBars
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.ToolBarInsertMargin">
      <summary>
            Gets the margin a ToolBar must be located relative to the host before it gets inserted into the host.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.MinimumSize">
      <summary>
            Gets or sets the MinimumSize. This is the Size the Host will have when no ToolBars are docked on it.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.Orientation">
      <summary>
            Gets or sets the Orientation the QToolBars on the Host will have. If Orientation is None
            then the Orientation is based on the DockStyle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.Dock">
      <summary>
            Overridden. Gets or sets the DockStyle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.Initializing">
      <summary>
            Indicates if the QToolBarHost is initializing.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.BackColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarHostBackground1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.BackColor2PropertyName">
      <summary>
            Overridden. Returns the ToolBarHostBackground2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarHost.BorderColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarHostBorder from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBarHostAppearance">
      <summary>
            Defines the Appearance for the QToolBarHost.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarHostAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripNavigationArea">
      <summary>
            Defines the navigation area with navigation buttons (like scroll and close) for the <see cref="T:Qios.DevSuite.Components.QTabStrip" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripNavigationArea.DefaultTotalButtonCount">
      <summary>Contains the default total button count.</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripNavigationArea.CalculateBoundsToControl(System.Drawing.Rectangle)">
      <summary>
            Calculates the specified bounds to a rectangle on the parenting control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripNavigationArea.AddButtonArea(Qios.DevSuite.Components.QButtonArea)">
      <summary>
            Adds a button area to the buttons array
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripNavigationArea.RemoveButtonArea(Qios.DevSuite.Components.QButtonArea)">
      <summary>
            Remove a button area to the buttons array
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripNavigationArea.ContainsButtonArea(Qios.DevSuite.Components.QButtonArea)">
      <summary>
            Determines if the QButtonArea is in the buttons array
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripNavigationArea.CalculatePointOnControl(System.Int32,System.Int32)">
      <summary>
            Calculates the specified x and y on this to a point on the parenting Control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripNavigationArea.CalculateControlPointOnThis(System.Int32,System.Int32)">
      <summary>
            Calculates the specified control X and control Y to a point on this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripNavigationArea.ContainsControlPoint(System.Drawing.Point)">
      <summary>
            Returns whether this area contains the specified controlPoint. the point must be in the control coordinates.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.RequestedButtonCount">
      <summary>
            Gets the default button count;
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabStripNavigationArea.ButtonStateChanging">
      <summary>
            Gets raised when the state of a buttonArea is about to change.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabStripNavigationArea.ButtonStateChanged">
      <summary>
            Gets raised when the state of a buttonArea changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.ScrollLeft">
      <summary>
            Gets the ScrollLeft Button Area
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.ScrollRight">
      <summary>
            Gets the ScrollRight Button Area
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.Close">
      <summary>
            Gets the Close Button Area
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.ButtonAreas">
      <summary>
            Gets the button areas
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.LastDrawnGraphicsPath">
      <summary>
            Gets or sets the LastDrawn GraphicsPath, this is used to determine whether the mouse
            is over this area.
            This should be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.DrawNavigationArea(Qios.DevSuite.Components.QTabStrip,Qios.DevSuite.Components.QTabStripPaintParams,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.VisibleButtonCount">
      <summary>
            Gets the VisibleButtonCount of the NavigationArea
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.ScrollButtonsVisible">
      <summary>
            Gets or sets whether the ScrollButtons are visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.CloseButtonVisible">
      <summary>
            Gets or sets whether the CloseButton is visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.Bounds">
      <summary>
            Gets or sets the bounds of the custom buttons
            This should be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.DrawNavigationArea(Qios.DevSuite.Components.QTabStrip,Qios.DevSuite.Components.QTabStripPaintParams,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.Location">
      <summary>
            Gets or sets the Location of the custom buttons 
            This should be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.DrawNavigationArea(Qios.DevSuite.Components.QTabStrip,Qios.DevSuite.Components.QTabStripPaintParams,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.Size">
      <summary>
            Gets or sets the size of the custom buttons
            This should be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.DrawNavigationArea(Qios.DevSuite.Components.QTabStrip,Qios.DevSuite.Components.QTabStripPaintParams,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationArea.BoundsToControl">
      <summary>
            Gets the bounds of this QTabStripNavigationArea on the parenting control
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripNavigationAreaAppearance">
      <summary>
            Defines the Appearance for the NavigationArea on a QTabStrip on a <see cref="T:Qios.DevSuite.Components.QTabControl" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripNavigationAreaAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripNavigationAreaAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabControlControlsCollection">
      <summary>
            This collection is used by <see cref="T:Qios.DevSuite.Components.QTabControl" /> to contain its Controls instances. It has special behavior for 
            a <see cref="T:Qios.DevSuite.Components.QTabPage" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlControlsCollection.#ctor(Qios.DevSuite.Components.QTabControl)">
      <summary>
            Constructor. Creates a QTabPageCollection for the specified tabControl.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlControlsCollection.Add(System.Windows.Forms.Control)">
      <summary>
            Adds a <see cref="T:Qios.DevSuite.Components.QTabPage" /> to the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlControlsCollection.Insert(System.Int32,System.Windows.Forms.Control)">
      <summary>
            Inserts a control in the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlControlsCollection.AddRange(System.Windows.Forms.Control[])">
      <summary>
            Adds a range of <see cref="T:Qios.DevSuite.Components.QTabPage" /> instances to the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlControlsCollection.Remove(System.Windows.Forms.Control)">
      <summary>
            Removes a <see cref="T:Qios.DevSuite.Components.QTabPage" /> instance from the collection.
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlControlsCollection.Clear">
      <summary>
            Clears the complete collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlControlsCollection.CopyTo(System.Windows.Forms.Control[],System.Int32)">
      <summary>
            Copies this collection to specified collection
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlControlsCollection.TabPagesCount">
      <summary>
            Gets the amount of tabpages in this collection
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlControlsCollection.AccessibleTabPagesCount">
      <summary>
            Gets the amount of tabPages that are accessible. This are tabpages that are Enabled and have their TabButton visible.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QStatusBar">
      <summary>
            The QStatusBar can be used to give the user information about the status of the application.
            It can be completely configured with colors and styles. It implements a <see cref="T:Qios.DevSuite.Components.QColorScheme" /> and
            a <see cref="T:Qios.DevSuite.Components.QAppearance" /> property.
            <br /><br />
            Use the <see cref="P:Qios.DevSuite.Components.QStatusBar.Panels" /> property to define the contents of the QStatusBar. You can use the <see cref="T:Qios.DevSuite.Components.QStatusBarPanelControlContainer" />
            class to add custom controls to the QStatusBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.#ctor">
      <summary>
            The default constructor. It creates a new QStatusBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.CreateToolTipConfigurationInstance">
      <summary>
            Overridden. Creates a <see cref="T:Qios.DevSuite.Components.QStatusBarToolTipConfiguration" />.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.CreateAppearanceInstance">
      <summary>
            Overridden creates a new <see cref="T:Qios.DevSuite.Components.QAppearance" />.
            </summary>
      <returns>a new <see cref="T:Qios.DevSuite.Components.QAppearance" /></returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.ShouldSerializePanelAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QStatusBar.PanelAppearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.ResetPanelAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QStatusBar.PanelAppearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseMove event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseDown event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseUp event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Handles the OnPaint event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Handles the OnLayout event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the QStatusBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.OnClick(System.EventArgs)">
      <summary>
            Overridden. Handles the OnClick event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.OnDoubleClick(System.EventArgs)">
      <summary>
            Overridden. Handles the OnDoubleClick event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.OnPanelClick(Qios.DevSuite.Components.QStatusBarPanelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QStatusBar.PanelClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBar.OnPanelDoubleClick(Qios.DevSuite.Components.QStatusBarPanelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QStatusBar.PanelDoubleClick" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QStatusBar.PanelClick">
      <summary>
            Gets raised when the user clicks on a panel.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QStatusBar.PanelDoubleClick">
      <summary>
            Gets raised when the user double clicks on a panel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.CreateParams">
      <summary>
            Overridden. Gets the CreateParams to use during creation.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.Text">
      <summary>
            Overridden. Gets or sets the Text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.ForeColor">
      <summary>
            Overridden. Gets or sets the ForeColor of the QStatusBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.ToolTipConfiguration">
      <summary>
            Overridden. Gets or sets the ToolTipConfiguration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.SizingGrip">
      <summary>
            Gets or sets whether this QStatusBar should show a SizingGrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.ShowPanels">
      <summary>
            Gets or sets whether the Panels should be visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.SizingGripStyle">
      <summary>
            Gets or sets the type of SizingGrip to draw.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.MinimumHeight">
      <summary>
            Gets or sets the minimum height of the QStatusBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.PanelMarginLeft">
      <summary>
            Gets or sets the left margin between the panels and the QStatusBar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.PanelMarginTop">
      <summary>
            Gets or sets the top margin between the panels and the QStatusBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.PanelMarginRight">
      <summary>
            Gets or sets the right margin between the panels and the QStatusBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.PanelMarginBottom">
      <summary>
            Gets or sets the right margin between the panels and the QStatusBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.TextVerticalMargin">
      <summary>
            Gets or sets the margin between the text and the bottom and the top of the StatusBar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.PerformingLayout">
      <summary>
            Gets whether this QStatusBar is performing layout.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.Dock">
      <summary>
            Overridden. Gets or sets the DockStyle of the QStatusBar. This always returns <b>Bottom</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.PanelAppearance">
      <summary>
            Gets the or sets the QAppearance for the panels. This can be overriden by every <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.Panels">
      <summary>
            Gets the Panels of the QStatusBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.BackColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> PropertyName of the first background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.BackColor2PropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> PropertyName of the second background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBar.BorderColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> PropertyName of the border color.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QStatusBarPanelEventArgs">
      <summary>
            Defines the EventArgs for <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" /> events. The <see cref="P:Qios.DevSuite.Components.QStatusBarPanelEventArgs.Panel" /> property contains
            the <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelEventArgs.#ctor(Qios.DevSuite.Components.QStatusBarPanel)">
      <summary>
            Default Constructor. Creates a <see cref="T:Qios.DevSuite.Components.QStatusBarPanelEventArgs" /> instance with the specified panel.
            </summary>
      <param name="panel">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanelEventArgs.Panel">
      <summary>
            The QStatusBarPanel that is used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QStatusBarToolTipConfiguration">
      <summary>
            Defines the StatusBarToolTipConfiguration for the QStatusBar
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QEnabledToolTipConfiguration">
      <summary>
            Defines a QToolTipConfiguration that is enabled by default
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolTipConfiguration">
      <summary>
            Defines configuration properties for ToolTips.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QBalloonConfiguration">
      <summary>
            Defines configuration properties for QBalloons.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropBalloonWindowClassReference">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropInheritWindowsSettings">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropAutoPopDelay">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropInitialDelay">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropReshowDelay">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropShowAlways">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropFlipWindow">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropShowOnFocus">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropShowOnHover">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropAutoHide">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropAnimateWindow">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropAnimateTime">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropColorSchemeSource">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropFontSource">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropEnabled">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropBalloonWindowConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.PropBalloonWindowAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonConfiguration.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonConfiguration.CreateBalloonWindowConfigurationInstance">
      <summary>
            Can be used by subclasses to implement another BalloonWindowConfiguration
            </summary>
      <returns>A new QBalloonWindowConfiguration Instance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonConfiguration.CreateBalloonWindowAppearanceInstance">
      <summary>
            Can be used by subclasses to implement another BalloonWindowAppearance
            </summary>
      <returns>A new QBalloonWindowAppearance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonConfiguration.ConfigureToolTip(System.Windows.Forms.ToolTip)">
      <summary>
            Configures a toolTip with the current settings.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonConfiguration.OnBalloonWindowShapeChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonConfiguration.BalloonWindowShapeChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonConfiguration.OnBalloonWindowConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonConfiguration.BalloonWindowConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonConfiguration.OnBalloonWindowAppearanceChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonConfiguration.BalloonWindowAppearanceChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of this configuration changes.		
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonConfiguration.BalloonWindowAppearanceChanged">
      <summary>
            Gets raised when the BalloonWindowAppearance changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonConfiguration.BalloonWindowConfigurationChanged">
      <summary>
            Gets raised when the BalloonWindowConfiguration changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonConfiguration.BalloonWindowShapeChanged">
      <summary>
            Gets raised when a configuration determining the shape of the window changes
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.FontSource">
      <summary>
            Gets or sets the source of the Font properties. The used font properties of the QBalloonWindow can be from QBalloon or QBalloonWindow itself.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.ColorSchemeSource">
      <summary>
            Gets or sets the source of the ColorScheme. The used ColorScheme of the QBalloonWindow can be from QBalloon or QBalloonWindow itself.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.BalloonWindowClassReference">
      <summary>
            Gets or sets the class reference of the QBalloonWindow.
            To configure the QBalloon to show a QBalloonWindow you can set the BalloonWindowClassReference,
            BalloonWindow or the BalloonWindowShape Property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.BalloonWindowConfiguration">
      <summary>
            Gets the QBalloonWindowConfiguration for the QBalloon. This QBalloonWindowConfiguration will be the parent configuration for the QBalloonWindowConfiguration of the QBalloonWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.BalloonWindowAppearance">
      <summary>
            Gets the QBalloonWindowAppearance for the QBalloon. This QBalloonWindowAppearance will be the parent configuration for the QBalloonWindowAppearance of the QBalloonWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.InheritWindowsSettings">
      <summary>
            Gets or sets whether the QBalloon should inherit WindowsSettings like animating the balloon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.FlipWindow">
      <summary>
            Gets or sets if the QBalloonWindow is flipped so that the topleft corner of the shape
            always points to the cursor when it doesnt fit on the screen.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.AnimateWindow">
      <summary>
            Gets or sets whether the window fades in and out
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.AnimateTime">
      <summary>
            Gets or sets the time of the window animation
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.AutoHide">
      <summary>
            Gets or sets if the QBalloonWindow automatically hides or only waits until the AutoPopupDelay has passed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.ShowOnFocus">
      <summary>
            Gets or sets if the QBalloonWindow will be shown when the target control gets the focus
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.ShowOnHover">
      <summary>
            Gets or sets if the QBalloonWindow will be shown when user hovers over the target control 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.Enabled">
      <summary>
            Gets or sets whether the ToolTip is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.AutoPopDelay">
      <summary>
            Gets or sets the period of time (in milliseconds) that the QBalloonWindow remains visible when the mouse pointer is
            stationary within a control. The default value is 5000. Set the AutoPopDelay to a negative number to show the 
            QBalloonWindow indefinately.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.InitialDelay">
      <summary>
            Gets or sets the period of time (in milliseconds) that the mouse pointer must 
            remain stationary within a control before the ToolTip window is displayed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.ReshowDelay">
      <summary>
            Gets or sets the length of time that must transpire before
            subsequent ToolTip windows appear as the mouse pointer moves from one control to another.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonConfiguration.ShowAlways">
      <summary>
            Gets or sets a value indicating whether a ToolTip window is displayed even when its parent control is not active.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolTipConfiguration.#ctor">
      <summary>
            Constructor, creates a new QToolTipConfiguration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QEnabledToolTipConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QStatusBarPanelEventHandler">
      <summary>
            The delegate for the <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" /> events.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeItem">
      <summary>
            Defines one shape item in a QShape
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.#ctor(System.Drawing.PointF,System.Windows.Forms.AnchorStyles,System.Boolean)">
      <summary>
            Creates a QShapeItem of the type <see cref="F:Qios.DevSuite.Components.QShapeItemType.Point" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.#ctor(System.Single,System.Single,System.Windows.Forms.AnchorStyles,System.Boolean)">
      <summary>
            Creates a QShapeItem of the type <see cref="F:Qios.DevSuite.Components.QShapeItemType.Point" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Windows.Forms.AnchorStyles,System.Boolean)">
      <summary>
            Creates a QShapeItem of the type <see cref="F:Qios.DevSuite.Components.QShapeItemType.Bezier" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Windows.Forms.AnchorStyles,System.Boolean)">
      <summary>
            Creates a QShapeItem of the type <see cref="F:Qios.DevSuite.Components.QShapeItemType.Bezier" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.#ctor(Qios.DevSuite.Components.QShapeItemType,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Windows.Forms.AnchorStyles,System.Boolean)">
      <summary>
            Creates a new QShapeItem with the specified parameters.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.#ctor(Qios.DevSuite.Components.QShapeItemType,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Windows.Forms.AnchorStyles,System.Boolean)">
      <summary>
            Creates a new QShapeItem with the specified paremeters
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.ShouldSerializeLocation">
      <summary>
            Gets whether the specified property must be serialized
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.ResetLocation">
      <summary>
            Resets the specified property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.ShouldSerializeBezierControl1">
      <summary>
            Gets whether the specified property must be serialized
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.ResetBezierControl1">
      <summary>
            Resets the specified property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.ShouldSerializeBezierControl2">
      <summary>
            Gets whether the specified property must be serialized
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.ResetBezierControl2">
      <summary>
            Resets the specified property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.LineCrossesRectangle(System.Drawing.RectangleF)">
      <summary>
            Returns whether the line of this item crosses the specified rectangle. If it does
            intersectionPoint contains the cross point.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.LineCrossesPoint(System.Drawing.PointF,System.Single)">
      <summary>
            Returns whether the line of this item crosses the point within the specified margin. If it does
            intersectionPoint contains the cross point.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.LineCrossesPoint(System.Drawing.PointF,System.Drawing.Rectangle,System.Single)">
      <summary>
            Returns whether the line of this item crosses the point within the specified margin. If it does
            intersectionPoint contains the cross point.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.GetItemPartsInRectangle(System.Drawing.RectangleF,Qios.DevSuite.Components.QShapeItemParts,System.Boolean)">
      <summary>
            Gets the parts that lay in the specified rectangle.
            This methods sets the <see cref="P:Qios.DevSuite.Components.QShapeItem.LastCalculatedLineIntersection" /> when the hit part is a line.
            </summary>
      <param name="rectangle">Contains the rectangle where the parts must ly in</param>
      <param name="partsToCheck">Contains the parts to check</param>
      <param name="returnOnHit">Contains whether this method must return the part that first hits or selects them all</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.GetItemPartsOnPoint(System.Drawing.PointF,System.Drawing.Rectangle,System.Single,Qios.DevSuite.Components.QShapeItemParts,System.Boolean)">
      <summary>
            Gets the parts that lay on the specified point with the specified margin
            This methods sets the <see cref="P:Qios.DevSuite.Components.QShapeItem.LastCalculatedLineIntersection" /> when the hit part is a line.
            </summary>
      <remarks>
            The difference between this method and <see cref="M:Qios.DevSuite.Components.QShapeItem.GetItemPartsInRectangle(System.Drawing.RectangleF,Qios.DevSuite.Components.QShapeItemParts,System.Boolean)" /> is that the
            intersection when the hit part is a Line is threaded different. In this method the intersection
            is closest to point instead to a border of the rectangle.
            </remarks>
      <param name="point">Contains the point to check</param>
      <param name="destination">Destination bounds</param>
      <param name="margin">Contains the margin</param>
      <param name="partsToCheck">Contains the parts to check</param>
      <param name="returnOnHit">Contains whether this method must return the part that first hits or selects them all</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.CacheCurrentLocationProperties">
      <summary>
            Caches the current location properties for when changes are going to be made (like moving)
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.RestorePropertiesFromCache">
      <summary>
            Restores the properties from the cache.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.MoveSelectedPartsRelativeToCache(System.Drawing.PointF)">
      <summary>
            Moves the selected parts relative from the cached position.  Be sure that you call
            <see cref="M:Qios.DevSuite.Components.QShapeItem.CacheCurrentLocationProperties" /> before calling this method.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.RoundPoint(System.Single,System.Single)">
      <summary>
            Rounds the specified x and y with the Precision of the parentShape. If there is no
            parent Shape, it returns the x and y as a new point.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.MovePartsRelativeToCache(System.Drawing.PointF,Qios.DevSuite.Components.QShapeItemParts)">
      <summary>
            Moves the parts relative to the cached item. Be sure that you call
            <see cref="M:Qios.DevSuite.Components.QShapeItem.CacheCurrentLocationProperties" /> before calling this method
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.CopyTo(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Copies the properties of this QShapeItem to the specified item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItem.Clone">
      <summary>
            Clones this item
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.ParentShape">
      <summary>
            Gets the parent shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.ItemType">
      <summary>
            Gets or sets the Type of the shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.Anchor">
      <summary>
            Gets or sets the Anchor. When the shape is resized this item will be on the same location relative to the Anchor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.Location">
      <summary>
            Gets or sets the Location of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.X">
      <summary>
            Gets or sets the X value of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.Y">
      <summary>
            Gets or sets the Y value of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.BezierControl1">
      <summary>
            Gets or sets the first BezierControlPoint when the ItemType is Bezier
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.BezierControl1X">
      <summary>
            Gets or sets the X of the first bezier control point
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.BezierControl1Y">
      <summary>
            Gets or sets the Y of the first bezier control point
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.BezierControl2">
      <summary>
            Gets or sets the second BezierControlPoint when the ItemType is Bezier
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.BezierControl2X">
      <summary>
            Gets or sets the X of the second bezier control point
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.BezierControl2Y">
      <summary>
            Gets or sets the Y of the second bezier control point
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.LastCalculatedLineIntersection">
      <summary>
            Gets or sets the Last calculated intersection. This is set during the
            <see cref="M:Qios.DevSuite.Components.QShapeItem.GetItemPartsInRectangle(System.Drawing.RectangleF,Qios.DevSuite.Components.QShapeItemParts,System.Boolean)" /> method when the part that hits is a line.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.LineVisible">
      <summary>
            Gets or sets whether the Line is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItem.SelectionParts">
      <summary>
            Gets or sets the parts of the QShapeItem that are selected. Mostyl
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeItemType">
      <summary>
            Defines the type of <see cref="T:Qios.DevSuite.Components.QShapeItem" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeItemType.Point">
      <summary>
            The item is a point
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeItemType.Bezier">
      <summary>
            The item is a bezier.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeItemParts">
      <summary>
            When QShapeItems get selected, this enumeration indicates which part(s) of the 
            QShapeItem is selected
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeItemParts.None">
      <summary>
            No parts are selected
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeItemParts.Location">
      <summary>
            The location is selected
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeItemParts.ControlPoint1">
      <summary>
            The first ControlPoint is selected (when it is a bezier)
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeItemParts.ControlPoint2">
      <summary>
            The second ControlPoint is selected (when it is a bezier)
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeItemParts.Line">
      <summary>
            The line is selected
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeItemParts.AllPoints">
      <summary>
            Contains a constant for all point parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeItemParts.All">
      <summary>
            Constant for all the parts.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollBar">
      <summary>
            ScrollBar control with the possibility to change behaviour and visual style.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.ShouldSerializeConfiguration">
      <summary>
            Gets whether the Configuration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.ResetConfiguration">
      <summary>
            Resets the Configuration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.StopScrolling">
      <summary>
            Stops the scroll animation
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.ScrollHorizontal(System.Int32,Qios.DevSuite.Components.QScrollablePartMethod,System.Boolean,System.Boolean)">
      <summary>
            Scrolls horizontally
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.ScrollVertical(System.Int32,Qios.DevSuite.Components.QScrollablePartMethod,System.Boolean,System.Boolean)">
      <summary>
            Scrolls vertically
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.CreateBalloon">
      <summary>
            Creates the balloon used for tooltips
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.CreateConfiguration">
      <summary>
            Creates the Configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.CreateAppearanceInstance">
      <summary>
            Creates the Appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.OnScroll(Qios.DevSuite.Components.QScrollEventArgs)">
      <summary>
            Raises the Scroll event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.OnDockChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the DockChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Raises the Layout event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the QScrollBar
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the background of the QScrollBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseMove event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseDown event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseUp event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollBar.OnMouseLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the MouseLeave event.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.Configuration">
      <summary>
            Contains the Configuration for the QScrollBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.Value">
      <summary>
            Gets or sets a numeric value that represents the current position of the scroll box on the scroll bar control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.LargeChange">
      <summary>
            Gets or sets a value to be added to or substracted from the Value property when the scroll box is moved a large distance
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.SmallChange">
      <summary>
            Gets or sets a value to be added to or substracted from the Value property when the scroll box is moved a small distance
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.Minimum">
      <summary>
            Gets or sets the lower limit of values of the scrollable range
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.Maximum">
      <summary>
            Gets or sets the upper limit of values of the scrollable range
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.PaintTransparentBackground">
      <summary>
            Gets or sets whether a transparent background must be painted. When this is false the background color of the parent is painted on this Control.
            This can increase performance. Set this to false when the Control is situated on a Parent with a solid background or when the control has a rectangular filled out shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.Appearance">
      <summary>
            Gets the QAppearance for the QScrollBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.BackColorPropertyName">
      <summary>
            Should return the PropertyName of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the first BackColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.BackColor2PropertyName">
      <summary>
            Should return the PropertyName of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the second BackColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollBar.BorderColorPropertyName">
      <summary>
            Should return the PropertyName of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the BorderColor.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QScrollBar.Scroll">
      <summary>
            Gets raised when the QScrollBar value changes
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QProgressBar">
      <summary>
            The QProgressBar is capable of showing progress in horizontal and vertical direction.
            It can do this in different colors and styles. It contains a <see cref="T:Qios.DevSuite.Components.QColorScheme" /> and a <see cref="T:Qios.DevSuite.Components.QAppearance" /> to define the
            colors and layout of the QProgressBar. It can show progress in several blocks or as one block. It is possible to move from the minimum value
            to the maximum value and the other way around.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QProgressBar.#ctor">
      <summary>
            Default constructor. Creates a QProgressBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QProgressBar.CreateAppearanceInstance">
      <summary>
            Overridden. Creates a new <see cref="T:Qios.DevSuite.Components.QAppearance" />.
            </summary>
      <returns>a new QAppearance instance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QProgressBar.CreateBlockAppearanceInstance">
      <summary>
            Overridden. Creates a new <see cref="T:Qios.DevSuite.Components.QAppearance" />.
            </summary>
      <returns>a new QAppearance instance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QProgressBar.Step">
      <summary>
            Increases the Value with StepSize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QProgressBar.ShouldSerializeBlockAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QProgressBar.BlockAppearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QProgressBar.ResetBlockAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QProgressBar.BlockAppearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QProgressBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            The OnPaint event handler. This draws the QProgressBar.
            </summary>
      <param name="e">The PaintEventArgs</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.Text">
      <summary>
            Overridden. Hides the Text property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.FullBlocks">
      <summary>
            Gets or sets whether only full blocks are drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.ColorStyle">
      <summary>
            Gets or sets the ColorStyle of the <see cref="T:Qios.DevSuite.Components.QProgressBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.BottomValue">
      <summary>
            Gets or sets the BottomValue. The bottom value is used to indicate the start of the progress range.
            The range from BottomValue till Value will be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.Value">
      <summary>
            Gets or sets the Value. The range from BottomValue till Value will be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.MinValue">
      <summary>
            Gets or sets the minimum value.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.MaxValue">
      <summary>
            Gets or sets the maximum value.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.StepSize">
      <summary>
            Gets or sets the size of one step.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.Direction">
      <summary>
            Gets or sets the direction of the bar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.BlockSize">
      <summary>
            Gets or sets the size of the blocks that are painted.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.BlockMargin">
      <summary>
            Gets or sets the margin between the blocks. When this is set to 0, just one block is drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.Spacing">
      <summary>
            Gets or sets the spacing between the blocks and the border of the QProgressBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.DisplayValue">
      <summary>
            Gets or sets the displayed value as a float. The value is automatically calculated based on the DisplayValueMin and DisplayValueMax
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.DisplayValueMin">
      <summary>
            Gets or sets the minimum displayed value. This value indicates what the minimum value is presented in the string.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.DisplayValueMax">
      <summary>
            Gets or sets the maximum displayed value. This value indicates what the minimum value is presented in the string.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.DisplayValueAsString">
      <summary>
            Gets or sets whether the value must be displayed as a string inside the progress bar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.DisplayValueFormat">
      <summary>
            Gets or sets the format to display the value as when it is displayed as a string. The format must be structured
            so it can be used in String.Format. (so like "{0} Volt")
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.BackColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of the first background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.BackColor2PropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of the second background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.BorderColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> propertyName of the border color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProgressBar.BlockAppearance">
      <summary>
            Gets the QAppearance for the blocks of the QProgressBar
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QProgressBarDirection">
      <summary>
            This enumeration is used with the <see cref="T:Qios.DevSuite.Components.QProgressBar" />. It indicates in which direction
            the QProgressBar should go to its maximum value.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QProgressBarDirection.Horizontal">
      <summary>
            The <see cref="T:Qios.DevSuite.Components.QProgressBar" /> goes from left to right.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QProgressBarDirection.Vertical">
      <summary>
            The <see cref="T:Qios.DevSuite.Components.QProgressBar" /> goes from bottom to top.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QProgressBarBlockAppearance">
      <summary>
            Defines the Appearance for the blocks of the QProgressBar <see cref="T:Qios.DevSuite.Components.QTabPage" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QProgressBarBlockAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QBalloonWindowPropertySource">
      <summary>
            Provides a choice where to retrieve properties like Font or ColorScheme
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowPropertySource.QBalloon">
      <summary>
            The used property value comes from QBalloon
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBalloonWindowPropertySource.QBalloonWindow">
      <summary>
            The used property value comes from QBalloonWindow
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMetallicAppearanceFiller">
      <summary>
            Defines the appearance filler for metalic.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppearanceFiller">
      <summary>
            Defines the default appearance Filler.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceFiller.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceFiller.GetBoundsToUseForBrushes(Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Rectangle)">
      <summary>
            Gets the rectangle to use for brushes etc.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceFiller.FillRectangleBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the background (usually filling the bounds) with the specified appearance properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceFiller.FillRectangleForeground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the foreground (usually drawing the borders) with the specified appearance properties
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceFiller.FillPathBackground(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the background (usually filling the path) with the specified appearance properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceFiller.FillPathForeground(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the foreground (usually drawing the borders) with the specified appearance properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceFiller.Fillers">
      <summary>
            Gets the available default fillers
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMetallicAppearanceFiller.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMetallicAppearanceFiller.FillRectangleBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the background (usually filling the bounds) with the specified appearance properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMetallicAppearanceFiller.FillRectangleForeground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the foreground (usually drawing the borders) with the specified appearance properties
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMetallicAppearanceFiller.FillPathBackground(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the background (usually filling the path) with the specified appearance properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMetallicAppearanceFiller.FillPathForeground(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the foreground (usually drawing the borders) with the specified appearance properties
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QControlPaint">
      <summary>
            Contains static helper methods to draw elements of controls and convert images. When images are converted
            they are added to the <see cref="T:Qios.DevSuite.Components.QImageCache" /> for performance-upgrade. When the method is called
            again with the same parameters the image from the cache is returned.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.ConvertIconToBitmap(System.Drawing.Icon)">
      <summary>
            Converts the Icon to a bitmap and preserves the Alpha channel.
            </summary>
      <remarks>
            When an Icon contains translucent pixels (with alpha channel) this information is ignored
            with the default Icon.ToBitmap() method. This results that the translucent pixels are 100% visible.
            This method converts the icon to a Bitmap and keeps the alpha information.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>
            Draws the Icon while preserving Alpha information.
            </summary>
      <remarks>
            When an Icon contains translucent pixels (with alpha channel) this information is ignored
            with the default graphics.DrawIcon on Windows 2000 and on Windows XP on a layered window. This results that the translucent pixels are 100% visible.
            This method converts the icon to a Bitmap (or gets it from the cache) and keeps the alpha information.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
            Draws the Icon while preserving Alpha information.
            </summary>
      <remarks>
            When an Icon contains translucent pixels (with alpha channel) this information is ignored
            with the default graphics.DrawIcon on Windows 2000 and on Windows XP on a layered window. This results that the translucent pixels are 100% visible.
            This method converts the icon to a Bitmap (or gets it from the cache) and keeps the alpha information.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawIcon(System.Drawing.Graphics,System.Drawing.Icon,System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle)">
      <summary>
            Draws an Icon with the colors replaced with replaceColorWith. When replaceColor is empty, no colors are replaced.
            </summary>
      <param name="graphics">the graphics to draw on.</param>
      <param name="icon">The Icon to draw.</param>
      <param name="replaceColor">Contains a color to replace. There is no color replaced when this is empty</param>
      <param name="replaceColorWith">Contains the color to replace the replaceColor with.</param>
      <param name="rectangle">The Rectangle to draw the icon into.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawIconDisabled(System.Drawing.Graphics,System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>
            Draws an Icon disabled on graphics in the requested size.
            </summary>
      <param name="graphics">The graphics to draw on</param>
      <param name="icon">The icon to draw</param>
      <param name="rectangle">The rectangle to draw the icon on. The size of the rectangle determines which icon is drawn</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Drawing.Rectangle)">
      <summary>
            Draws an image with the colors replaced with replaceColorWith. When replaceColor is empty, no colors are replaced.
            </summary>
      <param name="graphics">The graphics to draw on.</param>
      <param name="image">The image to draw.</param>
      <param name="replaceColor">Contains a color to replace. There is no color replaced when this is empty.</param>
      <param name="replaceColorWith">Contains the color to replace the replaceColor with.</param>
      <param name="rectangle">the Rectangle to draw the image into</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>
            Draws a disabled image on graphics in the specified rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawImage(System.Drawing.Image,Qios.DevSuite.Components.QImageAlign,System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>
            Draws an Image on graphics in the specified Rectangle with the specified alignment.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="imageAlign">The image alignment.</param>
      <param name="rectangle">The rectangle to draw in.</param>
      <param name="graphics">The graphics to draw on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawImage(System.Drawing.Image,Qios.DevSuite.Components.QImageAlign,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Graphics)">
      <summary>
            Draws an Image on graphics in the specified Rectangle with the specified alignment and size.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="imageAlign">The image alignment.</param>
      <param name="rectangle">The rectangle to draw in.</param>
      <param name="size">Contains the requested size of the image.</param>
      <param name="graphics">The graphics to draw on.</param>
      <returns>The bound where the image actually was drawn</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawImage(System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,Qios.DevSuite.Components.QImageAlign,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Graphics)">
      <summary>
            Draws an Image on graphics in the specified Rectangle with the specified alignment and size.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="replaceColor">Contains a color to replace. There is no color replaced when this is empty</param>
      <param name="replaceColorWith">Contains the color to replace the replaceColor with.</param>
      <param name="imageAlign">The image alignment.</param>
      <param name="rectangle">The rectangle to draw in.</param>
      <param name="size">Contains the requested size of the image.</param>
      <param name="graphics">The graphics to draw on.</param>
      <returns>The bound where the image actually was drawn</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawImage(System.Drawing.Image,Qios.DevSuite.Components.QImageAlign,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Graphics,System.Drawing.Imaging.ImageAttributes)">
      <summary>
            Draws an Image on graphics in the specified Rectangle with the specified alignment and size.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="imageAlign">The image alignment.</param>
      <param name="rectangle">The rectangle to draw in.</param>
      <param name="size">Contains the requested size of the image.</param>
      <param name="graphics">The graphics to draw on.</param>
      <param name="attributes"> Draws the image with additional attributes</param>
      <returns>The bounds of the image where it was actually drawn</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawImage(System.Drawing.Image,Qios.DevSuite.Components.QImageAlign,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Graphics,System.Drawing.Imaging.ImageAttributes,System.Boolean)">
      <summary>
            Draws an Image on graphics in the specified Rectangle with the specified alignment and size.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="imageAlign">The image alignment.</param>
      <param name="rectangle">The rectangle to draw in.</param>
      <param name="size">Contains the requested size of the image.</param>
      <param name="graphics">The graphics to draw on.</param>
      <param name="attributes"> Draws the image with additional attributes</param>
      <param name="setClippingRegion">Determines if the clipping region may be set</param>
      <returns>The bounds of the image where it was actually drawn</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawImage(System.Drawing.Image,Qios.DevSuite.Components.QImageAlign,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.Graphics,System.Drawing.Imaging.ImageAttributes,System.Boolean)">
      <summary>
            Draws an Image on graphics in the specified Rectangle with the specified alignment and size.
            </summary>
      <param name="image">The image to draw.</param>
      <param name="imageAlign">The image alignment.</param>
      <param name="relativeOffset">Contains a relative offset to add to the calculated position of the image.</param>
      <param name="rectangle">The rectangle to draw in.</param>
      <param name="size">Contains the requested size of the image.</param>
      <param name="graphics">The graphics to draw on.</param>
      <param name="attributes"> Draws the image with additional attributes</param>
      <param name="setClippingRegion">Determines if the clipping region may be set</param>
      <returns>The bounds of the image where it was actually drawn</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.ContainsTransparentAreas(System.Drawing.Color,System.Drawing.Color,Qios.DevSuite.Components.QAppearanceBase)">
      <summary>
            Returns whether when a control is filled with these colors and appearance it would contain any
            transparent areas. This must be known to determine if the default background should be drawn.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.IsSolid(System.Drawing.Color,System.Drawing.Color,Qios.DevSuite.Components.QAppearanceBase)">
      <summary>
            Returns whether when a control is filled with these colors and appearance the drawn color
            is a solid color (this means 1 color, not whether it is transparent). This can be usefull to increase performance.
            </summary>
      <returns>True when a solid color is painted, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawSmallCaptionText(System.IntPtr,System.String,System.Boolean,System.Drawing.RectangleF,System.Drawing.Graphics)">
      <summary>
            Draws a caption for a small toolwindow.
            </summary>
      <param name="windowsXPTheme">A possible WindowsXPTheme, can be null.</param>
      <param name="caption">The Text to draw</param>
      <param name="active">Indicates if the caption is active</param>
      <param name="area">The Area to draw in.</param>
      <param name="graphics">The Graphics to draw on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawCaption(System.Drawing.Rectangle,System.Drawing.Graphics,System.Boolean)">
      <summary>
            Draws a gradient caption on area in the right SystemColors.
            </summary>
      <param name="area">The Area to draw.</param>
      <param name="graphics">The Graphics to draw on.</param>
      <param name="active">Indicates if the caption should be drawn active.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DesaturateColor(System.Drawing.Color)">
      <summary>
            Desaturates a color
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.AdjustColorBrightness(System.Drawing.Color,System.Int32)">
      <summary>
            Multiplies color with percentage and returns the new color.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.AddValueToColor(System.Drawing.Color,System.Int32)">
      <summary>
            Adds a value to color.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.ReplaceColor(System.Drawing.Bitmap,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Replaces every instance of replaceColor in image with replaceColorWith
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.CreateColorizedImage(System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Creates a ColorizedImage from the GrayScaledImage. This method converts an image so that
            the black parts are fully colorized and the white parts remain white. Furthermore it can replace
            replaceColor with replaceColorWith at the same time.
            </summary>
      <param name="grayScaledImage">Image to create the ColorizedImageFrom.</param>
      <param name="colorizeColor">Color to use to colorize the Image.</param>
      <param name="replaceColor">Color to replace. Use Color.Empty to don't use the replace method.</param>
      <param name="replaceColorWith">Color to replace replaceColor with.</param>
      <returns>a new Colorized image.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.AddShadeToImage(System.Drawing.Bitmap,System.Drawing.Color,System.Int32,System.Int32)">
      <summary>
            Adds a shade to an Image.
            </summary>
      <param name="bitmap">The bitmap to add the shade to.</param>
      <param name="shadeColor">The color of the shade.</param>
      <param name="offsetX">The X coordinate of the shade offset.</param>
      <param name="offsetY">The Y coordinate of the shade offset.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.RotateFlipImage(System.Drawing.Image,System.Windows.Forms.DockStyle)">
      <summary>
            Returns a rotated version of the specified image. This does the same as Image.RotateFlip. Next
            to that it searches and inserts it into <see cref="T:Qios.DevSuite.Components.QImageCache" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.RotateFlipImage(System.Drawing.Image,System.Drawing.RotateFlipType)">
      <summary>
            Returns a rotated version of the specified image. This does the same as Image.RotateFlip. Next
            to that it searches and inserts it into <see cref="T:Qios.DevSuite.Components.QImageCache" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.GetBiggestFont(System.Drawing.Font,System.Drawing.Font,System.Drawing.Graphics)">
      <summary>
            Gets the biggest font out of the two fonts.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.MeasureString(System.String,System.Drawing.Font,System.Boolean,System.Drawing.StringFormat,System.Drawing.Graphics)">
      <summary>
            Measures a string with the specified parameters. The intended usage is to call this
            without DirectionVertical specified in the format, for when you draw a string with
            rotating the graphics. When horizontal is false the width and height are inverted.
            </summary>
      <param name="text">The text to measure</param>
      <param name="font">The font to use while measuring</param>
      <param name="horizontal">Indicates if the width and height must be inverted. When true they are not inverted</param>
      <param name="format">The format to use, can be null</param>
      <param name="graphics">The graphics to measure on</param>
      <returns>The calculated size</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.MeasureNativeCharacterRanges(System.String,System.Drawing.Font,System.Int32,System.Drawing.Graphics,System.Int32@,System.Int32[]@)">
      <summary>
            Measures native character ranges.
            </summary>
      <param name="text">the text to measure</param>
      <param name="font">The font to use.</param>
      <param name="maximumWidth">the maximum width the text may have.</param>
      <param name="graphics">The graphics to calculate on.</param>
      <param name="maximumCharactersThatFit">Out, contains the amount of characters that will fit.</param>
      <param name="stringWidths">Out, an array of the individual widths of the string per character.</param>
      <returns>The bounding size of the text</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.CalculateTextBoundsForAlignment(System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.StringFormat)">
      <summary>
            Calculates the textbounds for alignment for text with the specified textSize
            </summary>
      <param name="initialBounds">Contains the initial bounds</param>
      <param name="textSize">Contains the size of the text.</param>
      <param name="format">Contains the format to use</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawNativeString(System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.StringFormat,Qios.DevSuite.Components.QDrawTextOptions,System.Drawing.Graphics)">
      <summary>
            Draws the specified text with the native (default GDI) DrawString method. 
            The painting and measuring of this method is more accurate.
            </summary>
      <param name="text">Contains the text to draw.</param>
      <param name="font">Contains the font to use.</param>
      <param name="bounds">Contains the bounds to draw on.</param>
      <param name="brush">Brush to get the color of.</param>
      <param name="format">Contains the string format</param>
      <param name="options">Contains the text options</param>
      <param name="graphics">Contains the graphics to draw on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawString(System.String,System.Drawing.Font,System.Drawing.Rectangle,Qios.DevSuite.Components.QContentOrientation,System.Drawing.Brush,System.Drawing.StringFormat,System.Drawing.Graphics)">
      <summary>
            Draws a string with the specified orientation. the bounds must be the bounds where the string
            (in the specified orientation) must be located.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.PaintTransparentBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the transparent background of the control
            </summary>
      <param name="control">Control to paint the background of</param>
      <param name="e">PaintEventArgs</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawPathShade(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Point,System.Int32,System.Drawing.Color,System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>
            Draws the shade around a path.
            </summary>
      <param name="path">Path to draw the shade of</param>
      <param name="shadeOffset">The offset of the shade</param>
      <param name="shadeSize">The size of the Shade</param>
      <param name="shadeColor">The color of the shade</param>
      <param name="pathBounds">Contains the bounds of the path</param>
      <param name="graphics">Graphics to paint with</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawShapeShade(Qios.DevSuite.Components.IQShadedShapeAppearance,System.Drawing.Rectangle,System.Windows.Forms.DockStyle,System.Drawing.Color,System.Drawing.Graphics)">
      <summary>
            Draws a shade behind a shape with the specified shade appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawRoundedShade(System.Drawing.Rectangle,System.Int32,System.Int32,System.Drawing.Color,Qios.DevSuite.Components.QDrawRoundedRectangleOptions,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>
            Draws a shade of a rounded rectangle
            </summary>
      <param name="rectangle">Rectangle to shade</param>
      <param name="cornerSize">Cornersize of the rounded corners</param>
      <param name="gradientLength">Length of the gradient of the shade edges</param>
      <param name="shadeColor">Color of the shade</param>
      <param name="options">Contains the corners to round</param>
      <param name="horizontalOffset">Relative x position of the shade</param>
      <param name="verticalOffset">Relative y position of the shade</param>
      <param name="graphics">Graphics instance to paint with</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.CreateDrawControlBackgroundFlags(Qios.DevSuite.Components.QColorSchemeBase,Qios.DevSuite.Components.QAppearanceBase)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint objects, use the various painters like <see cref="T:Qios.DevSuite.Components.QRectanglePainter" /> or <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.CreateBrush(System.Drawing.Rectangle,Qios.DevSuite.Components.QAppearanceBase,Qios.DevSuite.Components.QColorSchemeBase,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint objects, use the various painters like <see cref="T:Qios.DevSuite.Components.QRectanglePainter" /> or <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.CreateBrush(System.Drawing.Rectangle,Qios.DevSuite.Components.QColorStyle,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint objects, use the various painters like <see cref="T:Qios.DevSuite.Components.QRectanglePainter" /> or <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawBorders(System.Drawing.Rectangle,Qios.DevSuite.Components.QAppearanceBase,Qios.DevSuite.Components.QColorSchemeBase,System.Drawing.Color,System.Drawing.Graphics)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint objects, use the various painters like <see cref="T:Qios.DevSuite.Components.QRectanglePainter" /> or <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawBorders(System.Drawing.Rectangle,System.Drawing.Color,System.Int32,Qios.DevSuite.Components.QDrawControlBackgroundOptions,System.Drawing.Graphics)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint objects, use the various painters like <see cref="T:Qios.DevSuite.Components.QRectanglePainter" /> or <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawControlBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.QAppearanceBase,Qios.DevSuite.Components.QColorSchemeBase,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,Qios.DevSuite.Components.QDrawControlBackgroundOptions,System.Drawing.Graphics)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint objects, use the various painters like <see cref="T:Qios.DevSuite.Components.QRectanglePainter" /> or <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawControlBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.QAppearanceBase,Qios.DevSuite.Components.QColorSchemeBase,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,Qios.DevSuite.Components.QImageAlign,Qios.DevSuite.Components.QDrawControlBackgroundOptions,System.Drawing.Graphics)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint objects, use the various painters like <see cref="T:Qios.DevSuite.Components.QRectanglePainter" /> or <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawControlBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.QColorStyle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,Qios.DevSuite.Components.QImageAlign,Qios.DevSuite.Components.QDrawControlBackgroundOptions,System.Drawing.Graphics)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint objects, use the various painters like <see cref="T:Qios.DevSuite.Components.QRectanglePainter" /> or <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.DrawRoundedBorders(System.Drawing.Rectangle,System.Int32,System.Drawing.Color,System.Int32,Qios.DevSuite.Components.QDrawControlBackgroundOptions,Qios.DevSuite.Components.QDrawRoundedRectangleOptions,System.Drawing.Graphics)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint rounded objects, use <see cref="T:Qios.DevSuite.Components.QRoundedRectanglePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.FillRoundedRectangle(System.Drawing.Rectangle,System.Int32,System.Drawing.Brush,System.Drawing.Graphics)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint rounded objects, use <see cref="T:Qios.DevSuite.Components.QRoundedRectanglePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlPaint.FillRoundedRectangle(System.Drawing.Rectangle,System.Int32,System.Drawing.Brush,Qios.DevSuite.Components.QDrawRoundedRectangleOptions,System.Drawing.Graphics)">
      <summary>
            Is obsolete since Qios.DevSuite 2.0. To paint rounded objects, use <see cref="T:Qios.DevSuite.Components.QRoundedRectanglePainter" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDrawControlBackgroundOptions">
      <summary>
            These flags are used by several methods of <see cref="T:Qios.DevSuite.Components.QControlPaint" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawControlBackgroundOptions.None">
      <summary>
            No flags defined.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawControlBackgroundOptions.DrawLeftBorder">
      <summary>
            LeftBorder must be drawn
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawControlBackgroundOptions.DrawRightBorder">
      <summary>
            RightBorder must be drawn
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawControlBackgroundOptions.DrawTopBorder">
      <summary>
            TopBorder must be drawn
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawControlBackgroundOptions.DrawBottomBorder">
      <summary>
            BottomBorder must be drawn
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawControlBackgroundOptions.DrawAllBorders">
      <summary>
            All borders must be drawn
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawControlBackgroundOptions.NeverDrawBorders">
      <summary>
            Indicates that if even if a QAppearanceBase instance indicates that borders should be drawn or the BorderFlags are true, the Borders are still not drawn.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QGlobalColorScheme">
      <summary>
            This class defines the global <see cref="T:Qios.DevSuite.Components.QColorScheme" />. This scheme is used by all controls that don't have their
            own colors defined. It contains a property <see cref="P:Qios.DevSuite.Components.QGlobalColorScheme.InheritCurrentThemeFromWindows" /> that indicates if the CurrentTheme
            should be inherited from Windows.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorScheme">
      <summary>
            The QColorScheme class is used by all the Qios.DevSuite.Components controls to indicate what color to use. A QColorScheme
            can contain colors for various themes. You can add or remove themes by setting the <see cref="P:Qios.DevSuite.Components.QColorSchemeBase.Themes" /> property.
            You can indicate whether to inherit the current theme from the <see cref="P:Qios.DevSuite.Components.QColorScheme.Global" /> theme by setting <see cref="P:Qios.DevSuite.Components.QColorSchemeBase.InheritCurrentThemeFromGlobal" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorSchemeBase">
      <summary>
            Contains the base class for QColorSchemes.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeBase.DefaultThemeName">
      <summary>
            Contains the ThemeName of the Default theme.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeBase.LunaBlueThemeName">
      <summary>
            Contains the ThemeName of the LunaBlue theme.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeBase.LunaOliveThemeName">
      <summary>
            Contains the ThemeName of the LunaOlive theme.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeBase.LunaSilverThemeName">
      <summary>
            Contains the ThemeName of the LunaSilver theme.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeBase.HighContrastThemeName">
      <summary>
            Contains the ThemeName of the HighContrast theme.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeBase.AeroThemeName">
      <summary>
            Contains the ThemeName of the Aero theme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.CreateInstanceForClone">
      <summary>
            When implemented, this method returns a new instance from a QColorSchemeBase descendant that
            is used to fill with the cloned values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.ShouldSerializeThemes">
      <summary>
            Returns if the Themes property should be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.ResetThemes">
      <summary>
            Resets the Themes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.SetBaseColorScheme(Qios.DevSuite.Components.QColorSchemeBase,System.Boolean)">
      <summary>
            Sets the base ColorScheme to the specified value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.ShouldSerializeCurrentTheme">
      <summary>
            Indicates if the CurrentTheme of this QColorScheme should be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.ResetCurrentTheme">
      <summary>
            Resets the CurrentTheme of this QColorScheme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.IsValidColor(System.String)">
      <summary>
            Gets whether the specified colorName is a valid color.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.SetAllThemeColors(System.String,System.Drawing.Color)">
      <summary>
            Sets all the themes for the specified colorName to the specified color
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.ShouldSerialize">
      <summary>
            Returns whether this QColorScheme should Serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.Reset">
      <summary>
            Resets the complete QColorScheme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.SaveToXml(System.String,Qios.DevSuite.Components.QColorSaveType)">
      <summary>
            Saves the colors in Xml to the specified file.
            </summary>
      <param name="fileName">Contains the fileName to save the colors to.</param>
      <param name="saveOptions">Determines which colors to save</param>
      <returns>The XmlElement the colors are saved to.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.LoadFromXml(System.String)">
      <summary>
            Loads the colors from the specified fileName
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.LoadFromXml(System.Xml.XPath.IXPathNavigable)">
      <summary>
            Loads the contents of this QColorScheme from the specified XmlElement.
            </summary>
      <param name="collectionElement">The element to load it from</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.SaveToXml(System.Xml.XPath.IXPathNavigable,Qios.DevSuite.Components.QColorSaveType)">
      <summary>
            Saves the contents of this QColorScheme to an XmlElement and returns that specified element.
            </summary>
      <param name="parentNode">Contains the parentNode. This can be an XmlElement or XmlDocument</param>
      <param name="saveOptions">Determines which colors to save</param>
      <returns>The xmlElement that is created under the parentNode</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.SuspendColorsChanged">
      <summary>
            Suspends the ColorsChanged event from firing
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.ResumeColorsChanged(System.Boolean)">
      <summary>
            Resumes the ColorsChanged event from firing
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.OnColorsChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QColorSchemeBase.ColorsChanged" /> event.
            </summary>
      <param name="e">Empty EventArgs</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.OnThemesChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QColorSchemeBase.ThemesChanged" /> event.
            </summary>
      <param name="e">Empty EventArgs</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.Dispose">
      <summary>
            Disposes this QColorScheme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.Dispose(System.Boolean)">
      <summary>
            Disposes this QColorScheme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSchemeBase.Finalize">
      <summary>
            Destructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.IsRegistered">
      <summary>
            Gets whether this QColorScheme is registered with the QGlobalColorScheme.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QColorSchemeBase.ColorsChanged">
      <summary>
            The ColorsChanged event gets raised when a color of the QColorScheme changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QColorSchemeBase.ThemesChanged">
      <summary>
            The ThemesChanged event gets raised when the collection of themes changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            Alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.Themes">
      <summary>
            Gets the Theme information that is defined for this QColorScheme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.InheritCurrentThemeFromGlobal">
      <summary>
            Indicates if this QColorScheme inherits the <see cref="P:Qios.DevSuite.Components.QColorSchemeBase.CurrentTheme" /> from the QGlobalColorScheme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.Scope">
      <summary>
            Gets or sets the scope of this QColorScheme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.BaseColorScheme">
      <summary>
            Gets or sets a possible base colorscheme. If this is set the colors of that scheme are used when they are not explicitly
            set for this scheme. If there is no base colorScheme the Global QColorScheme is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.CurrentTheme">
      <summary>
            Gets or sets the CurrentTheme. When the <see cref="P:Qios.DevSuite.Components.QColorSchemeBase.InheritCurrentThemeFromGlobal" /> property is set, then the CurrentTheme from Global
            is always returned. If the theme is set and the specified theme does not exists, it is added.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.IsGlobalColorScheme">
      <summary>
            Indicates if this QColorScheme is the QGlobalColorScheme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.Item(System.String)">
      <summary>
            Gets the QColor with colorName.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.UseHighContrast">
      <summary>
            Gets whether this QColorScheme is the GlobalColorScheme and HighContrast should be used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSchemeBase.IsDisposed">
      <summary>
            Indicates if this QColorScheme is disposed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorScheme.#ctor(System.Boolean)">
      <summary>
            Constructor. Creates a new QColorScheme that possibly doesn't get registered.
            </summary>
      <param name="register">
            Indicates whether this QColorScheme must be registered with the global QColorScheme.
            This only needs to be true if the object owning the QColorScheme does not get repainted when the
            GlobalColorScheme changes.
            </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorScheme.CreateInstanceForClone">
      <summary>
            Returns a new empty QColorScheme instance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorScheme.Clone">
      <summary>
            Clones this QColorScheme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.Empty">
      <summary>
            Defines an Empty QColor. This is basically created to be referenced to make a color property empty.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.Transparent">
      <summary>
            Defines a Transparent QColor. This is basically created to be referenced to make a color property empty.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TextColor">
      <summary>
            Gets the color of the text of the components.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DisabledTextColor">
      <summary>
            Gets the color of the disabled text of the components.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ContainerControlBackground1">
      <summary>
            Gets the first background color of the <see cref="T:Qios.DevSuite.Components.QContainerControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ContainerControlBackground2">
      <summary>
            Gets the second background color of the <see cref="T:Qios.DevSuite.Components.QContainerControl" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ContainerControlBorder">
      <summary>
            Gets the border color of the <see cref="T:Qios.DevSuite.Components.QContainerControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CustomToolWindowBackground1">
      <summary>
            Gets the first backgroundColor of a QCustomToolWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CustomToolWindowBackground2">
      <summary>
            Gets the second backgroundColor of a QCustomToolWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CustomToolWindowCaption1">
      <summary>
            Gets the first backgroundColor of a the Caption of a QCustomToolWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CustomToolWindowCaption2">
      <summary>
            Gets the second backgroundColor of the Caption of a QCustomToolWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CustomToolWindowBorder">
      <summary>
            Gets the border color a QCustomToolWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.StatusBarBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QStatusBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.StatusBarBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QStatusBar" />. This is only used
            when the StatusBar BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.StatusBarBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QStatusBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.StatusBarPanelBorder">
      <summary>
            Gets the color of the borders of the panels of <see cref="T:Qios.DevSuite.Components.QStatusBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.StatusBarPanelBackground1">
      <summary>
            Gets the color of the Background of the Panels of <see cref="T:Qios.DevSuite.Components.QStatusBar" />. If the <see cref="T:Qios.DevSuite.Components.QColorStyle" />
            is set to <b>Gradient</b> it defines the first color of that gradient.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.StatusBarPanelBackground2">
      <summary>
            If the <see cref="T:Qios.DevSuite.Components.QColorStyle" /> of a <see cref="T:Qios.DevSuite.Components.QStatusBar" /> is set to <b>Gradient</b> this property defines the second color of that gradient.
            If the background is not set to <b>Gradient</b> this color is ignored.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.StatusBarSizingGripDark">
      <summary>
            Gets the dark color of the SizingGrip of a <see cref="T:Qios.DevSuite.Components.QStatusBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.StatusBarSizingGripLight">
      <summary>
            Gets the light color of the SizingGrip of a <see cref="T:Qios.DevSuite.Components.QStatusBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ProgressBarBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QProgressBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ProgressBarBackground2">
      <summary>
            Gets second background color of <see cref="T:Qios.DevSuite.Components.QProgressBar" />. This is only used
            when the StatusBar BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ProgressBarBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QProgressBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ProgressBarColor1">
      <summary>
            Gets the first color of the ProgressBar. This color is the regular color or the first color
            of the Gradient that might be used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ProgressBarColor2">
      <summary>
            Gets the second color of the ProgressBar. This color is only used when a Gradient is drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ProgressBarText">
      <summary>
            Gets the fore color of the ProgressBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.PanelBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.PanelBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QPanel" />. This is only used
            when the Panel BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.PanelBorder">
      <summary>
            Gets the color of the borders of <see cref="T:Qios.DevSuite.Components.QPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockBarButtonBackground1">
      <summary>
            Gets the first background color of the buttons of <see cref="T:Qios.DevSuite.Components.QDockBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockBarButtonBackground2">
      <summary>
            Gets the second background color of the buttons of <see cref="T:Qios.DevSuite.Components.QDockBar" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockBarButtonBorder">
      <summary>
            Gets the color of the borders of the buttons of <see cref="T:Qios.DevSuite.Components.QDockBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockBarBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QDockBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockBarBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QDockBar" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockBarBorder">
      <summary>
            Gets the color of the borders of <see cref="T:Qios.DevSuite.Components.QDockBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QDockingWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QDockingWindow" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowTabStrip1">
      <summary>
            Gets the first color of the QDockingWindowTabStrip. This color is used by QDockingWindows
            that are shown in a tabbed way.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowTabStrip2">
      <summary>
            Gets the second color of the QDockingWindowTabStrip. This color is used by QDockingWindows
            that are shown in a tabbed way.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowTabButton1">
      <summary>
            Gets the first color of a tabbutton on a QDockingWindowTabStrip. This color is used by QDockingWindows
            that are shown in a tabbed way.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowTabButton2">
      <summary>
            Gets the second color of a tabbutton on a QDockingWindowTabStrip. This color is used by QDockingWindows
            that are shown in a tabbed way.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowTabButtonBorder">
      <summary>
            Gets the color of the border of tabbutton on a QDockingWindowTabStrip. This color is used by QDockingWindows
            that are shown in a tabbed way.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowTabButtonBorderNotActive">
      <summary>
            Gets the color of the border of tabbutton on a QDockingWindowTabStrip when it is not active.
            This color is used by QDockingWindows that are shown in a tabbed way.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowTabButtonText">
      <summary>
            Gets the color of text of tabbutton on a QDockingWindowTabStrip.
            This color is used by QDockingWindows that are shown in a tabbed way.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockingWindowTabButtonTextNotActive">
      <summary>
            Gets the color of text of tabbutton on a QDockingWindowTabStrip when the button is not active.
            This color is used by QDockingWindows that are shown in a tabbed way.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockContainerBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QDockContainer" />. A QDockContainer is used
            to place one or more instances of <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.DockContainerBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QDockContainer" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>. A QDockContainer is used
            to place one or more instances of <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuBorder">
      <summary>
            Gets the Border color of <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QMainMenu" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuBevel1">
      <summary>
            Gets the first bevel color of <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuBevel2">
      <summary>
            Gets the second bevel color of <see cref="T:Qios.DevSuite.Components.QMainMenu" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuMoreItemsArea1">
      <summary>
            Gets the first color of the MoreItemsArea of <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuMoreItemsArea2">
      <summary>
            Gets the second color of the MoreItemsArea of <see cref="T:Qios.DevSuite.Components.QMainMenu" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuShadeLine">
      <summary>
            Gets the color of the ShadeLine of the <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuSizingGrip">
      <summary>
            Gets the color of the SizingGrip of the <see cref="T:Qios.DevSuite.Components.QMainMenu" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuShade">
      <summary>
            Gets the shade color of the various elements of the <see cref="T:Qios.DevSuite.Components.QMainMenu" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuExpandedItemBorder">
      <summary>
            Gets the Border color of the expanded menuItem on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuExpandedItemBackground1">
      <summary>
            Gets the first background color of the expanded MenuItem on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuExpandedItemBackground2">
      <summary>
            Gets the second background color of the Expanded MenuItem on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuHotItemBorder">
      <summary>
            Gets the Border color of the hot menuItem on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuHotItemBackground1">
      <summary>
            Gets the first background color of the Hot MenuItem on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuHotItemBackground2">
      <summary>
            Gets the second background color of the pressed MenuItem on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuPressedItemBorder">
      <summary>
            Gets the Border color of the pressed menuItem on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuPressedItemBackground1">
      <summary>
            Gets the first background color of the pressed MenuItem on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuPressedItemBackground2">
      <summary>
            Gets the second background color of the pressed MenuItem on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuSeparator">
      <summary>
            Gets the color of the separator of a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuText">
      <summary>
            Gets the color of the texts on a <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuTextActive">
      <summary>
            Gets the color of the texts on a on a <see cref="T:Qios.DevSuite.Components.QMainMenu" /> when the item is expanded or hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MainMenuTextDisabled">
      <summary>
            Gets the color of the texts on a <see cref="T:Qios.DevSuite.Components.QMainMenu" /> when the item is disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuText">
      <summary>
            Gets the color of the texts on a <see cref="T:Qios.DevSuite.Components.QContextMenu" /> or <see cref="T:Qios.DevSuite.Components.QFloatingMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuTextActive">
      <summary>
            Gets the color of the texts on a <see cref="T:Qios.DevSuite.Components.QContextMenu" /> or <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> when the item is expanded or hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuTextDisabled">
      <summary>
            Gets the color of the texts on a <see cref="T:Qios.DevSuite.Components.QContextMenu" /> or <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> when the item is disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QContextMenu" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuShade">
      <summary>
            Gets the color of the shade behind a <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuDepersonalizeImageForeground">
      <summary>
            Gets the foreground color of the DepersonalizeMenu image. This is the image that is shown when a menu has more items then visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuDepersonalizeImageBackground">
      <summary>
            Gets the BackColor of the DepersonalizeMenu image. This is the image that is shown when a menu has more items then visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuBorder">
      <summary>
            Gets the Border color of <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuHotItemBorder">
      <summary>
            Gets the Border color of the hot MenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuHotItemBackground1">
      <summary>
            Gets the first background color of the hot MenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuHotItemBackground2">
      <summary>
            Gets the second background color of the hot MenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuPressedItemBorder">
      <summary>
            Gets the Border color of the pressed menuItem on a <see cref="T:Qios.DevSuite.Components.QMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuPressedItemBackground1">
      <summary>
            Gets the first background color of the pressed MenuItem on a <see cref="T:Qios.DevSuite.Components.QMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuPressedItemBackground2">
      <summary>
            Gets the second background color of the pressed MenuItem on a <see cref="T:Qios.DevSuite.Components.QMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuCheckedItemBorder">
      <summary>
            Gets the Border color of the icon area when the item is checked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuCheckedItemBackground1">
      <summary>
            Gets the first background of the Icon area when the MenuItem is checked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuCheckedItemBackground2">
      <summary>
            Gets the second background of the Icon area when the MenuItem is checked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuSeparator">
      <summary>
            Gets the color of the separator of a <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuIconBackground1">
      <summary>
            Gets the first background color of the IconBackground of a <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuIconBackground2">
      <summary>
            Gets the second background color of the IconBackground of a <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuIconBackgroundDepersonalized1">
      <summary>
            Gets the first background color of a Menu of the IconBackground of the items that are not visible when personalized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MenuIconBackgroundDepersonalized2">
      <summary>
            Gets the second background color of a Menu of the IconBackground of the items that are not visible when personalized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowBorder">
      <summary>
            Gets the Border color of <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowShade">
      <summary>
            Gets the shade color of <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowHotButtonBorder">
      <summary>
            Gets the Border color of the hot button on a <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowHotButtonBackground1">
      <summary>
            Gets the first background color of the hot button on a <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowHotButtonBackground2">
      <summary>
            Gets the second background color of the pressed button on a <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowPressedButtonBorder">
      <summary>
            Gets the Border color of the pressed button on a <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowPressedButtonBackground1">
      <summary>
            Gets the first background color of the pressed button on a <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.BalloonWindowPressedButtonBackground2">
      <summary>
            Gets the second background color of the pressed button on a <see cref="T:Qios.DevSuite.Components.QBalloonWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QShapedWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QShapedWindow" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowBorder">
      <summary>
            Gets the Border color of <see cref="T:Qios.DevSuite.Components.QShapedWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowShade">
      <summary>
            Gets the shade color of <see cref="T:Qios.DevSuite.Components.QShapedWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowHotButtonBorder">
      <summary>
            Gets the Border color of the hot button on a <see cref="T:Qios.DevSuite.Components.QShapedWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowHotButtonBackground1">
      <summary>
            Gets the first background color of the hot button on a <see cref="T:Qios.DevSuite.Components.QShapedWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowHotButtonBackground2">
      <summary>
            Gets the second background color of the pressed button on a <see cref="T:Qios.DevSuite.Components.QShapedWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowPressedButtonBorder">
      <summary>
            Gets the Border color of the pressed button on a <see cref="T:Qios.DevSuite.Components.QShapedWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowPressedButtonBackground1">
      <summary>
            Gets the first background color of the pressed button on a <see cref="T:Qios.DevSuite.Components.QShapedWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ShapedWindowPressedButtonBackground2">
      <summary>
            Gets the second background color of the pressed button on a <see cref="T:Qios.DevSuite.Components.QShapedWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TextCueColor">
      <summary>
            Gets or sets the color of the text that is displayed as the textual cue.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxBackground">
      <summary>
            Gets the background color of the input area of the <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxDisabledBackground">
      <summary>
            Gets the background color of the input area of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when it is disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxHotBackground">
      <summary>
            Gets the background color of the input area of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when it is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxFocusedBackground">
      <summary>
            Gets the background color of the input area of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when it is focused.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxOuterBackground1">
      <summary>
            Gets the first outer background color of <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxOuterBackground2">
      <summary>
            Gets the second outer background color of <see cref="T:Qios.DevSuite.Components.QInputBox" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxOuterBorder">
      <summary>
            Gets the outer border color of <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxDisabledOuterBackground1">
      <summary>
            Gets the first outer background color of <see cref="T:Qios.DevSuite.Components.QInputBox" /> when it is disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxDisabledOuterBackground2">
      <summary>
            Gets the second outer background color of <see cref="T:Qios.DevSuite.Components.QInputBox" /> when it is disabled.
            This is only used when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxDisabledOuterBorder">
      <summary>
            Gets the outer border color of <see cref="T:Qios.DevSuite.Components.QInputBox" /> when it is disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxHotOuterBackground1">
      <summary>
            Gets the first outer background color of <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the mouse pointer is over the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxHotOuterBackground2">
      <summary>
            Gets the second outer background color of <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the mouse pointer is over the control.
            This is only used when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxHotOuterBorder">
      <summary>
            Gets the outer border color of <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the mouse pointer is over the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxFocusedOuterBackground1">
      <summary>
            Gets the first outer background color of <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the control is focused and the mouse pointer
            is not over the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxFocusedOuterBackground2">
      <summary>
            Gets the second outer background color of <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the control is focused and the mouse pointer
            is not over the control. This is only used when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxFocusedOuterBorder">
      <summary>
            Gets the outer border color of <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the control is focused and the mouse pointer is not over the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxButtonBackground1">
      <summary>
            Gets the first background color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxButtonBackground2">
      <summary>
            Gets the second background color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxButtonBorder">
      <summary>
            Gets the Border color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxDisabledButtonBackground1">
      <summary>
            Gets the first background color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when it is disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxDisabledButtonBackground2">
      <summary>
            Gets the second background color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when it is disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxDisabledButtonBorder">
      <summary>
            Gets the Border color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when it is disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxHotButtonBackground1">
      <summary>
            Gets the first background color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the mouse pointer is over the button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxHotButtonBackground2">
      <summary>
            Gets the second background color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the mouse pointer is over the button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxHotButtonBorder">
      <summary>
            Gets the Border color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the mouse pointer is over the button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxPressedButtonBackground1">
      <summary>
            Gets the first background color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the button is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxPressedButtonBackground2">
      <summary>
            Gets the second background color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the button is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.InputBoxPressedButtonBorder">
      <summary>
            Gets the Border color of the button of the <see cref="T:Qios.DevSuite.Components.QInputBox" /> when the button is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QExplorerBar" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarBorder">
      <summary>
            Gets the Border color of <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarDepersonalizeImageForeground">
      <summary>
            Gets the foreground color of the DepersonalizeMenu image. This is the image that is shown when a group item has more items then visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarDepersonalizeImageBackground">
      <summary>
            Gets the background color of the DepersonalizeMenu image. This is the image that is shown when a group item has more items then visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarText">
      <summary>
            Gets the text color of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarTextHot">
      <summary>
            Gets the text color of the hot item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarTextPressed">
      <summary>
            Gets the text color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarTextExpanded">
      <summary>
            Gets the text color of the expanded item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarTextDisabled">
      <summary>
            Gets the text color of the disabled items of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarGroupItemBackground1">
      <summary>
            Gets the first background color of the group item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarGroupItemBackground2">
      <summary>
            Gets the second background color the group item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarGroupItemBorder">
      <summary>
            Gets the border color of the group item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarGroupPanelBackground1">
      <summary>
            Gets the first background color of the group panel of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarGroupPanelBackground2">
      <summary>
            Gets the second background color the group panel of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarGroupPanelBorder">
      <summary>
            Gets the border color of the group panel of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarExpandedItemBackground1">
      <summary>
            Gets the first background color of the expanded item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarExpandedItemBackground2">
      <summary>
            Gets the second background color the expanded item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarExpandedItemBorder">
      <summary>
            Gets the border color of the expanded item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarHotItemBackground1">
      <summary>
            Gets the first background color of the hot item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarHotItemBackground2">
      <summary>
            Gets the second background color of the hot item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarHotItemBorder">
      <summary>
            Gets the border color of the hot item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarPressedItemBackground1">
      <summary>
            Gets the first background color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarPressedItemBackground2">
      <summary>
            Gets the second background color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarPressedItemBorder">
      <summary>
            Gets the border color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarSeparator">
      <summary>
            Gets the color of separators of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarCheckedItemBackground1">
      <summary>
            Gets the first background color of a checked item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarCheckedItemBackground2">
      <summary>
            Gets the second background color of a checked item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarCheckedItemBorder">
      <summary>
            Gets the border color of a checked item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarCheckedGroupItemBackground1">
      <summary>
            Gets the first background color of a checked group item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarCheckedGroupItemBackground2">
      <summary>
            Gets the second background color of a checked group item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarCheckedGroupItemBorder">
      <summary>
            Gets the border color of a checked group item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarExpandedGroupItemBackground1">
      <summary>
            Gets the first background color of the expanded item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarExpandedGroupItemBackground2">
      <summary>
            Gets the second background color the expanded item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarExpandedGroupItemBorder">
      <summary>
            Gets the border color of the expanded item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarHotGroupItemBackground1">
      <summary>
            Gets the first background color of the hot item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarHotGroupItemBackground2">
      <summary>
            Gets the second background color of the hot item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarHotGroupItemBorder">
      <summary>
            Gets the border color of the hot item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarPressedGroupItemBackground1">
      <summary>
            Gets the first background color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarPressedGroupItemBackground2">
      <summary>
            Gets the second background color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarPressedGroupItemBorder">
      <summary>
            Gets the border color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarHasMoreChildItemsColor">
      <summary>
            Gets the color of the HasMoreChildItems image of the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ExplorerBarGroupItemShade">
      <summary>
            Gets the color of the shade of a group item
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QToolBar" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarBorder">
      <summary>
            Gets the Border color of <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarBevel1">
      <summary>
            Gets the first bevel color of <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarBevel2">
      <summary>
            Gets the second bevel color of <see cref="T:Qios.DevSuite.Components.QToolBar" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarMoreItemsArea1">
      <summary>
            Gets the first color of the MoreItemsArea of <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarMoreItemsArea2">
      <summary>
            Gets the second color of the MoreItemsArea of <see cref="T:Qios.DevSuite.Components.QToolBar" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarShadeLine">
      <summary>
            Gets the color of the ShadeLine of the <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarSizingGrip">
      <summary>
            Gets the color of the SizingGrip of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarShade">
      <summary>
            Gets the shade color of the various elements of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarText">
      <summary>
            Gets the text color of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarTextActive">
      <summary>
            Gets the text color of the active item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarTextDisabled">
      <summary>
            Gets the text color of the disabled items of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarExpandedItemBackground1">
      <summary>
            Gets the first background color of the expanded item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarExpandedItemBackground2">
      <summary>
            Gets the second background color the expanded item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarExpandedItemBorder">
      <summary>
            Gets the border color of the expanded item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarHotItemBackground1">
      <summary>
            Gets the first background color of the hot item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarHotItemBackground2">
      <summary>
            Gets the second background color of the hot item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarHotItemBorder">
      <summary>
            Gets the border color of the hot item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarPressedItemBackground1">
      <summary>
            Gets the first background color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarPressedItemBackground2">
      <summary>
            Gets the second background color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarPressedItemBorder">
      <summary>
            Gets the border color of the pressed item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarSeparator">
      <summary>
            Gets the color of separators of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarCheckedItemBackground1">
      <summary>
            Gets the first background color of a checked item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarCheckedItemBackground2">
      <summary>
            Gets the second background color of a checked item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarCheckedItemBorder">
      <summary>
            Gets the border color of a checked item of the <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarFormBackground1">
      <summary>
            Gets the first backgroundColor of a QToolBarForm
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarFormBackground2">
      <summary>
            Gets the second backgroundColor of a QToolBarForm
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarFormCaption1">
      <summary>
            Gets the first backgroundColor of a the Caption of a QToolBarForm.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarFormCaption2">
      <summary>
            Gets the second backgroundColor of the Caption of a QToolBarForm.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarFormBorder">
      <summary>
            Gets the border color a QToolBarForm.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarFormButton">
      <summary>
            Gets the color that is used to replace the button masks with on a QToolBarForm.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarFormButtonActive">
      <summary>
            Gets the color that is used to replace the button masks with on a QToolBarForm when it is active.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarHostBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QToolBarHost" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarHostBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QToolBarHost" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ToolBarHostBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QToolBarHost" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabControlDropIndicatorBackground">
      <summary>
            Gets the background color of the drop indicator of the <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabControlDropIndicatorBorder">
      <summary>
            Gets the border color of the drop indicator of the <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabControlBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabControlBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QTabControl" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabControlBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabControlContentBackground1">
      <summary>
            Gets the first background color of the ContentShape of <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabControlContentBackground2">
      <summary>
            Gets the second background color of the ContentShape of <see cref="T:Qios.DevSuite.Components.QTabControl" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabControlContentBorder">
      <summary>
            Gets the border color of the ContentShape of <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabControlContentShade">
      <summary>
            Gets the shade color of the ContentShape of <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabStripBackground1">
      <summary>
            Gets the first background color of a QTabStrip on <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabStripBackground2">
      <summary>
            Gets the first second color of a QTabStrip on <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabStripBorder">
      <summary>
            Gets the border color of a QTabStrip on <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabStripNavigationAreaBackground1">
      <summary>
            Gets the first background color of the navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabStripNavigationAreaBackground2">
      <summary>
            Gets the first second color of the navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabStripNavigationAreaBorder">
      <summary>
            Gets the border color of the navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabPageBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QTabPage" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabPageBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QTabPage" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabPageBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QTabPage" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonBackground1">
      <summary>
            Gets the first background color of a TabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonBackground2">
      <summary>
            Gets the second background color of a TabButton. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonBorder">
      <summary>
            Gets the border color of a TabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonText">
      <summary>
            Gets the text color of a TabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonTextDisabled">
      <summary>
            Gets the text color of a disabled TabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonShade">
      <summary>
            Gets the color of the shade of a QTabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonActiveBackground1">
      <summary>
            Gets the first background color of an active TabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonActiveBackground2">
      <summary>
            Gets the second background color of an active TabButton. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonActiveBorder">
      <summary>
            Gets the border color of an active TabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonActiveText">
      <summary>
            Gets the text color of an active TabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonHotBackground1">
      <summary>
            Gets the first background color of a hot TabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonHotBackground2">
      <summary>
            Gets the second background color of a hot TabButton. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonHotBorder">
      <summary>
            Gets the border color of a hot TabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.TabButtonHotText">
      <summary>
            Gets the text color of a hot TabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupLabelBackground1">
      <summary>
            Gets the first background color of a MarkupLabel
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupLabelBackground2">
      <summary>
            Gets the second background color of a MarkupLabel. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupLabelBorder">
      <summary>
            Gets the border color of a MarkupLabel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupText">
      <summary>
            Gets a Text color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupTextAnchor">
      <summary>
            Gets the Anchor color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupTextAnchorHot">
      <summary>
            Gets the hot Anchor color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupTextAnchorActive">
      <summary>
            Gets the active Anchor color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupTextAnchorDisabled">
      <summary>
            Gets the disabled Anchor color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupTextCustom1">
      <summary>
            Gets a custom text color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupTextCustom2">
      <summary>
            Gets a custom text color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupTextCustom3">
      <summary>
            Gets a custom text color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupTextCustom4">
      <summary>
            Gets a custom text color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.MarkupTextCustom5">
      <summary>
            Gets a custom text color of a MarkupText.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollBarBackground1">
      <summary>
            Gets the first background color of the scrollbar on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollBarBackground2">
      <summary>
            Gets the second background color of the scrollbar on a <see cref="T:Qios.DevSuite.Components.QComposite" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollBarBorder">
      <summary>
            Gets the border color of the scrollbar on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollBarPressedBackground1">
      <summary>
            Gets the first background color of the pressed scrollbar on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollBarPressedBackground2">
      <summary>
            Gets the second background color of the pressed scrollbar on a <see cref="T:Qios.DevSuite.Components.QComposite" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollBarPressedBorder">
      <summary>
            Gets the border color of the pressed scrollbar on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonBackground1">
      <summary>
            Gets the first background color of the scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonBackground2">
      <summary>
            Gets the second background color of the scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonBorder">
      <summary>
            Gets the border color of the scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonDisabledBackground1">
      <summary>
            Gets the first background color of the disabled scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonDisabledBackground2">
      <summary>
            Gets the second background color of the disabled scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonDisabledBorder">
      <summary>
            Gets the border color of the disabled scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonHotBackground1">
      <summary>
            Gets the first background color of a hot scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonHotBackground2">
      <summary>
            Gets the second background color of a hot scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonHotBorder">
      <summary>
            Gets the border color of a hot scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonPressedBackground1">
      <summary>
            Gets the first background color of a pressed scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonPressedBackground2">
      <summary>
            Gets the second background color of a pressed scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeScrollButtonPressedBorder">
      <summary>
            Gets the border color of a pressed scrollbutton on a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeBalloonBackground1">
      <summary>
            Gets the first background color of the balloon of a ToolTip of a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeBalloonBackground2">
      <summary>
            Gets the second background color of the balloon of a ToolTip of a <see cref="T:Qios.DevSuite.Components.QComposite" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeBalloonBorder">
      <summary>
            Gets the border color of the balloon of a ToolTip of a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QComposite" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeIconBackground1">
      <summary>
            Gets the first background color of the icon area of a <see cref="T:Qios.DevSuite.Components.QComposite" /> that is configured as a menu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeIconBackground2">
      <summary>
            Gets the second background color of the icon area of a <see cref="T:Qios.DevSuite.Components.QComposite" /> that is configured as a menu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeIconBackgroundBorder">
      <summary>
            Gets the border color of the icon area of a <see cref="T:Qios.DevSuite.Components.QComposite" /> that is configured as a menu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeButtonBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QCompositeButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeButtonBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QCompositeButton" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeButtonBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QCompositeButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeButtonDisabledBackground1">
      <summary>
            Gets the first background color of a disabled <see cref="T:Qios.DevSuite.Components.QCompositeButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeButtonDisabledBackground2">
      <summary>
            Gets the second background color of a disabled <see cref="T:Qios.DevSuite.Components.QCompositeButton" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeButtonDisabledBorder">
      <summary>
            Gets the border color of a disabled <see cref="T:Qios.DevSuite.Components.QCompositeButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeGroupBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QCompositeGroup" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeGroupBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QCompositeGroup" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeGroupBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QCompositeGroup" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemDisabledBackground1">
      <summary>
            Gets the first background color of a disalbed <see cref="T:Qios.DevSuite.Components.QCompositeItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemDisabledBackground2">
      <summary>
            Gets the second background color of a disabled <see cref="T:Qios.DevSuite.Components.QCompositeItem" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemDisabledBorder">
      <summary>
            Gets the border color of a disabled <see cref="T:Qios.DevSuite.Components.QCompositeItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemExpandedBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> when it is expanded.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemExpandedBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> when it is expanded. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemExpandedBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> when it is expanded.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemHotBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> when it is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemHotBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> when it is hot. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemHotBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> when it is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemPressedBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> when it is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemPressedBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> when it is pressed. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeItemPressedBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> when it is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeText">
      <summary>
            Gets the text color of <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeTextExpanded">
      <summary>
            Gets the text color of <see cref="T:Qios.DevSuite.Components.QComposite" /> when it is expanded.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeTextHot">
      <summary>
            Gets the text color of <see cref="T:Qios.DevSuite.Components.QComposite" /> when it is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeTextPressed">
      <summary>
            Gets the text color of <see cref="T:Qios.DevSuite.Components.QComposite" /> when it is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeTextDisabled">
      <summary>
            Gets the disabled text color of <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeSeparator1">
      <summary>
            Gets the first separator color of <see cref="T:Qios.DevSuite.Components.QCompositeSeparator" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.CompositeSeparator2">
      <summary>
            Gets the second separator color of <see cref="T:Qios.DevSuite.Components.QCompositeSeparator" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonDropIndicatorBackground">
      <summary>
            Gets the background color of the drop indicator of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonDropIndicatorBorder">
      <summary>
            Gets the border color of the drop indicator of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonContentBackground1">
      <summary>
            Gets the first background color of the ContentShape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonContentBackground2">
      <summary>
            Gets the second background color of the ContentShape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonContentBorder">
      <summary>
            Gets the border color of the ContentShape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripBackground1">
      <summary>
            Gets the first background color of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripBackground2">
      <summary>
            Gets the first second color of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonContentShade">
      <summary>
            Gets the shade color of the ContentShape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripBorder">
      <summary>
            Gets the border color of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripNavigationAreaBackground1">
      <summary>
            Gets the first background color of the navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripNavigationAreaBackground2">
      <summary>
            Gets the second color of the navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripNavigationAreaBorder">
      <summary>
            Gets the border color of the navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripNavigationButtonHot1">
      <summary>
            Gets the first background color of a hot button on navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripNavigationButtonHot2">
      <summary>
            Gets the first second background color of a hot button on navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripNavigationButtonHotBorder">
      <summary>
            Gets the border color of a hot button on navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripNavigationButtonActive1">
      <summary>
            Gets the first background color of a pressed button on navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripNavigationButtonActive2">
      <summary>
            Gets the second background color of a pressed button on navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabStripNavigationButtonActiveBorder">
      <summary>
            Gets the border color of a pressed button on navigation area of a QTabStrip on <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPageBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPageBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPageBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonBackground1">
      <summary>
            Gets the first background color of a RibbonTabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonBackground2">
      <summary>
            Gets the second background color of a RibbonTabButton. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonBorder">
      <summary>
            Gets the border color of a RibbonTabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonMask">
      <summary>
            Gets the color of the mask of a button on a RibbonTabStrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonMaskDisabled">
      <summary>
            Gets the color of the mask of a disabled button on a RibbonTabStrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonText">
      <summary>
            Gets the text color of a RibbonTabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonTextDisabled">
      <summary>
            Gets the text color of a disabled RibbonTabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonShade">
      <summary>
            Gets the color of the shade of a RibbonTabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonActiveBackground1">
      <summary>
            Gets the first background color of an active RibbonTabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonActiveBackground2">
      <summary>
            Gets the second background color of an active RibbonTabButton. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonActiveBorder">
      <summary>
            Gets the border color of an active RibbonTabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonActiveText">
      <summary>
            Gets the text color of an active RibbonTabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonHotBackground1">
      <summary>
            Gets the first background color of a hot RibbonTabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonHotBackground2">
      <summary>
            Gets the second background color of a hot QRibbonTabButton. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonHotOutline">
      <summary>
            Gets the outline color of a hot QRibbonTabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonHotBorder">
      <summary>
            Gets the border color of a hot RibbonTabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonTabButtonHotText">
      <summary>
            Gets the text color of a hot TabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelBackground1">
      <summary>
            Gets the first background color of the shape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelBackground2">
      <summary>
            Gets the second background color of the shape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelBorder">
      <summary>
            Gets the border color of the shape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelHotBackground1">
      <summary>
            Gets the first background color of the hot shape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelHotBackground2">
      <summary>
            Gets the second background color of the hot shape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelHotBorder">
      <summary>
            Gets the border color of the Hot shape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelActiveBackground1">
      <summary>
            Gets the first background color of the active shape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelActiveBackground2">
      <summary>
            Gets the second background color of the active shape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelActiveBorder">
      <summary>
            Gets the border color of the active shape of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelCaptionShowDialog">
      <summary>
            Gets the color of the show dialog button of the captionArea of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelCaptionShowDialogDisabled">
      <summary>
            Gets the color of the disabled show dialog button of the captionArea of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelCaptionShowDialogHot">
      <summary>
            Gets the color of the hot show dialog button of the captionArea of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelCaptionArea1">
      <summary>
            Gets the first background color of the captionArea of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelCaptionArea2">
      <summary>
            Gets the second background color of the captionArea of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelHotCaptionArea1">
      <summary>
            Gets the first background color of the hot captionArea of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelHotCaptionArea2">
      <summary>
            Gets the second background color of the captionArea of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />. This is only used
            when the BackgroundStyle is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelText">
      <summary>
            Gets the text color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelTextHot">
      <summary>
            Gets the hot text color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelTextActive">
      <summary>
            Gets the active text color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonPanelTextDisabled">
      <summary>
            Gets the disabled text color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonInputBoxBackground">
      <summary>
            Gets the background color of the input area of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonInputBox" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonInputBoxOuterBackground1">
      <summary>
            Gets the first outer background color of the input area of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonInputBox" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonInputBoxOuterBackground2">
      <summary>
            Gets the second outer background color of the input area of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonInputBox" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBarBackground1">
      <summary>
            Gets the first background color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBarBackground2">
      <summary>
            Gets the second background color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBarBorder">
      <summary>
            Gets the border color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBarItemBackground1">
      <summary>
            Gets the first background color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> located on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBarItemBackground2">
      <summary>
            Gets the second background color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> located on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBarItemBorder">
      <summary>
            Gets the border color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> located on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBarItemDisabledBackground1">
      <summary>
            Gets the first background color of a disabled <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> located on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBarItemDisabledBackground2">
      <summary>
            Gets the second background color of a disabled <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> located on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBarItemDisabledBorder">
      <summary>
            Gets the border color of a disabled <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> located on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBackground1">
      <summary>
            Gets the first background color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBackground2">
      <summary>
            Gets the second background color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemBorder">
      <summary>
            Gets the border color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemDisabledBackground1">
      <summary>
            Gets the first background color of a disabled <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemDisabledBackground2">
      <summary>
            Gets the second background color of a disabled <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemDisabledBorder">
      <summary>
            Gets the border color of a disabled <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemText">
      <summary>
            Gets the text color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemHotBackground1">
      <summary>
            Gets the first background color of a hot <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemHotBackground2">
      <summary>
            Gets the second background color of a hot <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemHotBorder">
      <summary>
            Gets the border color of a hot <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemHotText">
      <summary>
            Gets the hot text color of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemActiveBackground1">
      <summary>
            Gets the first background color of an active <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemActiveBackground2">
      <summary>
            Gets the second background color of an active <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemActiveBorder">
      <summary>
            Gets the border color of an active <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonItemActiveText">
      <summary>
            Gets the text color of an active <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonSeparator1">
      <summary>
            Gets the first separator color for a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonSeparator" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonSeparator2">
      <summary>
            Gets the first separator color for a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonSeparator" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionApplicationText">
      <summary>
            Gets the text color of the application part of the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionDocumentText">
      <summary>
            Gets the text color of the document part of the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionInactiveBackground1">
      <summary>
            Gets the first background color of an inactive <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionInactiveBackground2">
      <summary>
            Gets the second background color of an inactive <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionInactiveBorder">
      <summary>
            Gets the border color of an inactive <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionInactiveApplicationText">
      <summary>
            Gets the text color of the application part of an inactive caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionInactiveDocumentText">
      <summary>
            Gets the text color of the document part of an inactive caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonBackground1">
      <summary>
            Gets the first background color of a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonBackground2">
      <summary>
            Gets the second background color of a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonBorder">
      <summary>
            Gets the border color of a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonHotBackground1">
      <summary>
            Gets the first background color of a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonHotBackground2">
      <summary>
            Gets the second background color of a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonHotBorder">
      <summary>
            Gets the border color of a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonPressedBackground1">
      <summary>
            Gets the first background color of a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonPressedBackground2">
      <summary>
            Gets the second background color of a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonPressedBorder">
      <summary>
            Gets the border color of a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonMask">
      <summary>
            Gets the color the mask of a button must be replaced with on a QRibbonCaption
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonCaptionButtonMaskInactive">
      <summary>
            Gets the color the mask of a button must be replaced with on a QRibbonCaption
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonLaunchBarBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonLaunchBarBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonLaunchBarBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonLaunchBarInactiveBackground1">
      <summary>
            Gets the first background color of an inactive <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonLaunchBarInactiveBackground2">
      <summary>
            Gets the second background color of an inactive <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonLaunchBarInactiveBorder">
      <summary>
            Gets the border color of an inactive <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonLaunchBarHostBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonLaunchBarHostBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonLaunchBarHostBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonGlow">
      <summary>
            Gets the glow color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonHotBorder">
      <summary>
            Gets the border color of a hot <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonHotGlow">
      <summary>
            Gets the glow color of a hot <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonHotBackground1">
      <summary>
            Gets the first background color of a hot <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonHotBackground2">
      <summary>
            Gets the second background color of a hot <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonPressedBorder">
      <summary>
            Gets the border color of a pressed <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonPressedGlow">
      <summary>
            Gets the glow color of a pressed <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonPressedBackground1">
      <summary>
            Gets the first background color of a pressed <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonApplicationButtonPressedBackground2">
      <summary>
            Gets the second background color of a pressed <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonFormBackground1">
      <summary>
            Gets the first background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonForm" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonFormBackground2">
      <summary>
            Gets the second background color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonForm" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonFormBorder">
      <summary>
            Gets the border color of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonForm" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonFormInactiveBackground1">
      <summary>
            Gets the first background color of an inactive <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonForm" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonFormInactiveBackground2">
      <summary>
            Gets the second background color of an inactive <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonForm" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonFormInactiveBorder">
      <summary>
            Gets the border color of an inactive <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonForm" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuBackground1">
      <summary>
            Gets the first background color of a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuBackground2">
      <summary>
            Gets the second background color of a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuBorder">
      <summary>
            Gets the border color of a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuContentAreaBackground1">
      <summary>
            Gets the first background color of the item area on a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuContentAreaBackground2">
      <summary>
            Gets the second color of the item area on a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuContentAreaBorder">
      <summary>
            Gets the border color of the item area on a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuHeaderFooter1">
      <summary>
            Gets the first background color of the header and footer of a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuHeaderFooter2">
      <summary>
            Gets the second background color of the header and footer of a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuHeaderFooterBorder">
      <summary>
            Gets the border color of the header and footer of a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuCaptionBackground1">
      <summary>
            Gets the first background color of a caption on a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuCaptionBackground2">
      <summary>
            Gets the second background color of a caption on a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuCaptionBorder">
      <summary>
            Gets the border color of a caption on a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuDocumentAreaBackground1">
      <summary>
            Gets the first background color of the document area on a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuDocumentAreaBackground2">
      <summary>
            Gets the second background color of the document area on a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.RibbonMenuDocumentAreaBorder">
      <summary>
            Gets the border color of the document area on a QRibbonMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.HotkeyWindowBackground1">
      <summary>
            Gets the first background color of the hotkey window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.HotkeyWindowBackground2">
      <summary>
            Gets the second background color of the hotkey window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.HotkeyWindowBorder">
      <summary>
            Gets the border color of the hotkey window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.HotkeyWindowText">
      <summary>
            Gets the text color of the hotkey window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarBackground1">
      <summary>
            Gets the first background color of the scrollbar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarBackground2">
      <summary>
            Gets the second background color of the scrollbar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarBorder">
      <summary>
            Gets the border color of the scrollbar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarPressedBackground1">
      <summary>
            Gets the first background color of the pressed scrollbar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarPressedBackground2">
      <summary>
            Gets the second background color of the pressed scrollbar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarPressedBorder">
      <summary>
            Gets the border color of the pressed scrollbar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonBackground1">
      <summary>
            Gets the first background color of the scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonBackground2">
      <summary>
            Gets the second background color of the scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonBorder">
      <summary>
            Gets the border color of the scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonDisabledBackground1">
      <summary>
            Gets the first background color of the disabled scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonDisabledBackground2">
      <summary>
            Gets the second background color of the disabled scrollbutton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonDisabledBorder">
      <summary>
            Gets the border color of the disabled scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonHotBackground1">
      <summary>
            Gets the first background color of a hot scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonHotBackground2">
      <summary>
            Gets the second background color of a hot scrollbutton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonHotBorder">
      <summary>
            Gets the border color of a hot scrollbutton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonPressedBackground1">
      <summary>
            Gets the first background color of a pressed scrollbutton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonPressedBackground2">
      <summary>
            Gets the second background color of a pressed scrollbutton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.ScrollBarButtonPressedBorder">
      <summary>
            Gets the border color of a pressed scrollbutton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorScheme.Global">
      <summary>
            Returns the GlobalColorScheme
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalColorScheme.CreateInstanceForClone">
      <summary>
            Returns a new empty QGlobalColorScheme instance
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalColorScheme.ShouldSerializeCurrentTheme">
      <summary>
            Overridden. Indicates if the CurrentTheme of this QGlobalColorScheme should be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalColorScheme.ResetCurrentTheme">
      <summary>
            Resets the CurrentTheme of this QColorScheme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalColorScheme.SetCurrentThemeToWindows">
      <summary>
            Sets the CurrentTheme to the same Theme as Windows. The theme is matched by the FileName and WindowsSchemeName.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalColorScheme.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the GlobalColorScheme
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGlobalColorScheme.InheritCurrentThemeFromWindows">
      <summary>
            Indicates if the CurrentTheme is inherited from Windows. When this is set to true, the theme is matched
            by its FileName and WindowsSchemeName.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGlobalColorScheme.Scope">
      <summary>
            Overridden. Returns the scope of this QGlobalColorScheme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGlobalColorScheme.InheritCurrentThemeFromGlobal">
      <summary>
            Overridden. The InheritCurrentThemeFromGlobal isn't used on the QGlobalColorScheme.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorDesignVisibleAttribute">
      <summary>
            Defines for which Controls a specified Color in the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> is visible during DesignTime.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorDesignVisibleAttribute.#ctor(Qios.DevSuite.Components.QColorDesignVisibilityType)">
      <summary>
            Constructor. Creates a new QColorDesignVisibleAttribute
            </summary>
      <param name="visibilityType">Defines the type of visibility</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorDesignVisibleAttribute.#ctor(Qios.DevSuite.Components.QColorDesignVisibilityType,System.Type)">
      <summary>
            Constructor. Creates a new QColorDesignVisibleAttribute
            </summary>
      <param name="visibilityType">Defines the type of visibility</param>
      <param name="controlType">Defines the Control. The type parameter specifies how this Control is interpreted.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorDesignVisibleAttribute.#ctor(Qios.DevSuite.Components.QColorDesignVisibilityType,System.Type,Qios.DevSuite.Components.QColorDesignVisibilityInheritanceType)">
      <summary>
            Constructor. Creates a new QColorDesignVisibleAttribute
            </summary>
      <param name="visibilityType">Defines the type of visibility</param>
      <param name="controlType">Defines the Control. The type parameter specifies how this Control is interpreted.</param>
      <param name="inheritanceType">Indicates how the the visibility should be applied to inherited controls.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorDesignVisibleAttribute.#ctor(Qios.DevSuite.Components.QColorDesignVisibilityType,System.Type,System.Boolean)">
      <summary>
            Constructor. Creates a new QColorDesignVisibleAttribute
            </summary>
      <param name="visibilityType">Defines the type of visibility</param>
      <param name="controlType">Defines the Control. The type parameter specifies how this Control is interpreted.</param>
      <param name="related">Indicates if the color is of the control itself or only related to the control</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorDesignVisibleAttribute.#ctor(Qios.DevSuite.Components.QColorDesignVisibilityType,System.Type,Qios.DevSuite.Components.QColorDesignVisibilityInheritanceType,System.Boolean)">
      <summary>
            Constructor. Creates a new QColorDesignVisibleAttribute
            </summary>
      <param name="visibilityType">Defines the type of visibility</param>
      <param name="controlType">Defines the Control. The type parameter specifies how this Control is interpreted.</param>
      <param name="inheritanceType">Indicates how the the visibility should be applied to inherited controls.</param>
      <param name="related">Indicates if the color is of the control itself or only related to the control</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorDesignVisibleAttribute.ShouldBeVisibleForType(System.Type)">
      <summary>
            Returns whether the Color should be visible for the specified type
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorDesignVisibleAttribute.ShouldBeHiddenForType(System.Type)">
      <summary>
            Returns whether the color should be explicity hidden for the specified type
            </summary>
      <param name="type">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorDesignVisibleAttribute.ShouldBeVisibleForType(System.Type,Qios.DevSuite.Components.QColorSchemeScope)">
      <summary>
            Returns whether the Color should be visible for the specified type
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorDesignVisibleAttribute.VisibilityType">
      <summary>
            Gets the VisibilityType of the Attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorDesignVisibleAttribute.ControlType">
      <summary>
            Gets the ControlType of the Attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorDesignVisibleAttribute.InheritanceType">
      <summary>
            Get the InheritanceType that is applied.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorDesignVisibleAttribute.Related">
      <summary>
            Gets if the color is of the control itself or if its only related to the control
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorDesignVisibilityType">
      <summary>
            Defines the type of visibility for a QColor on a <see cref="T:Qios.DevSuite.Components.QColorScheme" />. This is used with
            <see cref="T:Qios.DevSuite.Components.QColorDesignVisibleAttribute" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorDesignVisibilityType.All">
      <summary>
            Indicates that the Color is visible for all Controls.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorDesignVisibilityType.AllExcept">
      <summary>
            Indicates that the Color is visible for all Controls, except the specified one.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorDesignVisibilityType.None">
      <summary>
            Indicates that the Color is not visible for any Control.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorDesignVisibilityType.NoneExcept">
      <summary>
            Indicates that the Color is not visible for any Control, except the specified one.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorDesignVisibilityType.Hide">
      <summary>
            Indicates that the color should be hidden for the specified control
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorDesignVisibilityInheritanceType">
      <summary>
            Defines the type of inheritance for which the color should be visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorDesignVisibilityInheritanceType.All">
      <summary>
            For all inherited Controls.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorDesignVisibilityInheritanceType.None">
      <summary>
            For no inherited Controls.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorDesignVisibilityInheritanceType.ExternalOnly">
      <summary>
            For Controls only that are inherited and exists in an other assembly.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDrawTextOptions">
      <summary>
            Defines extra options for drawing text.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawTextOptions.None">
      <summary>
            No options.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawTextOptions.HidePrefix">
      <summary>
            Hides the prefix. This removes the ampesant sign and does not underline the first character after it.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawTextOptions.IgnorePrefix">
      <summary>
            Ignores the prefix. This just shows the ampesant signs.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawTextOptions.PathEllipsis">
      <summary>
            Clips the text and adds ellipsis as if it was a path. So it interacts on '\' signs.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawTextOptions.WordEllipsis">
      <summary>
            Clips the words and adds ellipsis.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDrawTextOptions.EndEllipsis">
      <summary>
            Clips the text and adds ellipsis add the end.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQMargin">
      <summary>
            Defines the interface for classes that implement a margin
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQMargin.InflateSize(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>
            Inflates (or deflates) the specified size with the custom margin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQMargin.InflateRectangle(System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.DockStyle)">
      <summary>
            Inflates (or deflates) the specified rectangle with the custom margin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQMargin.ToMargin">
      <summary>
            Returns a QMargin instance of the specified implementation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQMargin.InflateNegativeMargins(System.Drawing.Rectangle)">
      <summary>
            Inflates the rectangle with the absolute values of the negative margins
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartSizedContentObject">
      <summary>
            Defines an interface for custom part contents with a size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSizedContentObject.#ctor(System.Object,System.Drawing.Size)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSizedContentObject.CalculateSize(Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Calculates the size. Does nothing on this class.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSizedContentObject.Size">
      <summary>
            Gets the size of the content object
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSizedContentObject.ContentObject">
      <summary>
            Gets the content object
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QShapeConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QShape" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeConverter.#ctor(System.Type)">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Properties are not supported.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Alters the list in the combobox of the propertygrid
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QShape" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QShape" /> from the given sourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QShape" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QShape" /> from the given sourceType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QRibbonCaptionDesigner">
      <summary>
            Defines the designer for QRibbonCaption.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeControlDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeControl" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.GetCreationTypes">
      <summary>
            Gets the types this designer can create.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
            Prefilters properties
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.OnSetCursor">
      <summary>
            Handles cursor changes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary>
            Handes a begin drag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary>
            Handles a MouseDragMove
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary>
            Handles an End Drag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Handles the paint adornments.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Handles winproc messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesigner.NotifyComponentCreation(System.Object,System.Boolean)">
      <summary>
            Is called by collection editors and possible other sources that
            it is about to create a component. In this case the implementor should ignore any componentAdded events.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesigner.IsDragging">
      <summary>
            Gets whether the control is dragging (moving). See comments of <see cref="T:Qios.DevSuite.Components.Design.IQDragControlDesigner" /> for additional
            information.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesigner.Verbs">
      <summary>
            Gets the verbs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesigner.DrawOutlines">
      <summary>
            Gets or sets whether outlines must be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesigner.AssociatedComponents">
      <summary>
            Overridden. Gets the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QCompositeControl" /> component.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonCaptionDesigner.GetCreationTypes">
      <summary>
            Overridden. Gets the types this designer can create.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonCaptionDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>
            Overridden. Handles the opening of the contextMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonCaptionDesigner.RibbonCaption">
      <summary>
            Gets the ribbonCaption this designer is assigned to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonCaptionDesigner.DesignerHost">
      <summary>
            Gets the designer host.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonCaptionDesigner.Verbs">
      <summary>
            Gets the verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QNoResizeScrollableControlDesigner">
      <summary>
            This class defines a base Designer for scrollable controls that cannot be resized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QNoResizeScrollableControlDesigner.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QNoResizeScrollableControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QNoResizeScrollableControlDesigner.SelectionRules">
      <summary>
            Overridden. Returns the SelectionRules.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QNoResizeScrollableControlDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QDesignerObjectCreationVerb">
      <summary>
            Defines a designer verb for adding components to a parent component.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QDesignerObjectCreationVerb.#ctor(System.ComponentModel.Design.IDesigner,System.Type)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QDesignerObjectCreationVerb.Invoke">
      <summary>
            Invokes the verb
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeWindowDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeWindow" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeWindowDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeWindowDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeWindowDesigner.AssociatedComponents">
      <summary>
            Overridden. Gets the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.Design.QCompositeWindowDesigner" /> component.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeItemBase" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.GetCreationTypes">
      <summary>
            Gets the default types this designer can create. Default value returns null.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.GetDesignableParentPart">
      <summary>
            Gets the first designable parent part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.RemoveFromParent">
      <summary>
            Removes the CompositeItemBase that is managed by this designer from possible parent collections.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.HandleSelectionChanged">
      <summary>
            Handles the selection changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.NotifyComponentCreation(System.Object,System.Boolean)">
      <summary>
            Is called by collection editors and possible other sources that
            it is about to create a component. In this case the implementor should ignore any componentAdded events.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.Item">
      <summary>
            Gets the component as a QCompositeItemBase
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.ChangeService">
      <summary>
            Gets a possbie ComponentChangeService
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.SelectionService">
      <summary>
            Gets the selection service
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.Verbs">
      <summary>
            Overridden. Gets verbs for this QCompositeItemBase
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeItemBaseDesigner.AssociatedComponents">
      <summary>
            Overridden. Gets the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> component.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeGroupDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeGroup" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeGroupDesigner.GetCreationTypes">
      <summary>
            Overridden. Returns the default composite creation types.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeItemDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemDesigner.GetCreationTypes">
      <summary>
            Overridden. Returns the default composite creation types.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeMenuItemDesigner">
      <summary>
            Defines the designer for QCompositeMenuItems.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeIconDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeIcon" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeImageDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeIcon" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeTextDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeText" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeMarkupTextDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeMarkupText" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeItemControlDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeItemControl" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeItemTemplateDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeItemTemplate" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItemConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration">
      <summary>
            Defines the configuration for system items on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" /> like the Customize item and the ShowMore item.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration.PropMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration.#ctor">
      <summary>
            Private constructor for cloning
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration.#ctor(System.Drawing.Image)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration.GetRequestedCount">
      <summary>
            Gets the requested propertyCount.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration.CreateAppearance">
      <summary>
            Overridden. Gets the appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration.ButtonMask">
      <summary>
            Gets or sets the base image that is used to for the button. In the Mask the Color Red is replaced by the MaskColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarItemConfiguration.UsedButtonMask">
      <summary>
            Gets the actual used Mask. This is based on whether the Mask is set. If it is not set the default is used.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItemConfiguration.PropChildCompositeConfiguration">
      <summary> Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItemConfiguration.PropChildWindowConfiguration">
      <summary> Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItemConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItemConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItemConfiguration.#ctor(System.Drawing.Image)">
      <summary>
            Default Constructor. Creates a configuration and sets the font
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItemConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested property count.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItemConfiguration.ChildWindowConfiguration">
      <summary>
            Gets the configuration of the child window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItemConfiguration.ChildCompositeConfiguration">
      <summary>
            Gets the configuration of the child composite.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPersistableObjectCollection">
      <summary>
            Defines the Collection for <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableObjectCollection.#ctor">
      <summary>
            Constructor, creates the Collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableObjectCollection.Add(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Adds a persistableObject object to the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableObjectCollection.Insert(System.Int32,Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Inserts a persistableObject at the specified index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableObjectCollection.Remove(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Removes a persistableObject object from the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableObjectCollection.SortPersistableObjects">
      <summary>
            Sorts the persistableObjects by calling <see cref="M:Qios.DevSuite.Components.IQPersistableObject.MustBePersistedAfter(Qios.DevSuite.Components.IQPersistableObject)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableObjectCollection.Contains(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Returns whether the collection contains the specified persistableObject.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableObjectCollection.Contains(System.Guid)">
      <summary>
            Returns whether the collection contains the persistableObject with the specified PersistGuid.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableObjectCollection.IndexOf(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Returns the Index of the specified item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableObjectCollection.CopyTo(Qios.DevSuite.Components.IQPersistableObject[],System.Int32)">
      <summary>
            Copies this collection to the specified array.
            </summary>
      <param name="objects">The array to copy to.</param>
      <param name="index">The index to start at.</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistableObjectCollection.Item(System.Int32)">
      <summary>
            Gets the persistableObject object on the specified index.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistableObjectCollection.Item(System.String)">
      <summary>
            Gets a persistableObject object based in the persistGuid
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPersistableHostCollection">
      <summary>
            Defines the Collection for <see cref="T:Qios.DevSuite.Components.IQPersistableHost" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableHostCollection.#ctor">
      <summary>
            Constructor, creates the Collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableHostCollection.Add(Qios.DevSuite.Components.IQPersistableHost)">
      <summary>
            Adds a persistableHost object to the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableHostCollection.Insert(System.Int32,Qios.DevSuite.Components.IQPersistableHost)">
      <summary>
            Inserts a persistableHost at the specified index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableHostCollection.Remove(Qios.DevSuite.Components.IQPersistableHost)">
      <summary>
            Removes a persistableHost object from the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableHostCollection.Contains(Qios.DevSuite.Components.IQPersistableHost)">
      <summary>
            Returns whether the collection contains the specified persistableHost.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableHostCollection.Contains(System.Guid)">
      <summary>
            Returns whether the collection contains the persistableObject with the specified PersistGuid.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableHostCollection.IndexOf(Qios.DevSuite.Components.IQPersistableHost)">
      <summary>
            Returns the Index of the specified item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistableHostCollection.CopyTo(Qios.DevSuite.Components.IQPersistableHost[],System.Int32)">
      <summary>
            Copies this collection to the specified array.
            </summary>
      <param name="hosts">The array to copy to.</param>
      <param name="index">The index to start at.</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistableHostCollection.Item(System.Int32)">
      <summary>
            Gets the persistableHost object on the specified index.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistableHostCollection.Item(System.String)">
      <summary>
            Gets a persistableHost based in the persistGuid
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuItemContainer">
      <summary>
            This class is a base class for every <see cref="T:Qios.DevSuite.Components.QCommandContainer" /> that contains a <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.#ctor">
      <summary>
            Default Constructor. Creates a QMenu with its own <see cref="T:Qios.DevSuite.Components.QCommandCollection" /> as MenuItems. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.#ctor(Qios.DevSuite.Components.IQCommandContainer)">
      <summary>
            Creates a QMenu with a Custom commandContainer as parent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.#ctor(Qios.DevSuite.Components.QCommand,Qios.DevSuite.Components.QMenuItemCollection)">
      <summary>
            Constructor. Creates a QMenuItemContainer and uses the specified <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" /> as MenuItems.
            </summary>
      <param name="parentCommand">Contains the parentCommand this QMenu belongs to</param>
      <param name="menuItems">Contains the menuItems to fill this QMenu with</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.CreateCommandCollection">
      <summary>
            Creates a new QMenuItemCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.MustBePersistedAfter(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Indicates if this persistableObject must be saved after an other persistableObject.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.SavePersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Saves this Control to the parentElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.LoadPersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable,System.Object)">
      <summary>
            Loads this Control from the specified persistableObjectElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.UnloadPersistableObject">
      <summary>
            Unloads the persistableObject.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.CloneMenuItemForCustomizeMenu(Qios.DevSuite.Components.QMenuItem)">
      <summary>
            Clones a QMenuItem and configures to clone to be used for the CustomizeMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.RetrieveCustomizeMenu">
      <summary>
            Gets the CustomizeMenu for this QMenuItemContainer.
            You can override this method to extend the default menu or return an other menu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.GetAccessibleMenuItemWithHotkey(System.Windows.Forms.Keys)">
      <summary>
            Returns QMenuItem that has hotkey as Hotkey. This method does not iterate through the child menu items.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.GetNextAccessibleMenuItemWithHotkey(Qios.DevSuite.Components.QMenuItem,System.Windows.Forms.Keys)">
      <summary>
            Returns the next (after the specified item) QMenuItem that has hotkey as Hotkey. This method does not iterate through the child menu items.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.GetAccessibleMenuItemsWithHotkeyCount(System.Windows.Forms.Keys)">
      <summary>
            Returns the amount of QMenuItems that have the specified hotkey as hotkey.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.GetAccessibleMenuItemWithHotkey(System.Windows.Forms.Keys,System.Int32)">
      <summary>
            Returns QMenuItem that has hotkey as Hotkey.  This method
            iterate through child MenuItems for recursiveLevels levels. So if recursiveLevel = 1, 
            it iterates through direct child MenuItems.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.GetAccessibleMenuItemWithShortcut(System.Windows.Forms.Keys)">
      <summary>
            Returns QMenuItem that has shortcut as its shortcut.
            The MenuItem cannot have ChildItems. This method does iterate through the ChildItems.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.GetNextSelectableItem(System.Int32,System.Boolean)">
      <summary>
            Returns the next selectable item from index. That are visible items without informational purposes.
            LoopAround indicates whether it should continue with the first item after the last is reached
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.GetPreviousSelectableItem(System.Int32,System.Boolean)">
      <summary>
            Returns the previous selectable item from index. That are visible items without informational purposes. The loopAround parameter indicates whether
            it should continue with the last item after the first is reached.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.SelectNextItem">
      <summary>
            Selects the next visible MenuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.SelectPreviousItem">
      <summary>
            Selects the previous visible MenuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.ContainsOrIsContainerWithHandle(System.IntPtr)">
      <summary>
            Returns whether this QCommandContainer is the container with handle, or contains
            a ChildContainer with handle.
            </summary>
      <returns>true when it is or contains the handle, else false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.EnableAllItems(System.Boolean)">
      <summary>
            Enables or disables all the items. The advantage of this method instead of using the Enabled property
            is that it does not disable a possible SizingGrip or MoreItems button.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.StartTimer">
      <summary>
            Starts the timer
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.StopTimer">
      <summary>
            Stops the timer
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.CloseAllMenus">
      <summary>
            Closes all menus.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.HideContainer">
      <summary>
            Hides the QMenuItemContainer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.SetExpandedItem(Qios.DevSuite.Components.QMenuItem,System.Boolean,System.Boolean,Qios.DevSuite.Components.QMenuItemActivationType)">
      <summary>
            Sets the ExpandedItem property with animate, showHotKeyPrefix and the activationType.
            Returns false when the user cancels the expanding in an event, else true.
            </summary>
      <param name="expandedItem">the ExpandedItem to activate.</param>
      <param name="animate">
            Indicates if the ChildMenu should animate.
            When this parameter is set to true it is defined by the Configuration whether to Animate.
            </param>
      <param name="showHotkeyPrefix">
            Indicates if the ChildMenu should show its HotkeyPrefixes.
            When this parameter is set to true it is defined by the Configuration whether to show the HotKeyPrefixes.
            </param>
      <param name="activationType">sets the activationType that is used by the various events.</param>
      <returns>False when the expansion is canceled in one of the events, else true.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.SetExpandedItem(Qios.DevSuite.Components.QMenuItem)">
      <summary>
            Sets the ExpandedItem property only. Used only for internal purposes.
            </summary>
      <param name="expandedItem">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.ResetExpandedItem">
      <summary>
            Resets the ExpandedItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.ShowChildMenu(Qios.DevSuite.Components.QMenuItem,System.Boolean,System.Boolean)">
      <summary>
            Shows the ChildMenu of the specified menuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseMove of the QMenuItemContainer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseDown on the QMenuItemContainer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMouseLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the MouseLeave on the QMenuItemContainer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseUp event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnCustomizeMenuShowed(System.EventArgs)">
      <summary>
            Raises the CustomizeMenuShowed event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnCustomizeMenuClosed(System.EventArgs)">
      <summary>
            Raises the CustomizeMenuClosed event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMenuItemsRequested(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemsRequested" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMenuItemMouseDown(Qios.DevSuite.Components.QMenuMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMenuItemMouseUp(Qios.DevSuite.Components.QMenuMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMenuItemSelected(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemSelected" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMenuItemActivating(Qios.DevSuite.Components.QMenuCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemActivating" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMenuItemActivated(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMenuShowing(Qios.DevSuite.Components.QMenuCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuShowing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnMenuShowed(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnPaintMenuItem(Qios.DevSuite.Components.QPaintMenuItemEventArgs)">
      <summary>
            Raises the PaintMenuItem event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.Dispose(System.Boolean)">
      <summary>
            Overridden, disposes the used resources.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Overridden. Handles the TimerElapsed method
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemContainer.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the ConfigurationChanged event
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.ConfigurationChanged">
      <summary>
            Gets raised when the Configuration is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemMouseDown">
      <summary>
            Gets raised when a the mouse hovers over a MenuItem and a button is pressed.
            The <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemActivated" /> event should be used for handling the activation of a MenuItem,
            because it also allows keyboard activation and it takes into consideration the InformationOnly and Enabled properties.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemMouseUp">
      <summary>
            Gets raised when a the mouse hovers over a MenuItem and a button is released.
            The <see cref="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemActivated" /> event should be used for handling the activation of a MenuItem,
            because it also allows keyboard activation and it takes into consideration the InformationOnly and Enabled properties.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemsRequested">
      <summary>
            Gets raised when a user tries to expand a menuItem while the menuItem doens't have any child menuitems.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemSelected">
      <summary>
            Gets raised when a user selects a menuItem via the mouse or the Keyboard
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemActivating">
      <summary>
            Gets raised when a user activates a MenuItem by clicking it, using a ShortCut, a HotKey or navigating
            to it with the keyboard. This event can be canceled.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.MenuItemActivated">
      <summary>
            Gets raised when a user activates a menuItem by clicking it, using a ShortCut, a HotKey or navigating
            to it with the keyboard.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.MenuShowing">
      <summary>
            Gets raised when a menuItem is activated and it has ChildMenuItems before the ChildMenu pops up. This
            event can be canceled.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.MenuShowed">
      <summary>
            Gets raised when a menuItem is activated and it has ChildMenuItems when the ChildMenu is popped up.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.PaintMenuItem">
      <summary>
            Gets raised when a MenuItem must be painted.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.CustomizeMenuShowed">
      <summary>
            Gets raised when the customize menu is showed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItemContainer.CustomizeMenuClosed">
      <summary>
            Gets raised when the customize menu is closed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.ToolTipText">
      <summary>
            Overridden. Gets or sets the ToolTip text. Don't use this.  This is set via <see cref="P:Qios.DevSuite.Components.QMenuItem.ToolTip" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.PersistGuid">
      <summary>
            Gets or sets the PersistGuid. With this Guid the control is identified in the persistence files.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.PersistObject">
      <summary>
            Gets or sets whether this object must be persisted.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.IsPersisted">
      <summary>
            Gets or sets whether this control is already persisted to a file.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.RequiresUnload">
      <summary>
            Gets or sets whether this control requires an unload before loading from a persistableObjectElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.CreateNew">
      <summary>
            Gets or sets whether a new instance of this PersistableObject must be created when it is loaded from file.
            If this is false the persistableObject must match an existing persistableObject in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.Name">
      <summary>
            New, gets or sets the name.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.ParentMenuItem">
      <summary>
            Returns the MenuItem that owns this QMenuItemContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.NextMenuItemArrowKey">
      <summary>
            Contains the Arrow key to go to the next menuitem, default is Right. This is set by the Orientation.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.PreviousMenuItemArrowKey">
      <summary>
            Contains the Arrow key to go to the previous menuitem, default is Left. This is set by the Orientation
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.HasSimulatedFocus">
      <summary>
            Because a some QMenuItemContainers like QMainMenu never receives Focus, this bool is used to indicate
            if the QmenuItemContainer has simulated focus. When a menu has simulated focus it
            reacts to arrow keys.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.Personalized">
      <summary>
            Gets whether the QMenuItemContainer is personalized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.ShowPersonalizedItems">
      <summary>
            Indicates if the Personalized menu items must be visible. This depends on the Personalized boolean
            and the PersonalizedItembehavior.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemContainer.AutoExpand">
      <summary>
            Gets or sets whether items should expand automatically when the mouse hovers over them.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxObjectCollection">
      <summary>
            A class for storing elements to show in the QInputBox dropdown window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.#ctor(Qios.DevSuite.Components.QInputBox)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.Add(System.Object)">
      <summary>
            Adds an item to the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.AddRange(System.Object[])">
      <summary>
            Adds a range of objects to the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.Clear">
      <summary>
            Clears the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.Contains(System.Object)">
      <summary>
            Determines if the collection contains the item
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.CopyTo(System.Object[],System.Int32)">
      <summary>
            Copies the collection to a destination array
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.GetEnumerator">
      <summary>
            Gets an enumerator
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.IndexOf(System.Object)">
      <summary>
            Determines the index of an item in the collection
            </summary>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.Insert(System.Int32,System.Object)">
      <summary>
            Inserts an item at a specific index
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.Remove(System.Object)">
      <summary>
            Removes an item from the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxObjectCollection.RemoveAt(System.Int32)">
      <summary>
            Removes an item at a specific index
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxObjectCollection.Count">
      <summary>
            Gets the number of items within the collection
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxObjectCollection.IsReadOnly">
      <summary>
            Gets whether the collection is read only
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxObjectCollection.Item(System.Int32)">
      <summary>
            Gets or sets an item from the collection at a specific index
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCustomToolWindow">
      <summary>
            QCustomToolWindow is a ToolWindow that can be set with custom Captions and borders. Default
            it comes with a border and a caption. Override <see cref="M:Qios.DevSuite.Components.QContainerControlBase.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)" /> 
            when you want to add buttons or do custom painting.
            </summary>
      <remarks>
            Because the QCustomToolWindows do not inherit from Form, they will not be added to the OwnedWindows of a 
            Form. Use <see cref="P:Qios.DevSuite.Components.QCustomToolWindow.AllWindows" /> to iterate all the QCustomToolWindows.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.#ctor">
      <summary>
            Default Constructor. Creates a QCustomToolWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.#ctor(System.Windows.Forms.IWin32Window)">
      <summary>
            Constructor. Creates a QCustomToolWindow with the owner specified.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.CreateAppearanceInstance">
      <summary>
            Overridden. Creates a new <see cref="T:Qios.DevSuite.Components.QAppearance" />.
            </summary>
      <returns>a new <see cref="T:Qios.DevSuite.Components.QAppearance" /></returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.ShouldSerializeCaptionColor1">
      <summary>
            Is used by the designer to determine whether the property changes from the default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.ResetCaptionColor1">
      <summary>
            Is used by the designer to reset the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.ShouldSerializeCaptionColor2">
      <summary>
            Is used by the designer to determine whether the property changes from the default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.ResetCaptionColor2">
      <summary>
            Is used by the designer to reset the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.SetClientSizeCore(System.Int32,System.Int32)">
      <summary>
            Overridden, sets the new ClientArea
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.OnLoad(System.EventArgs)">
      <summary>
            Raises the Load event
            </summary>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.OnCreateControl">
      <summary>
            Raises the CreateControl event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.OnWindowsXPThemeChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the change of a Windows XP Theme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. handes specific Window Messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the NonClientArea.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindow.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Form
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="E:Qios.DevSuite.Components.QCustomToolWindow.Load">
      <summary>
            Occurs before a QDockingWindow is displayed for the first time.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.AllWindows">
      <summary>
            Gets all currently created QCustomToolWindows. 
            </summary>
      <remarks>
            Because a QCustomToolWindow does not inherit from <see cref="T:System.Windows.Forms.Form" />, but from <see cref="T:Qios.DevSuite.Components.QContainerControl" />, it will
            not appear in the <see cref="P:System.Windows.Forms.Form.OwnedForms" /> array. To provide an other way to get all
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.Site">
      <summary>
            Overridden. Gets or sets the Site.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.MinimumSize">
      <summary>
            Gets the MinimumSize of this CustomToolWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.CanSize">
      <summary>
            Gets or sets whether the QCustomToolWindow can be sized
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.CaptionColor1">
      <summary>
            Gets or sets the first caption Color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.CaptionColor2">
      <summary>
            Gets or sets the second caption Color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.Owner">
      <summary>
            Gets or sets the Owner of this Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.CaptionBounds">
      <summary>
            Gets the current CaptionBounds. Override this when other bounds are prefered.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.CaptionTitleBounds">
      <summary>
            Gets the bounds used for the CaptionTitle. Override this when other bounds are prefered.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.BackColorPropertyName">
      <summary>
            Overridden. Returns the CustomToolWindowBackground1 PropertyName 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.BackColor2PropertyName">
      <summary>
            Overridden. Returns the CustomToolWindowBackground2 CustomToolWindowBackground2 PropertyName
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.BorderColorPropertyName">
      <summary>
            Overridden. Returns the CustomToolWindowBorder PropertyName
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.CaptionColor1PropertyName">
      <summary>
            Returns the CustomToolWindowCaption1 PropertyName
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.CaptionColor2PropertyName">
      <summary>
            Returns the CustomToolWindowCaption2 PropertyName
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.UsedCaptionHeight">
      <summary>
            Returns the used captionHeight. This depends on the Windows ToolWindowCaptionHeight.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.BorderMarginTop">
      <summary>
            Returns the area used for the top border.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.ClientAreaMarginTop">
      <summary>
            Overridden. Gets the topmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.ClientAreaMarginLeft">
      <summary>
            Overridden. Gets the leftmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.ClientAreaMarginRight">
      <summary>
            Overridden. Gets the rightmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.ClientAreaMarginBottom">
      <summary>
            Overridden. Gets the bottommargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.DefaultSize">
      <summary>
            Gets the DefaultSize of this QCustomToolWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.ResizeBorderWidth">
      <summary>
            Overridden. Gets the ResizeBorderWidth
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindow.CreateParams">
      <summary>
            Overridden. Returns the CreateParams for this QFloatingMenu.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCustomToolWindowAppearance">
      <summary>
            Defines the Appearance for a QCustomToolWindow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCustomToolWindowAppearance.PropCaptionHeight">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCustomToolWindowAppearance.PropCaptionMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCustomToolWindowAppearance.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCustomToolWindowAppearance.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindowAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindowAppearance.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this appearance.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindowAppearance.CaptionHeight">
      <summary>
            Gets or sets the height of the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindowAppearance.CaptionMargin">
      <summary>
            Gets or sets the Margin between the Border and the Caption
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCustomToolWindowCollection">
      <summary>
            Defines a collection for QCustomToolWindows. This is mainly used with the static <see cref="P:Qios.DevSuite.Components.QCustomToolWindow.AllWindows" />
            property to get all the created QCustomToolWindows.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QWeakReferenceCollection">
      <summary>
            Contains a collection class for QWeakReferences. Use this class if you want to maintain a list of objects that shouldn't be kept alive
            because they are in the list. For example when you create some Static object that where objects register to.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.AddObject(System.Object)">
      <summary>
            Adds the specified object (as a WeakReference) to the collection and returns the Reference.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.RemoveObject(System.Object,System.Boolean)">
      <summary>
            Removes the WeakReference of the specified object from the collection. If cleanDeadReferences is set, it clears all references it iterates through that are not alive anymore.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.Add(Qios.DevSuite.Components.QWeakReference)">
      <summary>
            Adds the specified WeakReference.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.Remove(Qios.DevSuite.Components.QWeakReference)">
      <summary>
            Removes the specified WeakReference.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.Clear">
      <summary>
            Clears the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the object at the specified index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.IndexOfObject(System.Object,System.Boolean)">
      <summary>
            Gets the index of the specified object. If cleanDeadReferences is set, it clears all references it iterates through that are not alive anymore.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.IndexOf(Qios.DevSuite.Components.QWeakReference)">
      <summary>
            Gets the index of the specified object.
            </summary>
      <param name="reference">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.GetWeakReference(System.Object,System.Boolean)">
      <summary>
            Finds the WeakReference of the specified object. If cleanDeadReferences is set, it clears all references it iterates through that are not alive anymore.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.ContainsObject(System.Object,System.Boolean)">
      <summary>
            Returns whether this collection contains the specified objectValue.  If cleanDeadReferences is set, it clears all references it iterates through that are not alive anymore.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.CleanCollection">
      <summary>
            Removes all the dead references from the collection. It returns howmany items were removed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWeakReferenceCollection.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QWeakReferenceCollection.Item(System.Int32)">
      <summary>
            Returns the weakReference at the specified index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindowCollection.#ctor">
      <summary>
            Creates a QCustomToolWindowCollection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindowCollection.Add(Qios.DevSuite.Components.QCustomToolWindow)">
      <summary>
            Adds a QCustomToolWindow to the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindowCollection.Insert(System.Int32,Qios.DevSuite.Components.QCustomToolWindow)">
      <summary>
            Not implemented.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindowCollection.Remove(Qios.DevSuite.Components.QCustomToolWindow)">
      <summary>
            Removes a QCustomToolWindow from the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindowCollection.Contains(Qios.DevSuite.Components.QCustomToolWindow)">
      <summary>
            Returns whether this collection contains the specified window.
            </summary>
      <param name="window">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindowCollection.IndexOf(Qios.DevSuite.Components.QCustomToolWindow)">
      <summary>
            Returns the Index of the specified item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCustomToolWindowCollection.CopyTo(Qios.DevSuite.Components.QCustomToolWindow[],System.Int32)">
      <summary>
            Copies this collection to the specified array.
            </summary>
      <param name="windows">The array to copy to.</param>
      <param name="index">The index to start at.</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QCustomToolWindowCollection.Item(System.Int32)">
      <summary>
            Gets the ToolWindow at the specified index.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeSeparator">
      <summary>
            Defines an item that functions as a separator between other QCompositeItems
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparator.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparator.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparator.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeSeparator
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparator.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparator.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Gets the colorSet for the specified item in the specified state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparator.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeSeparator.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Handles a paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeSeparator.LayoutEngine">
      <summary>
            Gets or sets the LayoutEngine
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeSeparator.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeSeparator.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeSeparator.UsedImage">
      <summary>
            Gets the used image for this separator.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeSeparator.ContentObject">
      <summary>
            Overridden. Gets the contentObject.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartTextLayoutEngine">
      <summary>
            Defines the layout engine used for texts that can be wrapped.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartLinearLayoutEngine">
      <summary>
            Defines the class that lays-out <see cref="T:Qios.DevSuite.Components.IQPart" /> objects in a linear order.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPartLayoutEngine">
      <summary>
            IQPartLayoutEngine defines the interface used to lay out <see cref="T:Qios.DevSuite.Components.IQPart" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartLayoutEngine.PerformLayout(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            This method performs the complete layout of the parts.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartLayoutEngine.PrepareForLayout(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Stage 0 of the layout. This method lets every part know the layout is comining up.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartLayoutEngine.CalculatePartSize(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Stage 1 of the layout. Calculates the size of a specified part based on the content of the part.
            </summary>
      <returns>The calculated part size</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartLayoutEngine.ApplyConstraints(System.Drawing.Size,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Stage 2 of the layout. Applies the constraints. part should re-adjust itself so that it meets the outer size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartLayoutEngine.LayoutPart(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Stage 3 of the layout. Lays out the part on the coordinates
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartLayoutEngine.FinishLayout(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Stage 4 of the layout. This method lets every part know the layout is finished.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.GetPartDirection(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the direction of the IQPart
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.GetPartLayoutEngine(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the layout engine for the part
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.PerformLayout(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            This method performs the complete layout of the parts. It calls CalculatePartSize, ApplyConstraints and LayoutPart.
            </summary>
      <param name="rectangle">Contains the rectangle to lay the part out in. If the width or height of the rectangle is 0, the calcuated width or height is used.</param>
      <param name="part">The part to lay out.</param>
      <param name="layoutContext">The context to use.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.PrepareForLayout(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            This method lets every part know the layout is comining up.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.FinishLayout(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            This method lets every part know the layout is finished.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.CalculatePartSize(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Calculates the size of a specified part.
            </summary>
      <returns>The size of the part</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.CalculatePartCollectionSize(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Calculates the size of collection of the specified part.
            </summary>
      <returns>The size of the collection</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.AdjustContentSizeForPartCalculation(Qios.DevSuite.Components.QPartDirection,System.Drawing.Size,System.Drawing.Size)">
      <summary>
            This method adjusts the specified contentSize. This is basically used in <see cref="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.CalculatePartSize(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)" />
            and can be overridden by layout engines to change the behavior.
            </summary>
      <param name="direction">The direction in which is calculated</param>
      <param name="contentSize">The contentSize that is being adjusted</param>
      <param name="contentPartSize">The size of the part where the contentsize is adjusted with.</param>
      <returns>the new ContentSize for the parentPart</returns>
      <remarks>
            The default behavior adds the width of contentPartSize to the contentSize and sets the height
            of the contentSize to maximum between the height of the contentSize and the contentPartSize.
            This ofcourse when parentPart is horizontal, when vertical the process is inverted.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.ApplyConstraints(System.Drawing.Size,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Applies the constraints. part should re-adjust itself so that it meets the outer size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.ApplyConstraintsToSize(System.Drawing.Size,System.Drawing.Size,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartOptions)">
      <summary>
            This method applies the constraints to a szie. If the part can stretch or shrink, it sets the size
            to the requested size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.ApplyConstraintsToCustomContent(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Applies constraints based on custom content. The default implementation does nothing.
            This is called when the a part doesn't contain a qpart collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.ApplyConstraintsToCollection(Qios.DevSuite.Components.IQPart,System.Drawing.Size,System.Drawing.Size,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Applies the size constraint the the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.LayoutPart(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Lays out the specified part in the specified rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.LayoutPartCollectionHorizontal(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Lays out a part collection in the horizontal direction.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLinearLayoutEngine.LayoutPartCollectionVertical(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Lays out a part collection in the vertical direction. Returns the Size that the contents takes up.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLinearLayoutEngine.Default">
      <summary>
            Gets the default static engine.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTextLayoutEngine.ApplyConstraintsToCustomContent(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Overridden. Applys constraints to custom content. This applies the wrapping.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTextLayoutEngine.Default">
      <summary>
            Gets the default static engine.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPartCollection">
      <summary>
            IQPart defines the interface used by objects that can be layed out.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartCollection.Contains(Qios.DevSuite.Components.IQPart)">
      <summary>
            Determines if the part is in the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartCollection.IndexOf(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the index of the part within the collection
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPartCollection.Item(System.Int32)">
      <summary>
            Gets the part at the specified index.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQPartCollection.Count">
      <summary>
            Gets the PartCount
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPart">
      <summary>
            QPart is used since Qios.DevSuite 2.0. It is the most abstract implementation of an element that can be layed-out.
            It can contain a list of content parts OR some content, (not both at the same time).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.CreateContentPartsCollection">
      <summary>
            Creates the ContentParts collection.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.CreateCalculatedProperties">
      <summary>
            Creates the CalculatedProperties class.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.CreatePartProperties">
      <summary>
            Creates the QPartProperties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.SetLayoutOrder(System.Int32,System.Boolean)">
      <summary>
            Sets the layoutOrder, if notifyChange is true, it performs a layout.
            </summary>
      <remarks>
            If a LayoutOrderString is used in the configuration, this is adapted by that string.
            When you want to specify the LayoutOrder yourself or want to add items, set that string to String.Empty (not null).
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.IsVisible(Qios.DevSuite.Components.QPartVisibilitySelectionTypes)">
      <summary>
            IQPart implementation. Gets whether the part is visible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.HitTest(System.Int32,System.Int32)">
      <summary>
            IQPart implementation. Returns what location of the part was hit.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.GetObjectPainter(Qios.DevSuite.Components.QPartPaintLayer,System.Type)">
      <summary>
            Gets the object to paint for the specified layer.
            If painterType is specified it returns the first painter of that type. Otherwise it returns the first painter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.FitsInSelection(Qios.DevSuite.Components.QPartSelectionTypes[])">
      <summary>
            Returns whether this QPart fits in the selection. Default it returns the result of <see cref="M:Qios.DevSuite.Components.QPartHelper.FitsInSelection(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartSelectionTypes[])" />.
            If multiple selections are given, they are combined as if it was AND.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.HandleChange(System.Boolean)">
      <summary>
            Handles the change of the QPart
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPart.Clone">
      <summary>
            Clones the object
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.PartName">
      <summary>
            Gets the name of the part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.LayoutOrder">
      <summary>
            Gets or sets the LayoutOrder. If a LayoutOrderString is used in the configuration, this is adapted by that string.
            When you want to specify the LayoutOrder yourself or want to add items, set that string to String.Empty (not null).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.Parts">
      <summary>
            Gets the ContentParts collection if there is one.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.HasParts">
      <summary>
            Indicates whether this QPart has Parts.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.ContentObject">
      <summary>
            Gets the ContentObject
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.Visible">
      <summary>
            Gets whether this QPart is visible. This is only used when the <see cref="M:Qios.DevSuite.Components.IQPartSharedProperties.GetVisible(Qios.DevSuite.Components.IQPart)" /> returns Undefined.
            This doesn't indicate whether the part is acutally visible. This can depend on several properties. use <see cref="M:Qios.DevSuite.Components.QPart.IsVisible(Qios.DevSuite.Components.QPartVisibilitySelectionTypes)" /> to see whether it is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.ParentPart">
      <summary>
            Gets the parent of a IQPart
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.ParentCollection">
      <summary>
            Gets the parentCollection of a IQPart
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.DisplayParent">
      <summary>
            IQPart Implementation. Gets the display parent
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.LayoutListener">
      <summary>
            Gets or sets a possible listener that listens to the layout of a IQPart
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.PaintListener">
      <summary>
            Gets or sets a possible listener that listens to the paint of a IQPart
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.LayoutEngine">
      <summary>
            Gets or sets the used lay-out engine to layout this part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.PaintEngine">
      <summary>
            Gets or sets the used paint engine to layout this part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.Properties">
      <summary>
            Gets or sets the QPartProperties. If they are not set yet they get created.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.SharedProperties">
      <summary>
            Gets the properties casted as a QPartSharedProperties class.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPart.CalculatedProperties">
      <summary>
            Gets or sets the class that receives the calculated properties. If they are not set yet they get created.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QTranslucentWindowDesigner">
      <summary>
            Designer class for the QTranslucentWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTranslucentWindowDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTranslucentWindowDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
            Overridden, removes some prefilter properties
            </summary>
      <param name="properties">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QTranslucentWindowDesigner.DrawGrid">
      <summary>
            Gets or sets if the grid should be drawn in the designer
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QStringsOrderEditorControl">
      <summary>
            Defines the control for the QStringsOrderEditor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStringsOrderEditorControl.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStringsOrderEditorControl.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QStringsOrderEditorControl.ItemsString">
      <summary>
            Gets or sets the comma seperated string with items.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QShapePainterControl">
      <summary>
            Allows you to draw and edit a <see cref="T:Qios.DevSuite.Components.QShape" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.#ctor">
      <summary>
            Constructor, creates a new QShapePainterControl
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.ZoomToPoint(System.Single,System.Drawing.Point)">
      <summary>
            Zoom till zoomF and centers the specified point (in clientCoordinates).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.CenterPoint(System.Drawing.Point)">
      <summary>
            Centers the specified point (in clientCoordinates).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.CalculateZoomForFit">
      <summary>
            Calculates the Zoom needed to fit the complete shape.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.TranslatePixel(System.Drawing.Point)">
      <summary>
            Translates a pixel on a screen to a point on <see cref="P:Qios.DevSuite.Components.Design.QShapePainterControl.Shape" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.TranslatePixelRectangle(System.Drawing.Rectangle)">
      <summary>
            translates a rectangle on a screen to a rectangle on <see cref="P:Qios.DevSuite.Components.Design.QShapePainterControl.Shape" /></summary>
      <param name="rectangle">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.GetFirstShapeItemOnPixel(System.Drawing.Point,System.Single,Qios.DevSuite.Components.QShapeItemParts)">
      <summary>
            Gets the first shapeItem on that has a part the specified pixel. Margin indicates how far the point may lay off the pixel
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.GetShapeItemParts(Qios.DevSuite.Components.QShapeItem,System.Drawing.Point,System.Single,Qios.DevSuite.Components.QShapeItemParts,System.Boolean)">
      <summary>
            Gets the first QShapeItemPart of the item that is lying on the specied pixel with margin. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.SelectItem(Qios.DevSuite.Components.QShapeItem,Qios.DevSuite.Components.QShapeItemParts,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Selects the parts of the specified item
            </summary>
      <param name="item">The item to select, can be null</param>
      <param name="parts">The parts to select of the item.</param>
      <param name="append">Indicates if the selection must be apended or a new selection</param>
      <param name="resetAllOnNoItem">Indicates if all the selected items must be reset when no item is there</param>
      <param name="refresh">Indicates if it needs to refresh</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.SelectFirstItemAtPixel(System.Drawing.Point,System.Boolean,System.Boolean)">
      <summary>
            Selects the first item at the specified pixel. It first tries to select point parts
            and then Line parts
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.SelectAllItemsPointPartsAtPixelRectangle(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Selects all the items that have point parts in the specified rectangle
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles a MouseDown;
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles a mouse move
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles a mouse up
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden, handles the layout
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Handles the paint of a QShapePainterControl
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            Overridden, handles the keydown.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.OnActiveItemChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Design.QShapePainterControl.ActiveItemChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapePainterControl.OnSelectedItemsChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Design.QShapePainterControl.SelectedItemsChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Design.QShapePainterControl.ActiveItemChanged">
      <summary>
            Gets raised when the ActiveItem is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Design.QShapePainterControl.SelectedItemsChanged">
      <summary>
            Gets raised when the SelectedItems are changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapePainterControl.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            Alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapePainterControl.ActiveItem">
      <summary>
            Gets the Active Item
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapePainterControl.ActiveItemPart">
      <summary>
            Gets the Active Part of the ActiveItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapePainterControl.SelectedItems">
      <summary>
            Gets the selectedItem;
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapePainterControl.Zoom">
      <summary>
            Gets or sets the zoom factor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapePainterControl.ShowItemNumbers">
      <summary>
            Gets or sets if the item numbers should be shown
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapePainterControl.ZoomStep">
      <summary>
            Gets or sets the stepSize for zooming
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapePainterControl.Shape">
      <summary>
            Gets or sets the Shape that is currently drawn.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QRibbonLaunchBarHostDesigner">
      <summary>
            Defines the designer for QRibbonLaunchBarHost.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonLaunchBarHostDesigner.GetCreationTypes">
      <summary>
            Overridden. Gets the types this designer can create.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonLaunchBarHostDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary>
            Overridden. Handles the opening of the contextMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonLaunchBarHostDesigner.LaunchBarHost">
      <summary>
            Gets the launchBarHost this designer is assigned to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonLaunchBarHostDesigner.DesignerHost">
      <summary>
            Gets the designer host.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonLaunchBarHostDesigner.Verbs">
      <summary>
            Gets the verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QMarkupTextStyleConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QMarkupTextStyle" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarkupTextStyleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QMarkupTextStyle" /> to the specified destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarkupTextStyleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> to the given destinationType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QMainMenuDesigner">
      <summary>
            Defines a Designer for the <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QExplorerGroupItemCollectionEditor">
      <summary>
            Defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" /> on a <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerGroupItemCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor. Creates a new QMenuItemCollectionEditor.
            </summary>
      <param name="type">The Type to create this Editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerGroupItemCollectionEditor.CreateCollectionForm">
      <summary>
            Overridden. Returns an instance of the used CollectionForm.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerGroupItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Overridden. Edits the specified <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerGroupItemCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerGroupItemCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerGroupItemCollectionEditor.CreateInstance(System.Type)">
      <summary>
            Creates a new instance of a given Type. The type should be in the list that
            <see cref="M:Qios.DevSuite.Components.Design.QExplorerGroupItemCollectionEditor.CreateNewItemTypes" /> or <see cref="M:Qios.DevSuite.Components.Design.QExplorerGroupItemCollectionEditor.CreateCollectionItemType" /> returns.
            </summary>
      <param name="itemType">The Type that should be created</param>
      <returns>a new instance of the given type</returns>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeMenuDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QCompositeMenu" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeMenuDesigner.Verbs">
      <summary>
            Overridden. Gets the verbs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeMenuDesigner.AssociatedComponents">
      <summary>
            Overridden. Gets the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QCompositeMenu" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeMenuCodeSerializer">
      <summary>
            Defines the CodeDomSerializer for the <see cref="T:Qios.DevSuite.Components.QCompositeMenu" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuCodeSerializer.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuCodeSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Serializes the <see cref="T:Qios.DevSuite.Components.QCompositeMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuCodeSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Deserializes the <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QDesignerHelper">
      <summary>
            A helper class for QDesigners.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QDesignerHelper.NotifyDesignerOfCreation(System.Object,System.Boolean,System.IServiceProvider)">
      <summary>
            Tries to notify the Designer of the primary selection that this editor is about to create a component.
            </summary>
      <param name="creatingComponent">Should contain the object that is executing the creation.</param>
      <param name="value">should contain whether it starts creating or is finished</param>
      <param name="provider">contains the provider where to select services from</param>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.PropDefaultItemConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.PropCustomizeItemConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.PropShowMoreItemConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.PropDrawShape">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.PropResizeBehavior">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.CreateAppearance">
      <summary>
            Creates the LaunchBarAppearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested property count.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.CreateItemConfiguration">
      <summary>
            Creates the GroupAppearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. Gets the paddings. This depends on whether the shape must be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Returns the default content layout order.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.DefaultItemConfiguration">
      <summary>
            Gets the configuration for <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> used on this bar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.CustomizeItemConfiguration">
      <summary>
            Gets the configuration for the customize item used on this bar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.ShowMoreItemConfiguration">
      <summary>
            Gets the configuration for the show more items item used on this bar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.DrawShape">
      <summary>
            Gets or sets whether the shape should be drawn. When this is undefined it is based on <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.DrawShape" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.ResizeBehavior">
      <summary>
            Gets or sets the custom behavior that must be applied when the items doesn't fit. If this is turned off default resize behaviors like scrolling can be applied.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarAppearance">
      <summary>
            Contains the appearance for <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeGroupAppearance">
      <summary>
            Contains the appearance for QCompositeGroupItems.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroupAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarResizeBehavior">
      <summary>
            Defines possible resize behaviors for a QRibbonPanel
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarResizeBehavior.None">
      <summary>
            No custom resizing is done.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarResizeBehavior.ShowMoreItem">
      <summary>
            Shows the ShowMoreItem and hides the items that don't fit.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripPainter">
      <summary>
            This class is responsable for painting and calculating the sizes of <see cref="T:Qios.DevSuite.Components.QTabStrip" /> and <see cref="T:Qios.DevSuite.Components.QTabButton" />.
            If you want to do some additional painting, override this class, implement the changes and assign it to the <see cref="P:Qios.DevSuite.Components.QTabStrip.Painter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.#ctor">
      <summary>
            Constructor. Creates a new QTabStripPainter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.PutLastCalculatedAvailableButtonsSize(System.Drawing.Size)">
      <summary>
            Sets the last calculated available buttons size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.PutLastCalculatedButtonsSize(System.Drawing.Size)">
      <summary>
            Sets the last calculated complete size of all the visible buttons.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.PutLastCalculatedStripContentBounds(System.Drawing.Rectangle)">
      <summary>
            Sets the last calculated content bounds of the strip (with padding).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.PutLastCalculatedButtonAreaBounds(System.Drawing.Rectangle)">
      <summary>
            Sets the last calculated button area bounds of the strip (with margin).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.CalculateNavigationAreaSize(Qios.DevSuite.Components.QTabStrip,System.Boolean)">
      <summary>
            Calculates and returns the size of the <see cref="T:Qios.DevSuite.Components.QTabStripNavigationArea" /> of the <see cref="T:Qios.DevSuite.Components.QTabStrip" /></summary>
      <param name="tabStrip">Defines the TabStrip the NavigationArea must be calculated for</param>
      <param name="inflateWithMargin">Indcates if the size should be inflated with the <see cref="P:Qios.DevSuite.Components.QTabStripConfiguration.NavigationAreaMargin" /> property</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.CalculateNavigationAreaLayout(Qios.DevSuite.Components.QTabStrip,System.Drawing.Size)">
      <summary>
            Calculates the layout of the NavigationArea buttons like the scroll and close buttons.
            This method should set the various locations and of the navigationArea.
            </summary>
      <param name="tabStrip">The tabStrip to calculate the NavigationArea for</param>
      <param name="tabStripSize">The size of the tabStrip</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.CalculateButtonSize(Qios.DevSuite.Components.QTabButton,System.Drawing.Graphics)">
      <summary>
            Calculates the size of a <see cref="T:Qios.DevSuite.Components.QTabButton" />.
            </summary>
      <param name="tabButton">Contains the QTabButton to calculate the size for.</param>
      <param name="graphics">Contains graphics that can be used to measure text on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.CalculateButtonContentSize(Qios.DevSuite.Components.QTabButton,System.Drawing.Graphics)">
      <summary>
            Calculates the size of the content of a <see cref="T:Qios.DevSuite.Components.QTabButton" />.
            </summary>
      <param name="tabButton">Contains the QTabButton to calculate the size for.</param>
      <param name="graphics">Contains graphics that can be used to measure text on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.CalculateStripLayout(Qios.DevSuite.Components.QTabStrip,System.Drawing.Size,System.Drawing.Graphics)">
      <summary>
            Calculates the size of a Strip based on its configuration and sets the bounds of the buttons.
            </summary>
      <param name="tabStrip">Contains the QTabStrip which size must be calculated</param>
      <param name="availableSize">Contains the available size. Make sure you never override those maximums.</param>
      <param name="graphics">Contains graphics you can use to calculate textsizes</param>
      <remarks>
            When implementing this class, you should return your calculated strip size and set the <see cref="P:Qios.DevSuite.Components.QTabButton.Bounds" />
            property relative to the Strip.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.DrawTabStrip(Qios.DevSuite.Components.QTabStrip,System.Drawing.Graphics)">
      <summary>
            Draws a <see cref="T:Qios.DevSuite.Components.QTabStrip" /></summary>
      <param name="tabStrip">Contains the tabStrip to draw.</param>
      <param name="graphics">Contains the graphics to draw on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.DrawTabButton(Qios.DevSuite.Components.QTabButton,System.Drawing.Graphics)">
      <summary>
            Draws a <see cref="T:Qios.DevSuite.Components.QTabButton" /></summary>
      <param name="button">Contains the button to draw.</param>
      <param name="graphics">Contains the graphics to draw on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.DrawTabButtonShade(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonAppearance,System.Drawing.Rectangle,System.Windows.Forms.DockStyle,System.Drawing.Color,System.Drawing.Graphics)">
      <summary>
            Draws the shade of a QTabButton.
            </summary>
      <param name="button">The button to draw the shade for</param>
      <param name="buttonAppearance">The appearance of that button</param>
      <param name="buttonBounds">The bounds of that button</param>
      <param name="dockStyle">The dockstyle of the button.</param>
      <param name="color">The color of the shade</param>
      <param name="graphics">The graphics to draw on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.DrawTabButtonBackground(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonConfiguration,Qios.DevSuite.Components.QTabStripConfiguration,Qios.DevSuite.Components.QTabButtonAppearance,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DockStyle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Graphics)">
      <summary>
            Draws the background of a <see cref="T:Qios.DevSuite.Components.QTabButton" />.
            </summary>
      <param name="button">Contains the button to draw</param>
      <param name="buttonConfiguration">Contains the buttonConfiguration to use</param>
      <param name="stripConfiguration">Contains the stripConfiguratoin to use</param>
      <param name="buttonAppearance">Contains the buttonAppearance to use</param>
      <param name="buttonBounds">Contains the bounds (relative to the control) of the button.</param>
      <param name="controlAndButtonBounds">Contains the bounds of the button and the control. This should be used when useControlBackground is true.</param>
      <param name="dockStyle">Contains the dockstyle of the button.</param>
      <param name="backColor1">Contains the first background color</param>
      <param name="backColor2">Contains the second background color</param>
      <param name="borderColor">Contains the border color</param>
      <param name="graphics">Contains the graphics to draw on</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.DrawTabButtonContent(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonConfiguration,System.String,System.Drawing.Icon,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>
            Draws the contents of a <see cref="T:Qios.DevSuite.Components.QTabButton" />.
            </summary>
      <param name="button">Contains the button that must be drawn</param>
      <param name="buttonConfiguration">Contains the configuration to use</param>
      <param name="text">Contains the text to draw</param>
      <param name="icon">The icon to draw</param>
      <param name="replaceColor">Contains the color that should be replaced in the icon by replaceColorWith</param>
      <param name="replaceColorWith">Contains the color to replace the replaceColor with in the icon</param>
      <param name="textColor">Contains the color of the text</param>
      <param name="font">The font to use to draw the text</param>
      <param name="bounds">The complete bounds</param>
      <param name="graphics">Contains the graphics to draw on</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.GetButtonAndControlBounds(Qios.DevSuite.Components.QTabButton)">
      <summary>
            Gets the bounds of the Button with the bounds of the Control that the <see cref="T:Qios.DevSuite.Components.QTabButton" /> is used for. This is used for when the background of the
            Control is extended on the QTabButton.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.DrawNavigationArea(Qios.DevSuite.Components.QTabStrip,Qios.DevSuite.Components.QTabStripPaintParams,System.Drawing.Graphics)">
      <summary>
            Draws the <see cref="T:Qios.DevSuite.Components.QTabStripNavigationArea" /> on the <see cref="T:Qios.DevSuite.Components.QTabStrip" />.
            </summary>
      <param name="tabStrip">Contains the tabStrip to draw the NavigationArea for</param>
      <param name="stripPaintParams">Contains the PaintParams to use.</param>
      <param name="graphics">Contains the Graphics to draw on</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.Dispose">
      <summary>
            Disposes the Painter
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.Dispose(System.Boolean)">
      <summary>
            Disposes this painter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripPainter.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPainter.LastCalculatedAvailableButtonsSize">
      <summary>
            Gets the last calculated available buttons size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPainter.Win32Window">
      <summary>
            Gets or sets a Win32Window that is used to open or close ThemeData with when needed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPainter.WindowsXPThemeHandle">
      <summary>
            Gets a possible WindowsXPTheme (for Win32 control 'TAB'). To use this the Win32Window property must be set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPainter.LastCalculatedButtonsSize">
      <summary>
            gets the last calculated complete size of all the visible buttons
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPainter.LastCalculatedStripContentBounds">
      <summary>
            Gets the last calculated content bounds of the strip (with padding).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPainter.LastCalculatedButtonAreaBounds">
      <summary>
            Gets the last calculated button area bounds of the strip (with margin).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPainter.StringFormat">
      <summary>
            Returns the StringFormat that is used to draw the text on the buttons
            and to calculate the size of the text on the buttons.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeWindowConfiguration">
      <summary>
            Defines configuration properties for QFloatingWindows.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingWindowConfiguration">
      <summary>
            Defines configuration properties for QFloatingWindows.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowConfiguration.PropInheritWindowsSettings">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowConfiguration.PropCloseOnMouseUp">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowConfiguration.PropCloseOnMouseDown">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowConfiguration.PropShowBackgroundShade">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowConfiguration.PropAnimateShowTime">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowConfiguration.PropAnimateShowType">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindowConfiguration.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindowConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindowConfiguration.Dispose">
      <summary>
            Disposes the Configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindowConfiguration.Dispose(System.Boolean)">
      <summary>
            Disposes this Configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingWindowConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QFloatingWindowConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QFloatingWindowConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of this configuration changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindowConfiguration.CloseOnMouseDown">
      <summary>
            Gets or sets whether the QFloatingWindow should be closed on a MouseDown event
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindowConfiguration.CloseOnMouseUp">
      <summary>
            Gets or sets whether the QFloatingWindow should be closed on a MouseUp event
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindowConfiguration.ShowBackgroundShade">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QFloatingWindow" /> should contain a BackgroundShade. This is ignored when the <see cref="P:Qios.DevSuite.Components.QFloatingWindowConfiguration.InheritWindowsSettings" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindowConfiguration.AnimateShowTime">
      <summary>
            Gets or sets the time (in milliseconds) that is used for animation when showing the window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindowConfiguration.AnimateShowType">
      <summary>
            Gets or sets the type of animation to use when showing. This is ignored when the <see cref="P:Qios.DevSuite.Components.QFloatingWindowConfiguration.InheritWindowsSettings" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingWindowConfiguration.InheritWindowsSettings">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QFloatingWindow" /> should inherit WindowsSettings like drawing a shade or animating a window.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeWindowConfiguration.PropShapeWindow">
      <summary>Contains the property index</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeWindowConfiguration.PropUseSizeAsRequestedSize">
      <summary>Contains the property index</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeWindowConfiguration.CurrentPropertyCount">
      <summary>Contains the property count in this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeWindowConfiguration.TotalPropertyCount">
      <summary>Contains the total property count</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindowConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeWindowConfiguration.GetRequestedCount">
      <summary>
            Overridden, gets the requested property count
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindowConfiguration.ShapeWindow">
      <summary>
            Determines if the window should be shaped to the shape of the QComposite
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeWindowConfiguration.UseSizeAsRequestedSize">
      <summary>
            Indicates whether the size of the window should be used as the base for the calculation of the new window size.
            Setting this to true makes sure that when a the composite on a window can stretch or shrink, 
            the composite will be stretched or shrunken to the requested size.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeLargeMenuItem">
      <summary>
            Defines a <see cref="T:Qios.DevSuite.Components.QCompositeMenuItem" /> that contains a description. Besides that the Title, Control and Description
            are packed into a Content part.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMenuItem">
      <summary>
            Defines an item that resembles a QMenuItem in a <see cref="T:Qios.DevSuite.Components.QComposite" />. The QCompositeMenuItem is configured to
            look like a QMenuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.#ctor">
      <summary>
            Constructor. Builds a QCompositeItem structure based on a QMenuItem to represent a row in a QCompositeItem with the table layout
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.SecureTitlePart">
      <summary>
            Secures the TitlePart.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.SecureControlPart">
      <summary>
            Secures the Control part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.SecureContentPart(Qios.DevSuite.Components.QCompositeMenuItemContentType,System.Boolean)">
      <summary>
            Makes sure the correct content part is added.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.Clone">
      <summary>
            Overridden clones the object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.CreateControl">
      <summary>
            Creates a possible control for this item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeMenuItem
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.SetChildPartsVisibility(Qios.DevSuite.Components.QPartLayoutStage)">
      <summary>
            Sets the visibility of the child items based on the settings of the QCompositeMenuItem
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.GetState(Qios.DevSuite.Components.QItemStates,System.Boolean)">
      <summary>
            Overridden. Gets the ItemStates.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.ShouldSerializeIcon">
      <summary>
            Returns whether the Icon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.ResetIcon">
      <summary>
            Resets the Icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.ShouldSerializeDisabledIcon">
      <summary>
            Returns whether the Icon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.ResetDisabledIcon">
      <summary>
            Resets the Icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.ShouldSerializeCheckedIcon">
      <summary>
            Returns whether the Icon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.ResetCheckedIcon">
      <summary>
            Resets the Icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.HandleMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles additional mouse down events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.HandleMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles additional mouse move events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItem.HandleMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles additional mouse up events.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.Template">
      <summary>
            Overridden. This item can not be created from a Template.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.DefaultContentType">
      <summary>
            Gets the default content type.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.ContentType">
      <summary>
            Gets or sets the used content type. This is Title by default.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.DropDownSplitPart">
      <summary>
            Gets the DropDownSplit part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.DropDownButtonPart">
      <summary>
            Gets the DropDown part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.IconPart">
      <summary>
            Gets the Icon part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.CurrentContentPart">
      <summary>
            Contains the current ContentPart.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.TitlePart">
      <summary>
            Gets the Title part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.ShortcutPart">
      <summary>
            Gets the Shortcut part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.ControlPart">
      <summary>
            Gets the Control part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.ColorHost">
      <summary>
            Overridden. Gets or sets the ColorHost. It also sets the colorHost of the childObjects when it was set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.Items">
      <summary>
            Gets the collection of CompositeItems of this QCompositeItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.DesignablePartsCollection">
      <summary>
            Overridden. It is not possible to design the child items of a QcompositeMenuItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.Checked">
      <summary>
            Gets or sets whether the QCompositeMenuItem is checked. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.Shortcut">
      <summary>
            Gets or sets the Shortcut of the QCompositeItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.Icon">
      <summary>
            Gets or sets the Icon of the QCompositeMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.UsedIcon">
      <summary>
            Gets the actually used icon of the QCompositeMenuItem. This depends on various icons and the state of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.IconResourceName">
      <summary>
            Gets or sets a possible resource name to load the Icon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.IconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.DisabledIcon">
      <summary>
            Gets or sets the Icon of the QCompositeMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.DisabledIconResourceName">
      <summary>
            Gets or sets a possible resource name to load the Icon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.DisabledIconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.CheckedIcon">
      <summary>
            Gets or sets the Icon of the QCompositeMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.CheckedIconResourceName">
      <summary>
            Gets or sets a possible resource name to load the Icon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.CheckedIconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.Title">
      <summary>
            Gets or sets the title of the QCompositeItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.DisplayedTitle">
      <summary>
            Gets the DisplayedTitle. This is the Title without a possible ampesant character.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.ControlSize">
      <summary>
            Gets or sets the prefered size of the Control. This is maintained separatly because when the item is stretched
            the size changes constantly and gets serialized in design. This property is taken over from the control
            when the hierarchy is not initializing.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItem.Control">
      <summary>
            Gets or sets a possible Control that is displayed on this item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.SecureContentPart(Qios.DevSuite.Components.QCompositeMenuItemContentType,System.Boolean)">
      <summary>
            Overridden. Secures the content part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.Clone">
      <summary>
            Overridden. Handles the clone
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.SetChildPartsVisibility(Qios.DevSuite.Components.QPartLayoutStage)">
      <summary>
            Overridden. Sets the ChildParts Visibility.
            </summary>
      <param name="layoutStage">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.Description">
      <summary>
            Gets or sets the description of the item
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.DescriptionPart">
      <summary>
            Gets the Description part
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration">
      <summary>
            Defines the configuration for a LargeMenuItem
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.PropContentConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested property count.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.CreateTitleConfiguration">
      <summary>
            Overridden. These methods return null, new ones are provided via the ContentConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.CreateControlConfiguration">
      <summary>
            Overridden. These methods return null, new ones are provided via the ContentConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden. Gets the DefaultContentPartLayoutOrder
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.TitleConfiguration">
      <summary>
            Overridden. Gets the Title Configuration. This returns the TitleConfiguration from the ContentConfiguration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.ControlConfiguration">
      <summary>
            Overridden. Gets the Control Configuration. This returns the TitleConfiguration from the ContentConfiguration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemConfiguration.ContentConfiguration">
      <summary>
            Gets the configuration of the content.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration">
      <summary>
            Defines the configuration for a LargeMenuItem
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.PropTitleConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.PropDescriptionConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.PropControlConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested property count.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden. Gets the default content part layout order.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.TitleConfiguration">
      <summary>
            Gets the configuration of the title.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.DescriptionConfiguration">
      <summary>
            Gets the configuration of the description.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeLargeMenuItem.QCompositeLargeMenuItemContentConfiguration.ControlConfiguration">
      <summary>
            Gets the configuration of the Control.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeControl">
      <summary>
            Defines a control for combining and drawing visual elements such as textparts and iconparts.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQSupportInitialize">
      <summary>
            Defines the interface for classes that implement <see cref="T:System.ComponentModel.ISupportInitialize" /> with an additional property
            that gets whether the class is initializing.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQSupportInitialize.IsInitializing">
      <summary>
            Gets whether the class is initializing
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.CreateComposite">
      <summary>
            Creates the Composite.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.CreateCompositeConfiguration">
      <summary>
            Creates a possible composite configuration. The default implementation returns null and the composite is responsible
            for providing the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.CreateToolTipConfigurationInstance">
      <summary>
            Overridden. Creates the toolTip configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.CreateBalloon">
      <summary>
            Creates the balloon used for tooltips
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.HandleChildObjectChanged(System.Boolean,System.Drawing.Rectangle)">
      <summary>
            Handles a change of the childObjects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.CreateAppearanceInstance">
      <summary>
            Overridden. Creates the Appearance instance. Overridden to return null. The QCompositeControl uses the appearance
            of its Configuration object to match the structure of the QCompositeItems.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ShouldSerializeChildCompositeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QCompositeControl.ChildCompositeColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ResetChildCompositeColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QCompositeControl.ChildCompositeColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnEnabledChanged(System.EventArgs)">
      <summary>
            Raises the EnabledChanged event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnCompositeKeyPress(Qios.DevSuite.Components.QCompositeKeyboardCancelEventArgs)">
      <summary>
            Raises the CompositeKeyPress event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnSelectedItemChanged(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the SelectedItemChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnItemSelected(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeControl.ItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnItemExpanded(Qios.DevSuite.Components.QCompositeExpandedEventArgs)">
      <summary>
            Raises the ItemExpanded event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnItemExpanding(Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs)">
      <summary>
            Raises the ItemExpanding event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnItemCollapsed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the ItemCollapsed event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnItemCollapsing(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the ItemCollapsing event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnPaintItem(Qios.DevSuite.Components.QCompositePaintStageEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeControl.PaintItem" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnItemActivating(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeControl.ItemActivating" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeControl.ItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ShouldSerializeConfiguration">
      <summary>
            Gets whether the Configuration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ResetConfiguration">
      <summary>
            Resets the Configuration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ShouldSerializeChildCompositeConfiguration">
      <summary>
            Gets whether the ChildCompositeConfiguration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ResetChildCompositeConfiguration">
      <summary>
            Resets the ChildCompositeConfiguration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ShouldSerializeChildWindowConfiguration">
      <summary>
            Gets whether the ChildWindowConfiguration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ResetChildWindowConfiguration">
      <summary>
            Resets the ChildWindowConfiguration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.SuspendChangeNotification">
      <summary>
            Suspends any change notification. Now no redraw or layout will occur. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ResumeChangeNotification(System.Boolean)">
      <summary>
            Resumes any layout notification suspended by <see cref="M:Qios.DevSuite.Components.QCompositeControl.SuspendChangeNotification" />. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ResumeLayout(System.Boolean)">
      <summary>
            New implementation for ResumeLayout.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.SimulateFocus">
      <summary>
            Gets a simulated focus.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.LoseSimulatedFocus">
      <summary>
            Loses the simulated focus set by SimulateFocus. It only loses the simulated focus when the 
            control doesn't have the 'real' focus.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnGotFocus(System.EventArgs)">
      <summary>
            Handles a Focus.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnLostFocus(System.EventArgs)">
      <summary>
            Handes a Focus lost.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ProcessKeyMessage(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles key messages when focused.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>
            Overridden. Handles key messages when focused.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles WindowMessages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseWheel event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseMove event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnMouseEnter(System.EventArgs)">
      <summary>
            Handles the MouseEnter event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnMouseLeave(System.EventArgs)">
      <summary>
            Handles the MouseLeave event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseDown event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseUp event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the background of the control
            </summary>
      <param name="pevent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Lays out the control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.Dispose(System.Boolean)">
      <summary>
            Overridden. Handles a dispose.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.BeginInit">
      <summary>
            Begins the initialization process
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeControl.EndInit">
      <summary>
            Ends the initialization process
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.CompositeKeyPress">
      <summary>
            Gets raised when the QComposite is about to handle navigation keys that are pressed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.SelectedItemChanged">
      <summary>
            Gets raised when the selected item is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.ItemSelected">
      <summary>
            Gets raised when the QCompositeItemBase is selected
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.ItemExpanded">
      <summary>
            Gets raised when the item is expanded
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.ItemExpanding">
      <summary>
            Gets raised when the child container is expanding
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.ItemCollapsing">
      <summary>
            Gets raised when the item is collapsing
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.ItemCollapsed">
      <summary>
            Gets raised when the item is collapsed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.PaintItem">
      <summary>
            Gets raised when a layer of the QCompositeItem is painted
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.ItemActivating">
      <summary>
            Gets raised when the QCompositeItemBase is activating
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeControl.ItemActivated">
      <summary>
            Gets raised when the QCompositeItemBase is activated
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.Controls">
      <summary>
            New. Contains the controls of the QCompositeControl. It is new because this property does not get serialized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.Focusable">
      <summary>
            Gets or sets whether this QCompositeControl is focusable.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.ShortcutScope">
      <summary>
            Gets or sets the scope of the shortcuts when HandleShortcutKeys is true
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.HandleAltKey">
      <summary>
            Gets or sets whether the Alt key must be handled when the control doesn't have the focus.
            When you are adding this control the a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" /> as an AdditionalNavigationControl, don't set
            this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.HandleShortcutKeys">
      <summary>
            Gets or sets whether the Shortcut keys must be handled when the control doesn't have the focus.
            When you are adding this control the a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" /> as an AdditionalNavigationControl, don't set
            this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.PaintTransparentBackground">
      <summary>
            Gets or sets whether a transparent background must be painted. When this is false the background color of the parent is painted on this Control.
            This can increase performance. Set this to false when the Control is situated on a Parent with a solid background or when the control has a rectangular filled out shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.HasSimulatedFocus">
      <summary>
            Gets or sets whether this control must take over the outersize of the calculated composite.
            Besides that, when this is set, the contents of the composite uses all the space it needs.
            The composite itself shrinks or stretches when needed and is allowed to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.AssociatedComponents">
      <summary>
            Gets the associated components.
            </summary>
      <remarks>
            The list instance shouldn't be the same as the the Items instance, because overrides may add new designable items
            to the list.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.Composite">
      <summary>
            Gets the QComposite component. It is not recommended to use or configure this component directly. 
            All configuration should be done by the QCompositeControl or QCompositeWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.IsPerformingLayout">
      <summary>
            Gets whether this control is performing layout
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.Appearance">
      <summary>
            Overridden. Gets the QAppearance for the QControl. Overridden to return null. The QCompositeControl uses the appearance
            of its Configuration object to match the structure of the QCompositeItems.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.ChildCompositeColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used for child composites.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.ToolTipText">
      <summary>
            Gets or sets the ToolTipText. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            The ToolTip, see ToolTipConfiguration, must be enabled for this to show.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.BackColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarBackground1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.BackColor2PropertyName">
      <summary>
            Overridden. Returns the ToolBarBackground2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.BorderColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarBorderColor from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.Items">
      <summary>
            Gets the collection of QCompositeItems of this QComposite. This are the items that can be desigend.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.Configuration">
      <summary>
            Contains the Configuration for the QComposites.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.ChildCompositeConfiguration">
      <summary>
            Contains the ChildCompositeConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.ChildWindowConfiguration">
      <summary>
            Contains the ChildWindowConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.ChangeNotificationSuspended">
      <summary>
            Gets how many times the change is suspended.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeControl.IsInitializing">
      <summary>
            Gets whether this control is initializing
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppearanceType">
      <summary>
            This enumeration is used by controls that can inherit their <see cref="T:Qios.DevSuite.Components.QAppearanceBase" /> from the parent control.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceType.Custom">
      <summary>
            When this value is used, the control uses its <b>Custom</b> QAppearance property.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceType.Inherited">
      <summary>
            When this value is used, the control uses the QAppearance property from its parent.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMetallicAppearanceDirection">
      <summary>
            Defines the direction for a metallic appearance.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMetallicAppearanceDirection.Horizontal">
      <summary>
            Metallic goes horizontal.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMetallicAppearanceDirection.Vertical">
      <summary>
            Metallic goes vertical.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QObjectClonerConstructOptions">
      <summary>
            Defines options for special cloner constructors. This enum is primary used
            to indicate that the constructor is for the QObjectCloner.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QObjectClonerConstructOptions.None">
      <summary>
            No options.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMargin">
      <summary>
            Is used by controls to maintain margin values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructor. Creates a QMargin instance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.ToMargin">
      <summary>
            Converts this to a QMargin
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.InflateRectangleWithMargin(System.Drawing.Rectangle,System.Boolean,Qios.DevSuite.Components.QContentOrientation)">
      <summary>
            Returns a new rectangle that is inflated by this QMargin.
            </summary>
      <param name="rectangle">The rectangle to inflate.</param>
      <param name="inflate">Defines if the rectangle must inflate or deflate.</param>
      <param name="orientation">Indicates for which orientation it must be inflated
            When Horizontal the Left is added by the Left, Top by Top. When VerticalDown the Bottom is Added by the Left
            and the Left is added by the top (like rotated 90 degrees), etc</param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.InflateNegativeMargins(System.Drawing.Rectangle)">
      <summary>
            Inflates the rectangle with the absolute values of the negative margin
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.InflateRectangleWithMargin(System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>
            Returns a new rectangle that is inflated by this QMargin.
            </summary>
      <param name="rectangle">The rectangle to inflate.</param>
      <param name="inflate">Defines if the rectangle must inflate or deflate.</param>
      <param name="horizontal">Defines whether the calculation must be for the horizontal orientation.
            When true the Left is added by the Left, Top by Top. When false the Bottom is Added by the Left
            and the Left is added by the top (like rotated 90 degrees)</param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.InflateSizeWithMargin(System.Drawing.Size,System.Boolean,Qios.DevSuite.Components.QContentOrientation)">
      <summary>
            Returns a new size that is inflated by this QMargin.
            </summary>
      <param name="size">The size to inflate.</param>
      <param name="inflate">Indicates if the size must be inflated or deflated.</param>
      <param name="orientation">Indicates for which orientation it must be inflated
            When Horizontal the Horizontal is added by the Width, Vertical by Height. When VerticalDown or VerticalUp
            the Width is added bij Vertical, etc.
            </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.InflateSizeWithMargin(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>
            Returns a new size that is inflated by this QMargin.
            </summary>
      <param name="size">The size to inflate.</param>
      <param name="inflate">Indicates if the size must be inflated or deflated.</param>
      <param name="horizontal">Defines whether the calculation must be for the horizontal orientation.
            When true the Horizontal is added by the Width. When false Vertical is added by the Width
            (like rotated 90 degrees)</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.InflateRectangleWithMargin(System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.DockStyle)">
      <summary>
            Returns a new rectangle that is inflated by this QMargin.
            </summary>
      <param name="rectangle">The rectangle to inflate.</param>
      <param name="inflate">Indicates if the rectangle must be inflated or deflated.</param>
      <param name="dockStyle">Indicates the dockStyle to inflate this padding for.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.InflateSize(System.Drawing.Size,Qios.DevSuite.Components.IQMargin[],System.Boolean,System.Boolean)">
      <summary>
            Inflates (or deflates) a size with a list of IQMargin implementations.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.InflateRectangle(System.Drawing.Rectangle,Qios.DevSuite.Components.IQMargin[],System.Boolean,System.Windows.Forms.DockStyle)">
      <summary>
            Inflates (or deflates) a rectangle with a list of IQMargin implementations.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.SumMarings(Qios.DevSuite.Components.IQMargin[])">
      <summary>
            Sums the margins and returns one total margin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.MaxMargins(Qios.DevSuite.Components.QMargin[])">
      <summary>
            Gets the maximum left, right, bottom and top of the specified margins.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.Equals(System.Object)">
      <summary>
            Overridden. Return whether this QMargin is equal to obj.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMargin.GetHashCode">
      <summary>
            Overridden. Returns a hashcode for this QMargin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMargin.Empty">
      <summary>
            Gets the empty QMargin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMargin.Left">
      <summary>
            Gets or sets the Left margin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMargin.Top">
      <summary>
            Gets or sets the Top margin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMargin.Right">
      <summary>
            Gets or sets the Right margin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMargin.Bottom">
      <summary>
            Gets or sets the Bottom margin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMargin.Vertical">
      <summary>
            Gets the Bottom and Top margin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMargin.Horizontal">
      <summary>
            Gets the Left and Right margin.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFastPropertyBag">
      <summary>
            Defines a propertyBag that is faster than <see cref="T:Qios.DevSuite.Components.QPropertyBag" />. It uses an integer based array instead of a HashTable.
            It is used by several classes to store properties and their default values in. It uses <see cref="P:Qios.DevSuite.Components.QFastPropertyBag.BaseProperties" />
            to retrieve the base value from if the value for this bag is not set.
            </summary>
      <remarks>
            Besure to cal
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.#ctor(System.Int32)">
      <summary>
            Creates a new PropertyCollection with the specified size. The size is not changed when needed anymore.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.SuspendChangeNotification">
      <summary>
            Suspends any change notification. Now no redraw or layout will occur. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.ResumeChangeNotification(System.Boolean)">
      <summary>
            Resumes any layout notification suspended by <see cref="M:Qios.DevSuite.Components.QFastPropertyBag.SuspendChangeNotification" />. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.Clone">
      <summary>
            Clones the object
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.SetBaseProperties(Qios.DevSuite.Components.QFastPropertyBag,System.Boolean,System.Boolean)">
      <summary>
            Sets the baseProperties to the specified baseProperties. setChildPropertyBags indicates
            if the baseProperties of any containing IQPropertyBagHosts must be set to its corresponding
            baseProperties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.SetBaseProperties(Qios.DevSuite.Components.QFastPropertyBag,System.Boolean)">
      <summary>
            Sets the baseProperties to the specified baseProperties. setChildPropertyBags indicates
            if the baseProperties of any containing IQPropertyBagHosts must be set to its corresponding
            baseProperties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.DefineResettableProperty(System.Int32,Qios.DevSuite.Components.IQResettableValue)">
      <summary>
            Defines a property with a resetable value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.DefineProperty(System.Int32,System.Object)">
      <summary>
            Defines a property on the specified index with default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.DefineProperty(System.Int32,System.Object,System.Object)">
      <summary>
            Defines a property with the specified value and default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.DefineProperty(System.Int32,System.Object,System.Object,System.Boolean)">
      <summary>
            Defines a property with the specified value and default value.
            </summary>
      <param name="index">Contains the index of the property. If the index already exists the property gets overridden.</param>
      <param name="value">Contains the value of the property. If this is null the base Property is returned. If there is no base Property, the defaultValue is returned.</param>
      <param name="defaultValue">Contains the defaultValue of this property</param>
      <param name="returnBasePropertyWhenNull">
            Indicates whether this property must return the base Property when null (if there is a base Property ofcourse).
            Default this is true. When it is false or there are no base Properties the defaultValue is returned.
            </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.DefineProperty(System.Int32,System.Object,System.Object,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Defines a property with the specified value and default value.
            </summary>
      <param name="index">Contains the index of the property. If the index already exists the property gets overridden.</param>
      <param name="value">Contains the value of the property. If this is null the base Property is returned. If there is no base Property, the defaultValue is returned.</param>
      <param name="defaultValue">Contains the defaultValue of this property</param>
      <param name="replaceValue">Indicates whether the value must be replaced with the property already exists</param>
      <param name="replaceDefaultValue">Indicates whether the default value must be replaced with the property already exists</param>
      <param name="returnBasePropertyWhenNull">
            Indicates whether this property must return the base Property when null (if there is a base Property ofcourse).
            Default this is true. When it is false or there are no base Properties the defaultValue is returned.
            </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.GetProperty(System.Int32)">
      <summary>
            Gets the property at the specified index. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.GetPropertyAsValueType(System.Int32)">
      <summary>
            Gets the property value type at the specified index. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.SetProperty(System.Int32,System.Object)">
      <summary>
            Sets the property at the specified index. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.ResetProperty(System.Int32)">
      <summary>
            Resets the property on the specified index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.GetDefaultValue(System.Int32)">
      <summary>
            Returns the default value of the specified property. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.GetDefaultValueAsValueType(System.Int32)">
      <summary>
            Returns the default value of the specified property. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.IsSetToDefaultValue(System.Int32)">
      <summary>
            Returns whether the property is set to its default value. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.IsDefined(System.Int32)">
      <summary>
            Returns whether a property is defined.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.IsValueSet(System.Int32)">
      <summary>
            Returns whether the value of the specified property is set. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.IsSetToDefaultValues">
      <summary>
            Gets whether the complete PropertyBag is set to default values
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.SetToDefaultValues">
      <summary>
            Sets the complete PropertyBag to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyBag.OnPropertyChanged(Qios.DevSuite.Components.QFastPropertyChangedEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QFastPropertyBag.PropertyChanged" /> event.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFastPropertyBag.Count">
      <summary>
            Gets the propertyCount
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFastPropertyBag.ChangeNotificationSuspended">
      <summary>
            Gets how many times the change is suspended.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QFastPropertyBag.PropertyChanged">
      <summary>
            This event gets raised when a property changes. The PropertyIndex of the QPropertyChangedEventArgs
            contains the index of the changed property. If <see cref="P:Qios.DevSuite.Components.QFastPropertyBag.BaseProperties" /> is changed,
            this index is -1.		
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFastPropertyBag.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            Alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QFastPropertyBag.BaseProperties">
      <summary>
            Gets or sets the BaseProperties, this is used to determine the default values.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFastPropertyChangedEventHandler">
      <summary>
            Defines the delegate for the <see cref="E:Qios.DevSuite.Components.QFastPropertyBag.PropertyChanged" /> event.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFastPropertyChangedEventArgs">
      <summary>
            Defines the EventArgs for the <see cref="E:Qios.DevSuite.Components.QFastPropertyBag.PropertyChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFastPropertyChangedEventArgs.#ctor(System.Int32)">
      <summary>
            Constructor, creates the eventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFastPropertyChangedEventArgs.PropertyIndex">
      <summary>
            Gets the index of the property that is changed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QButtonArea">
      <summary>
            Is used by several controls to maintain buttonstate variables.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonArea.#ctor(System.Windows.Forms.MouseButtons)">
      <summary>
            Creates a new QButtonArea.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonArea.SetState(Qios.DevSuite.Components.QButtonState,System.Windows.Forms.MouseEventArgs)">
      <summary>
            Sets the state and raises the ButtonStateChanged event handler. It copies the values of the MouseEventArgs when it is set
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonArea.SetState(Qios.DevSuite.Components.QButtonState,System.Windows.Forms.MouseEventArgs,System.Boolean)">
      <summary>
            Sets the state and raises the ButtonStateChanged event handler. It copies the values of the MouseEventArgs when it is set
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonArea.ListensToButton(System.Windows.Forms.MouseButtons)">
      <summary>
            Returns whether the specified button was a mouseButton the Area listens to.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonArea.HandleMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handes the MouseMove for this QButtonArea.
            </summary>
      <returns>True when the mouse move must not be handled further. Else false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonArea.HandleMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handes the MouseDown for this QButtonArea.
            </summary>
      <returns>True when the mouse down must not be handled further. Else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonArea.HandleMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handes the MouseUp for this QButtonArea.
            </summary>
      <returns>True when the mouse up must not be handled further. Else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonArea.HandleMouseLeave(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseLeave for this QButtonArea.
            </summary>
      <returns>
      </returns>
      <returns>True when the mouse leave must not be handled further. Else false.</returns>
    </member>
    <member name="E:Qios.DevSuite.Components.QButtonArea.ButtonStateChanging">
      <summary>
            Gets raised when the state of the buttonArea is about to change.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QButtonArea.ButtonStateChanged">
      <summary>
            Gets raised when the state of the buttonArea changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.ListensToButtons">
      <summary>
            Gets or sets to which mouseButtons this area listens.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.State">
      <summary>
            Gets or sets the State of the QButtonArea
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.ItemState">
      <summary>
            Gets the state of the QButtonArea as a <see cref="T:Qios.DevSuite.Components.QItemStates" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.Visible">
      <summary>
            Gets or sets whether this button area must behave visible or non visible.
            When not visible it never handles mouse events.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.Enabled">
      <summary>
            Gets or sets whether this button area responds to the mouse
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.Bounds">
      <summary>
            Gets or sets the Bounds of the QButtonArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.Size">
      <summary>
            Gets or sets the size of the buttonArea
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.RequestedSize">
      <summary>
            Gets or sets a possible requested size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.Location">
      <summary>
            Gets or sets the location of the buttonArea
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonArea.AdditionalData">
      <summary>
            Gets or sets the AdditionalData for this buttonArea.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QImageButtonArea">
      <summary>
            Is used by several controls to maintain buttonstate variables for an image button.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageButtonArea.#ctor(System.Windows.Forms.MouseButtons,System.Drawing.Image)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageButtonArea.Image">
      <summary>
            Gets or sets the image of the button 
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QButtonAreaEventArgs">
      <summary>
            Defines the EventArgs used by the QButtonArea class.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonAreaEventArgs.#ctor(Qios.DevSuite.Components.QButtonState,Qios.DevSuite.Components.QButtonState,System.Windows.Forms.MouseButtons,System.Int32,System.Int32)">
      <summary>
            Constructor, creates a new QButtonAreaEventArgs
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonAreaEventArgs.FromState">
      <summary>
            Gets or sets the FromState
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonAreaEventArgs.ToState">
      <summary>
            Gets or sets the ToState
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonAreaEventArgs.PressedButtons">
      <summary>
            Gets or sets the pressed mousebuttons
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonAreaEventArgs.X">
      <summary>
            Gets or sets the X coordinate.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QButtonAreaEventArgs.Y">
      <summary>
            Gets or sets the Y coordinate.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QButtonAreaEventHandler">
      <summary>
            Defines the event delegate for the QButtonAreaEvents.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.NativeMethods.TBBUTTON">
      <summary>
            Button of a ToolbarWindow32
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollablePartData">
      <summary>
            Defines a helper class for ScrollableParts.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPadding">
      <summary>
            Defines the interface for classes that implement a custom padding
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPadding.InflateSize(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>
            Inflates (or deflates) the specified size with the custom padding.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPadding.InflateRectangle(System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.DockStyle)">
      <summary>
            Inflates (or deflates) the specified rectangle with the custom padding.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPadding.ToPadding">
      <summary>
            Converts this to a QPadding.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartData.ScrollAreaTopIndex">
      <summary>Defines the index of the scroll area.</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartData.ScrollAreaLeftIndex">
      <summary>Defines the index of the scroll area.</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartData.ScrollAreaRightIndex">
      <summary>Defines the index of the scroll area.</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartData.ScrollAreaBottomIndex">
      <summary>Defines the index of the scroll area.</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.#ctor(Qios.DevSuite.Components.IQScrollablePart,Qios.DevSuite.Components.QCompositeScrollConfiguration)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.ScrollHorizontal(System.Int32,Qios.DevSuite.Components.QScrollablePartMethod,System.Boolean)">
      <summary>
            Scroll till the specified x coordinate is in the view or with the relative x amount. This can happen animated or not.
            </summary>
      <param name="xValue">The x value, how this value is interpretered is defined by the method.</param>
      <param name="method">
            Defines the method to scroll.
            This can be IntoView or relative.
            When IntoView, the xValue must contain the unscrolled value to scroll to.
            Otherwise xValue defines the relative amount (step) to scroll. This can be positive or negative.
            </param>
      <param name="animated">Indicates whether animation should be used</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.ScrollVertical(System.Int32,Qios.DevSuite.Components.QScrollablePartMethod,System.Boolean)">
      <summary>
            Scroll till the specified y coordinate is in the view or with the relative y amount. This can happen animated or not.
            </summary>
      <param name="yValue">The y value, how this value is interpretered is defined by the method.</param>
      <param name="method">
            Defines the method to scroll.
            This can be IntoView or relative.
            When IntoView, the yValue will be scrolled in to the view.
            Otherwise yValue defines the relative amount (step) to scroll. This can be positive or negative.
            </param>
      <param name="animated">Indicates whether animation should be used</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.ScrollIntoView(Qios.DevSuite.Components.IQPart)">
      <summary>
            Scrolls the specified part into the view. Whether it is animated or not is set by the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.ScrollIntoView(Qios.DevSuite.Components.IQPart,System.Boolean)">
      <summary>
            Scrolls the specified part into the view with or without animation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.ScrollIntoView(System.Drawing.Rectangle)">
      <summary>
            Scrolls the specified (unscrolled) bounds into the view with or without animation.
            </summary>
      <param name="bounds">Contains the unscrolled bounds</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.ScrollIntoView(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Scrolls the specified (unscrolled) bounds into the view.
            </summary>
      <param name="bounds">Contains the unscrolled bounds</param>
      <param name="animated">Indicates whether animation must be used</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.StopScrolling">
      <summary>
            Stops all the scrolling
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.StopScrollingHorizontal">
      <summary>
            Stops scrolling horizontal
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.StopScrollingVertical">
      <summary>
            Stops scrolling vertical
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.ClearCachedObjects">
      <summary>
            Clears the cached objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.ScrollAreaVisible(System.Windows.Forms.DockStyle)">
      <summary>
            Gets whether the scroll area is visible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.GetArea(System.Drawing.Point)">
      <summary>
            Gets the scrollArea at the specified location.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.HandleLayoutStage(Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Handles a layout stage. This makes the scroll buttons visible when needed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.HitTest(System.Int32,System.Int32)">
      <summary>
            Hit tests the specified point and returns whether it hits any scroll area.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.GetScrollCorrectedArea(System.Drawing.Point)">
      <summary>
            Gets the scroll corrected area.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.HandleMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the mouseMove. Returns whether something has changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.HandleMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseDown. Returns whether something has changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.HandleMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseUp. Returns whether something has changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.LayoutScrollAreas(System.Drawing.Rectangle)">
      <summary>
            Lays out the scroll areas in the specified rectangle
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.PaintScrollAreas(Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the scroll areas.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.InflateSize(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>
            Inflates the size with this as a QPadding.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.InflateRectangle(System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.DockStyle)">
      <summary>
            Inflates the rectangle with this as a QPadding.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.ToPadding">
      <summary>
            Creates a padding with the values for the scrollBars or buttons.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.GetDefaultCompositeScrollButtonColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object,Qios.DevSuite.Components.IQColorRetriever)">
      <summary>
            Gets the default color set for scroll buttons
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Gets the item ColorSet for the scrollButtons.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.IsFlagSet(Qios.DevSuite.Components.QScrollablePartFlags,Qios.DevSuite.Components.QScrollablePartFlags)">
      <summary>
            Gets whether the specified flag is set.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.SetFlag(Qios.DevSuite.Components.QScrollablePartFlags,Qios.DevSuite.Components.QScrollablePartFlags,System.Boolean)">
      <summary>
            Sets the flagToSet on the flagsToAdjust to value and returns the adjusted flags.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.Invalidate">
      <summary>
            Invalidates the scrollable part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ScrollOffset">
      <summary>
            Gets the ScrollOffset
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ScrollablePart">
      <summary>
            Gets the scrollable part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.DisplayParent">
      <summary>
            Tries to get the DisplayParent from the scrollable part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.Composite">
      <summary>
            Tries to get the composite from the scrollable part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.Configuration">
      <summary>
            Contains the configuration to use.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ScrollHorizontalVisible">
      <summary>
            Gets or sets whether horizontal scroll is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ScrollVerticalVisible">
      <summary>
            Gets or sets whether horizontal scroll is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ScrollWithBar">
      <summary>
            Gets or sets whether scrolling must occur with a bar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.IsAtHorizontalStart">
      <summary>
            Gets wether the scroll position is at the horizontal start.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.IsAtVerticalStart">
      <summary>
            Gets wether the scroll position is at the vertical start.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.IsAtHorizontalEnd">
      <summary>
            Gets wether the scroll position is at the horizontal end.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.IsAtVerticalEnd">
      <summary>
            Gets wether the scroll position is at the vertical end.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.IsScrollingAnimated">
      <summary>
            Indicates whether animated scrolling occurs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.HasVisibleScrollableAreas">
      <summary>
            Gets whether this data has any scrollable areas.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ScrollAreaTop">
      <summary>
            Gets the Top scroll area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ScrollAreaLeft">
      <summary>
            Gets the Left scroll area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ScrollAreaRight">
      <summary>
            Gets the Right scroll area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ScrollAreaBottom">
      <summary>
            Gets the Bottom scroll area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.HotArea">
      <summary>
            Gets or sets the current hot area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.PressedArea">
      <summary>
            Gets or sets the current pressed area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.ContentBounds">
      <summary>
            Gets the current bounds of the scrolled content in the ViewPort.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollablePartData.QScrollArea">
      <summary>
            Defines a scroll area
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.#ctor(Qios.DevSuite.Components.QScrollablePartData,System.Windows.Forms.DockStyle)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.Synchronize">
      <summary>
            Synchronizes the QScrollArea
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.ClearCachedObjects">
      <summary>
            Clears the cached objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.LayoutScrollArea(System.Drawing.Rectangle)">
      <summary>
            Lays out the scroll areas.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.PaintScrollArea(Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Draws the scroll area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.Dock">
      <summary>
            Gets the dockStyle
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.Configuration">
      <summary>
            Gets the configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.ButtonShape">
      <summary>
            Gets the button shape.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.RequestedWidth">
      <summary>
            Gets the requested width.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.RequestedHeight">
      <summary>
            Gets the requested Height.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.Bounds">
      <summary>
            Gets the bounds.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.ItemState">
      <summary>
            Gets or sets the state of the area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.Hot">
      <summary>
            Gets or sets whether the area is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.Pressed">
      <summary>
            Gets or sets whether the area is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.Disabled">
      <summary>
            Gets or sets whether the area is Disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.IsVisible">
      <summary>
            Gets whether this scroll area is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollablePartData.QScrollArea.RequestedSize">
      <summary>
            Gets the requested size.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollablePartMethod">
      <summary>
            Defines the method to maintain when using the scrolling functions.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartMethod.IntoView">
      <summary>
            Thie specified coordinates should be scrolled into the view.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartMethod.Relative">
      <summary>
            The specified amount defines the amount to scroll relative from its current position.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollablePartScrollStage">
      <summary>
            Defines scrolling stages.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartScrollStage.ScrollingStarted">
      <summary>
            The scrolling is started animated.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartScrollStage.Scrolling">
      <summary>
            There has been scrolled one step, this can be while animating or just via one step.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartScrollStage.ScrollingEnded">
      <summary>
            The scrolling is ended animated.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollablePartFlags">
      <summary>
            Defines flags for an IQScrollablePart.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartFlags.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartFlags.ScrollHorizontal">
      <summary>
            Defines whether horizontal scroll is on.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartFlags.ScrollVertical">
      <summary>
            Defines whether vertical scroll is on.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollablePartFlags.ScrollWithBar">
      <summary>
            Defines whether scrolling must occur with a bar. When this is not set scrolling occurs with button.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartTextPainter">
      <summary>
            Defines the object used by <see cref="T:Qios.DevSuite.Components.IQPart" /> to draw text
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTextPainter.#ctor">
      <summary>
            Creates the TextPainter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTextPainter.CreateStringFormat(System.Drawing.StringFormat,Qios.DevSuite.Components.QDrawTextOptions)">
      <summary>
            Creates a new StringFormat based on a QDrawTextOptions parameter and a base StringFormat.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTextPainter.CreateStringFormat(System.Drawing.StringFormat,Qios.DevSuite.Components.QDrawTextOptions,System.Boolean,System.Boolean)">
      <summary>
            Creates a new StringFormat based on a QDrawTextOptions parameter and a base StringFormat.
            </summary>
      <param name="baseFormat">The format to alter</param>
      <param name="options">Additional options</param>
      <param name="globalHotkeyPrefixVisible">Indicates whether the current setting of 'hotkeyVisible' is true or false. When true the hotkeyPrefix is shown when set in the options, otherwise it is hidden. Set it to true when this must be ignored.</param>
      <param name="wrapText">Indicates whether text must be wrapped</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTextPainter.CreateNativeDrawTextOptions(System.Drawing.StringFormat)">
      <summary>
            Creates native draw text options from the specified string format.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTextPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTextPainter.DrawOnBounds">
      <summary>
            Gets or sets the bounds where the painter should paint on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTextPainter.TextColor">
      <summary>
            Gets or sets the TextColor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTextPainter.Font">
      <summary>
            Gets or sets the Font to use
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTextPainter.Orientation">
      <summary>
            Gets or sets the orientation of the text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTextPainter.StringFormat">
      <summary>
            Gets or sets the StringFormat to use
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartTableLayoutEngine">
      <summary>
            Defines the class that lays-out <see cref="T:Qios.DevSuite.Components.IQPart" /> objects in a table order. 
            The QPartTableLayoutEngine ignores the layout engine of the first level of parts. 
            It uses the QPartTableRowLayoutEngine class for performing the layout of the first level of children.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.GetPartDirection(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the direction of the part
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.CalculatePartCollectionSize(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Overridden. Calculates the size of the collection of the part in TableLayout.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.ApplyConstraintsToCollection(Qios.DevSuite.Components.IQPart,System.Drawing.Size,System.Drawing.Size,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Overridden. Applies constraints to this table.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTableLayoutEngine.Default">
      <summary>
            Gets the default static engine.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage">
      <summary>
            A helper class for calculating table layout
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.#ctor(Qios.DevSuite.Components.QPartTableLayoutEngine)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.ClearCellArrays">
      <summary>
            Clears the cell array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.ClearSizes">
      <summary>
            Only clears the sizes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.CreateCellArray(Qios.DevSuite.Components.IQPartCollection)">
      <summary>
            Creates the array with cells.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.CalculateMaxCellSize(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStage)">
      <summary>
            Calculates the max cell Size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.CalculateMaxRowSize(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStage)">
      <summary>
            Calculates the max row size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.MarkRowsAndCells(Qios.DevSuite.Components.IQPartCollection)">
      <summary>
            Marks all the rows and cells as table rows and table cells. Besides that it fills the table storage engine state property
            for the cells.
            </summary>
      <param name="rowCollection">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.ApplyRowCellSizes(Qios.DevSuite.Components.IQPartCollection,System.Drawing.Size,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Sets the sizes of the row cells based on whats calculated with the CalculateRowCells method. It returns the size
            of the complete rowCollection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.CellSizes">
      <summary>
            Gets the CellSizes
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.UnstretchedCellSizes">
      <summary>
            Gets the unstretched cellSizes
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTableLayoutEngine.QPartTableLayoutStorage.Engine">
      <summary>
            Gets the layout engine
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QStringsOrderEditor">
      <summary>
            A UITypeEditor to order a list of comma seperated strings.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStringsOrderEditor.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStringsOrderEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Handles user interface, user input processing and value assignment
            </summary>
      <param name="context">Additional context information</param>
      <param name="provider">ServiceProvider to get additional services</param>
      <param name="value">The object to edit</param>
      <returns>New value of the given object</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStringsOrderEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Gets the edit style of this UITypeEditor.
            Always returns a DropDown style.
            </summary>
      <param name="context">Additional context information</param>
      <returns>Edit Style</returns>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QRibbonItemCollectionEditor">
      <summary>
            Defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> instances on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeItemCollectionEditor">
      <summary>
            Defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.QComposite" /> class.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemCollectionEditor.#ctor(System.Type)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemCollectionEditor.CreateChildCollectionEditor">
      <summary>
            Overridden. Returns a new QCompositeItemCollectionEditor
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonItemCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor
            </summary>
      <param name="type">The Type to create this Editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonItemCollectionEditor.CreateChildCollectionEditor">
      <summary>
            Overridden. Creates a new QRibbonItemCollectionEditor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonItemCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonItemCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QFontStyleConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QFontStyle" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontStyleConverter.ConvertToString(Qios.DevSuite.Components.QFontStyle,System.String)">
      <summary>
            Converts the style to a string with the specified separator.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontStyleConverter.ConvertFromString(System.String,System.String)">
      <summary>
            Converts the specified string to a QFontStyle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontStyleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QMargin" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontStyleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Overridden. Converts an object to a <see cref="T:Qios.DevSuite.Components.QMargin" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontStyleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QMargin" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontStyleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this Typeconvert can convert a <see cref="T:Qios.DevSuite.Components.QMargin" /> from the given SourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontStyleConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because a <see cref="T:Qios.DevSuite.Components.QFontStyle" /> is a value type, it must create a new instance when a property changes.
            This method returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontStyleConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Returns a new instance of a <see cref="T:Qios.DevSuite.Components.QFontStyle" /> with the specified properties.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute">
      <summary>
            Defines the attribute that is used to identify the text property for designers.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.False">
      <summary>
            Defines the False attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.True">
      <summary>
            Defines the True attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.Default">
      <summary>
            Defines the default (false) attribute.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.#ctor(System.Boolean)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.Equals(System.Object)">
      <summary>
            Overridden. Returns whether this attribute equals the the specified atribute.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.IsDefaultAttribute">
      <summary>
            Returns the default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.GetHashCode">
      <summary>
            Overridden. gets the hashcode.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.SetPossibleText(System.Object,System.String)">
      <summary>
            Sets a possible text on the destination.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QDesignerMainTextAttribute.IsMainText">
      <summary>
            Gets whether the mainText value is true
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QContainerControlDesigner">
      <summary>
            Defines a ScrollableControlDesigner for a QContainerControl
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContainerControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QContainerControlDesigner.Verbs">
      <summary>
            Overridden. Gets the verbs.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeDesignerHelper">
      <summary>
            Defines static helper method for composite designers
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Design.QCompositeDesignerHelper.DefaultCompositeCreationTypes">
      <summary>
            Contains the default CompositeCreationTypes
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Design.QCompositeDesignerHelper.DefaultRibbonPageCreationTypes">
      <summary>
            Contains the default QRibbonPageCreationTypes
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Design.QCompositeDesignerHelper.DefaultRibbonGroupCreationTypes">
      <summary>
            Contains the default QRibbonGroupCreationTypes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeDesignerHelper.IgnoreAddingComponent(System.ComponentModel.IComponent)">
      <summary>
            Indicates whether the specified component should be ignored for adding.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QBalloonCodeSerializer">
      <summary>
            Defines the CodeDomSerializer for the <see cref="T:Qios.DevSuite.Components.QBalloon" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonCodeSerializer.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonCodeSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Serializes the <see cref="T:Qios.DevSuite.Components.QBalloon" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonCodeSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Deserializes the <see cref="T:Qios.DevSuite.Components.QBalloon" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabStripPainter">
      <summary>
            this class implements the painter for the TabStrip on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripPainter.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripPainter.DrawTabButtonBackground(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonConfiguration,Qios.DevSuite.Components.QTabStripConfiguration,Qios.DevSuite.Components.QTabButtonAppearance,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DockStyle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Graphics)">
      <summary>
            Overridden. Draws the TabButtonBackground and the Outline of a hot QRibbonTabButton.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration">
      <summary>
            Defines the Configuration of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.PropIconConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.PropApplicationButtonAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.PropLaunchBarAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.PropTextAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.PropItemAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.PropButtonAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.PropAutoUpdateText">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.CreateAppearance">
      <summary>
            returns the QRibbonCaptionAppearance
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Gets the DefaultContentPartLayoutOrder
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.IconConfiguration">
      <summary>
            Gets the configuration of the icon of this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.ApplicationButtonAreaConfiguration">
      <summary>
            Gets the configuration of the ApplicationButton on this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.LaunchBarAreaConfiguration">
      <summary>
            Gets the configuration of the LaunchBar area of this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.TextAreaConfiguration">
      <summary>
            Gets the configuration of the text area of this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.ItemAreaConfiguration">
      <summary>
            Gets the configuration of the custom iteam area of this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.ButtonAreaConfiguration">
      <summary>
            Gets the configuration of the button area of this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.AutoUpdateText">
      <summary>
            Gets or sets whether the text must be automatically updated from the attached Form or Control
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Is used on a QRibbonCaption, see the base for further documentation.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.IconBackgroundMargin">
      <summary>
            Overridden. Not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.IconBackgroundSize">
      <summary>
            Overridden. Not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionConfiguration.IconBackgroundVisible">
      <summary>
            Overridden. Not used on this configuration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration">
      <summary>
            Defines the configuration for the text area on the QRibbonCaption
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.PropDocumentTextConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.PropSeparatorTextConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.PropApplicationTextConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.PropSeparatorText">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested array size.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden. Gets the default content part layout order.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.DocumentTextConfiguration">
      <summary>
            Gets the configuration of the document text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.SeparatorTextConfiguration">
      <summary>
            Gets the configuration of the separator between the application and document text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.ApplicationTextConfiguration">
      <summary>
            Gets the configuration of the application text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionTextConfiguration.SeparatorText">
      <summary>
            Gets or sets a possible separator text.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaptionGroupConfiguration">
      <summary>
            Defines the configuration for several groups on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionGroupConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionGroupConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Not used in this configuration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration">
      <summary>
            Contains configuration properties for the button area of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.PropMinimizeButtonConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.PropRestoreButtonConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.PropMaximizeButtonConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.PropCloseButtonConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.GetRequestedCount">
      <summary>
            Overridden. Returns the requested array size for the properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.MinimizeButtonConfiguration">
      <summary>
            Gets the configuration of the minimize button on this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.RestoreButtonConfiguration">
      <summary>
            Gets the configuration of the restore button on this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.MaximizeButtonConfiguration">
      <summary>
            Gets the configuration of the maximize button on this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAreaConfiguration.CloseButtonConfiguration">
      <summary>
            Gets the configuration of the close button on this QRibbonCaption.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaptionAppearance">
      <summary>
            Implements the appearance of a QRibbonCaption
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextRenderedPart">
      <summary>
            Is used to store the data when a <see cref="T:Qios.DevSuite.Components.QMarkupTextElement" /> is rendered, This is used to maintain position and size information, so
            that it does not has to recalculate all this when it gets repainted.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.#ctor(System.Single,System.Drawing.SizeF)">
      <summary>
            Constructor, creates a QMarkupTextRenderedPart
            </summary>
      <param name="baseLine">Contains the baseLine of this part relative to the top of this part. All the parts on one line are drawn on the same baseLine.</param>
      <param name="size">Contains the size of this part.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.TrimLeft">
      <summary>
            Trims the left of this part
            </summary>
      <returns>
            True if there are visible characters left, else false.
            </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.TrimRight">
      <summary>
            Trims the right of this part
            </summary>
      <returns>
            True if there are visible characters left, else false.
            </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.PutWidth(System.Single)">
      <summary>
            Sets the Width of this part
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.PutHeight(System.Single)">
      <summary>
            Sets the Height of this part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.ContainsAbsolutePoint(System.Drawing.PointF)">
      <summary>
            Indicates if the specified absolute point is located in this element. This is the point calculated in the parent control coordinates.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.Draw(System.Drawing.Graphics)">
      <summary>
            Draws the part on the graphics.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.Dispose">
      <summary>
            Disposes the resources used by this part
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.Dispose(System.Boolean)">
      <summary>
            Disposes this part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedPart.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPart.Element">
      <summary>
            Gets or sets the element
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPart.Line">
      <summary>
            Gets or sets the line this Part belongs to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPart.MarkupText">
      <summary>
            Gets the MarkupText this element belongs to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPart.Left">
      <summary>
            Gets the Left of this part relative to the left of the parent line.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPart.Size">
      <summary>
            Gets the Size
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPart.Width">
      <summary>
            Gets the Width of this part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPart.Height">
      <summary>
            Gets the height of this part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPart.BaseLine">
      <summary>
            Gets the baseLine relative to the top of the parenting line.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedPart.AbsoluteLocation">
      <summary>
            Gets the absolute location of this Part.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextRenderedLine">
      <summary>
            Contains one rendered line for a <see cref="T:Qios.DevSuite.Components.QMarkupText" />. A rendered line contains a collection of <see cref="T:Qios.DevSuite.Components.QMarkupTextRenderedPart" /> objects.
            The parts determine the size of the line. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedLine.CalculateAbsoluteLocation(System.Drawing.PointF)">
      <summary>
            Calculates the absolute location of a childlocation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedLine.Dispose">
      <summary>
            Disposes the resources used by this partCollection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedLine.Dispose(System.Boolean)">
      <summary>
            Disposes this partCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedLine.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.Parts">
      <summary>
            Returns the Parts of this line
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.ParentCollection">
      <summary>
            Gets the Parent collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.Index">
      <summary>
            Gets the index of this line in the parent collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.Bounds">
      <summary>
            Gets the Bounds of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.Size">
      <summary>
            Gets the Size of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.Location">
      <summary>
            Gets the location of this line relative to the location of the parent collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.Left">
      <summary>
            Gets the Left of this line relative to the Left of the parent collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.Top">
      <summary>
            Gets the Top of this Line relative to the Top of the parent collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.AbsoluteLocation">
      <summary>
            Gets the absolute location of this Line.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.Width">
      <summary>
            Gets the Width of this Line.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.Height">
      <summary>
            Gets the Height of this Line
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLine.BaseLine">
      <summary>
            Gets the BaseLine relative to the top of this line.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeToolTipConfiguration">
      <summary>
            Defines configuration properties for ToolTips on <see cref="T:Qios.DevSuite.Components.QComposite" /> like controls.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeToolTipConfiguration.#ctor">
      <summary>
            Constructor, creates a new QToolTipConfiguration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeToolTipConfiguration.CreateBalloonWindowAppearanceInstance">
      <summary>
            Overridden. Creates the default balloon window appearance.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeToolTipConfiguration.CreateBalloonWindowConfigurationInstance">
      <summary>
            Overridden. Create the default balloon window configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeBalloonWindowConfiguration">
      <summary>
            Defines the window configuration for tooltips on a QComposite like control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeBalloonWindowConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeBalloonWindowAppearance">
      <summary>
            Defines the window appearance for tooltips on a QComposite like control.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QBalloonWindowAppearance">
      <summary>
            Defines the appearance used by QBalloonWindowAppearance
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapedWindowAppearance">
      <summary>
            Defines the appearance used by controls that have a <see cref="T:Qios.DevSuite.Components.QShape" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShadedShapeAppearance">
      <summary>
            Defines the appearance used by controls that have a <see cref="T:Qios.DevSuite.Components.QShape" /> with a shade.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShadedShapeAppearance.PropShadeOffset">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShadedShapeAppearance.PropShadeGradientSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShadedShapeAppearance.PropShadeVisible">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShadedShapeAppearance.PropShadeClipToShapeBounds">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShadedShapeAppearance.PropShadeClipMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShadedShapeAppearance.PropShadeGrowPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShadedShapeAppearance.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShadedShapeAppearance.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShadedShapeAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShadedShapeAppearance.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this array.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QShadedShapeAppearance.ShadeVisible">
      <summary>
            Gets or sets whether the shade is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShadedShapeAppearance.ShadeOffset">
      <summary>
            Gets or sets the offset of the shade.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShadedShapeAppearance.ShadeClipToShapeBounds">
      <summary>
            Gets or sets whether the shade must be clipped to the bounds of the shape. This is usefull to make sure
            a shade does not overlap some underlaying element. If the clipping is to small adjust
            the ShadeClipMargin or make the bounds of the shape bigger.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShadedShapeAppearance.ShadeClipMargin">
      <summary>
            Gets or sets the margin to correct shade-clipping. This is used with <see cref="P:Qios.DevSuite.Components.QShadedShapeAppearance.ShadeClipToShapeBounds" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShadedShapeAppearance.ShadeGrowPadding">
      <summary>
            Gets or sets the amount of padding that the shade must grow relative to the Shape.
            This is usefull for example when a Shape is drawn with Dock = Right and the shade must 
            be drawn till the left of the shape.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShadedShapeAppearance.ShadeGradientSize">
      <summary>
            Gets or sets the size of the gradient of the shade.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindowAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindowAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindowAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeBalloonWindowAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QControlShadeWindow.ShadePainting">
      <summary>
            Gets raised when the shade is about to be painted
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QControlShadeWindow.ShadePainted">
      <summary>
            Gets raised when the shade is painted
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMenuItemIcon">
      <summary>
            Defines an icon on a <see cref="T:Qios.DevSuite.Components.QCompositeMenuItem" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemIcon.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemIcon.#ctor(Qios.DevSuite.Components.QCompositeItemCreationOptions)">
      <summary>
            Constructor. Creates the item.
            </summary>
      <param name="options">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemIcon.ShouldSerializeCheckedIcon">
      <summary>
            Returns whether the Icon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemIcon.ResetCheckedIcon">
      <summary>
            Resets the Icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemIcon.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemIcon.CheckedIcon">
      <summary>
            Gets or sets the Icon of the QCompositeIcon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemIcon.CheckedIconResourceName">
      <summary>
            Gets or sets a possible resource name to load the Icon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemIcon.CheckedIconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenuItemIcon.UsedIcon">
      <summary>
            Gets the Icon that is used. This is determined by whether the item is enabled or disableds.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMenuConfiguration">
      <summary>
            Contains configuration properties for a <see cref="T:Qios.DevSuite.Components.QComposite" /> that displays a floating menu.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemTemplate">
      <summary>
            Defines a item template for use with QCompositeItems.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemTemplate.Apply(Qios.DevSuite.Components.QCompositeItem)">
      <summary>
            Applies this template to the specified item. Remark: this can only be done on actual instances of <see cref="T:Qios.DevSuite.Components.QCompositeItem" />.
            It doesn't work for example on <see cref="T:Qios.DevSuite.Components.QCompositeMenuItem" /> because that has overridden configurations.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemTemplateConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QShape" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemTemplateConverter.#ctor(System.Type)">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemTemplateConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Properties are not supported.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QComboBox">
      <summary>
            An advanced combobox control with the option to create a single- or multiline comboboxes with custom layout and custom buttons.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBox">
      <summary>
            An advanced textual input control with the option to create a single- or multiline textbox or to add a dropdown/spinner button(s).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.#ctor">
      <summary>
            Default construcotr
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeOuterBorderColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.OuterBorderColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetOuterBorderColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QInputBox.OuterBorderColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeBackColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.BackColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetBackColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QInputBox.BackColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeForeColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.BackColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetForeColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QInputBox.BackColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeOuterBackColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.OuterBackColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetOuterBackColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QInputBox.OuterBackColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeOuterBackColor2">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.OuterBackColor2" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetOuterBackColor2">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QInputBox.OuterBackColor2" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeColorScheme">
      <summary>
            Returns whether the <see cref="P:Qios.DevSuite.Components.QInputBox.ColorScheme" /> changes from its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QInputBox.ColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.Appearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QInputBox.Appearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeAppearanceHot">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.Appearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetAppearanceHot">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QInputBox.Appearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeAppearanceFocused">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.Appearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetAppearanceFocused">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QInputBox.Appearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeItemConfiguration">
      <summary>
            Returns whether this item configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetItemConfiguration">
      <summary>
            Resets this item configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeChildWindowConfiguration">
      <summary>
            Returns whether this dropdown window configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetChildWindowConfiguration">
      <summary>
            Resets this window configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeChildCompositeConfiguration">
      <summary>
            Determnes if the configuration for the composite of the child window should be serialized
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetChildCompositeConfiguration">
      <summary>
            Resets the configuration for the composite of the child window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeChildCompositeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.ChildCompositeColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetChildCompositeColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QInputBox.ChildCompositeColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ShouldSerializeToolTipConfiguration">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QInputBox.ToolTipConfiguration" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ResetToolTipConfiguration">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QInputBox.ToolTipConfiguration" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.FindString(System.String)">
      <summary>
            Finds the first item in the Items collection that starts with the specified string
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.FindString(System.String,System.Int32)">
      <summary>
            Finds the first item in the Items collection that starts with the specified string, 
            starting at the specified index in the Items collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.FindStringExact(System.String)">
      <summary>
            Finds the first item in the Items collection that matches the specified string
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.FindStringExact(System.String,System.Int32)">
      <summary>
            Finds the first item in the Items collection that matches the specified string,
            starting at the specified index in the Items collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.GetItemText(System.Object)">
      <summary>
            Gets the text of an item to display in the QInputBox
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.PointToControl(System.Drawing.Point)">
      <summary>
            Calculates the actual point on the control from the Point in ClientCoordinates.
            Use this method to determine where the Cursor is above the non client areas.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.RefreshNonClientArea">
      <summary>
            Redraws the NonClientArea. It does not refresh the NonClientArea of the children.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.PerformNonClientAreaLayout">
      <summary>
            Performs the layout of the NonClientArea. This method should be called
            when some of the ClientAreaMargin properties change and the changes
            should be reflected.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.FilterItemOnProperty(System.Object,System.String)">
      <summary>
            Returns the current value of the item if the item is a property of an instance
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateDropDownWindow">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QInputBoxCompositeWindow.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.ConfigureDropDownWindow">
      <summary>
            Configures the floating window to contain the items in the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreatePainter">
      <summary>
            Creates the QInputBoxPainter for the QInputBox
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateToolTipConfigurationInstance">
      <summary>
            Can be used by subclasses to implement an other ToolTipConfiguration.
            </summary>
      <returns>A new QToolTipConfiguration Instance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateAppearanceInstance">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QAppearance.
            This can be an inherited class of QAppearance.
            </summary>
      <returns>A new QAppearance instance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateAppearanceHotInstance">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QAppearance.
            This can be an inherited class of QAppearance.
            </summary>
      <returns>A new QAppearance instance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateAppearanceFocusedInstance">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QAppearance.
            This can be an inherited class of QAppearance.
            </summary>
      <returns>A new QAppearance instance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateConfigurationInstance">
      <summary>
            Creates the configuration instance for this QInputBox
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateItemConfigurationInstance">
      <summary>
            Creates the configuration instance for items of this QInputBox shown in the drop down window.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateChildWindowConfigurationInstance">
      <summary>
            Creates the configuration instance for the dropdown window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateChildCompositeConfiguration">
      <summary>
            Creates the configuration instance for the QComposite of the drop down window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateChildCompositeColorScheme">
      <summary>
            Creates the QColorScheme instance for the QCompoiste of the drop down window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            Overridden. Raises the KeyPress event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Raises the MouseDown event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnTextChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the TextChanged event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnMultilineChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the MultiLine event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnValueMemberChanged(Qios.DevSuite.Components.QInputBoxEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.ValueMemberChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnDisplayMemberChanged(Qios.DevSuite.Components.QInputBoxEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.DisplayMemberChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnDataSourceChanged(Qios.DevSuite.Components.QInputBoxEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.DataSourceChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnDropDownWindowRequested(Qios.DevSuite.Components.QInputBoxCompositeWindowEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.DropDownWindowRequested" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnCollapsing(Qios.DevSuite.Components.QInputBoxCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.Collapsing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnCollapsed(Qios.DevSuite.Components.QInputBoxEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.Collapsed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnExpanding(Qios.DevSuite.Components.QInputBoxCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.Expanding" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnExpanded(Qios.DevSuite.Components.QInputBoxEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.Expanded" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnSelectedValueChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.SelectedValueChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.SelectedIndexChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnSelectedItemChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.SelectedItemChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnButtonMouseUp(Qios.DevSuite.Components.QInputBoxButtonEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.ButtonMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnButtonMouseDown(Qios.DevSuite.Components.QInputBoxButtonEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.ButtonMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnButtonClick(Qios.DevSuite.Components.QInputBoxButtonEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.ButtonMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnWindowsXPThemeChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.WindowsXPThemeChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the NonClientArea
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnColorsChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.ColorsChanged" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnNonClientAreaMouseDown(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.NonClientAreaMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnNonClientAreaDoubleClick(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.NonClientAreaDoubleClick" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnNonClientAreaMouseUp(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.NonClientAreaMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnNonClientAreaMouseLeave(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.NonClientAreaMouseLeave" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnNonClientAreaMouseMove(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBox.NonClientAreaMouseMove" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnBindingContextChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the BindingContextChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnEnabledChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the EnabledChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Raises the MouseMouse event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnMouseLeave(System.EventArgs)">
      <summary>
            Overridden. Raises the MouseLeave event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnGotFocus(System.EventArgs)">
      <summary>
            Overridden. Raises the GotFocus event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnLostFocus(System.EventArgs)">
      <summary>
            Overridden. Raises the LostFocus event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnResize(System.EventArgs)">
      <summary>
            Overridden. Raises the Resize event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnFontChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the FontChanged event.
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnHandleCreated(System.EventArgs)">
      <summary>
            Overridden. Raises the HandleCreated event.
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnParentChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the ParentChanged event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the QInputBox.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Processes Windows messages.
            </summary>
      <param name="m">Message to process</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.CreateHandle">
      <summary>
            Overridden. Creates the handle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.OnSizeChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the SizeChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden. Sets the bounds of the control
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.DataSourceChanged">
      <summary>
            Is raised when the data source changes
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.ValueMemberChanged">
      <summary>
            Is raised when the value member changes
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.DisplayMemberChanged">
      <summary>
            Is raised when the display member changes
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.DropDownWindowRequested">
      <summary>
            Is raised when the drop down window is requested.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.Collapsing">
      <summary>
            Is raised when the dropdown window is about to collapse
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.Collapsed">
      <summary>
            Is raised when the dropdown window is collapsed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.Expanding">
      <summary>
            Is raised when the dropdown window is about to show
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.Expanded">
      <summary>
            Is raised when the dropdown window is showed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.SelectedValueChanged">
      <summary>
            Is raised when the selected value has changed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.SelectedIndexChanged">
      <summary>
            Is raised when the selected index has changed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.SelectedItemChanged">
      <summary>
            Is raised when the selected item has changed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.ButtonMouseUp">
      <summary>
            Is raised when a mouse button is released over a button of the QInputBox.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.ButtonMouseDown">
      <summary>
            Is raised when a mouse button is pressed over a button of the QInputBox.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.ButtonClick">
      <summary>
            Is raised when a button of the QInputBox is clicked
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.WindowsXPThemeChanged">
      <summary>
            Is raised when the Windows XP theme is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.ColorsChanged">
      <summary>
            Gets raised when the colors or the QColorScheme changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.PaintNonClientArea">
      <summary>
            This event gets raised when the NonClientArea should be drawn.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.NonClientAreaMouseDown">
      <summary>
            This event gets raised when the user clicks on the NonClientArea and the specified area is known.
            Like on the Caption or on the Sizing area.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.NonClientAreaDoubleClick">
      <summary>
            This event gets raised when the user double clicks on the NonClientArea and the specified area is known.
            Like on the Caption or on the Sizing area.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.NonClientAreaMouseUp">
      <summary>
            This event gets raised when the user releases the button on the NonClientArea and the specified area is known.
            Like on the Caption or on the Sizing area.
            </summary>
      <remarks>
            You need to cancel the DefaultAction on the NonClientAreaMouseDown event if you want to 
            handle this event. Otherwise the default action is done and there is no control over it anymore.
            </remarks>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.NonClientAreaMouseMove">
      <summary>
            This event gets raised when the user moves over the NonClientArea and the specified area is known.
            Like on the Caption or on the Sizing area.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBox.NonClientAreaMouseLeave">
      <summary>
            This event gets raised when the user leaves the NonClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.Accelerations">
      <summary>
            Gets the collection of QInputBoxAccelerations
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.NumericValue">
      <summary>
            Gets or sets the current numeric value.
            This property only has effect when the QInputBox is configured as a numeric up/down control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.Increment">
      <summary>
            Gets or sets the numeric value to increase or decrease the value with when the user presses one of the two buttons
            This property only has effect when the QInputBox is configured as a numeric up/down control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.MaximumValue">
      <summary>
            Gets or sets the maximum numeric value
            This property only has effect when the QInputBox is configured as a numeric up/down control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.MinimumValue">
      <summary>
            Gets or sets the minimum numeric value
            This property only has effect when the QInputBox is configured as a numeric up/down control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.FormatString">
      <summary>
            Gets or sets the format string to use for formatting the numeric value
            This property only has effect when the QInputBox is configured as a numeric up/down control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.CustomDropDownWindow">
      <summary>
            Gets or sets the custom child window that is used when the QInputBox is configured as a DropDown or DropDownList control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ValueMember">
      <summary>
            Gets or sets the member of the datasource to use as the value of the item.
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DisplayMember">
      <summary>
            Gets or sets the member of the datasource to display in the QInputBox
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DataSource">
      <summary>
            Gets or sets the datasource to use to populate the Items collection.
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DroppedDown">
      <summary>
            Gets or sets if the floating window is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.SelectedValue">
      <summary>
            Gets or sets the value of the SelectedItem in the Items collection
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.SelectedIndex">
      <summary>
            Gets or sets the index of the SelectedItem in the Items collection
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.SelectedItem">
      <summary>
            Gets or sets the selected item. This item must be contained in the Item collection.
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.IsHot">
      <summary>
            Gets whether this box is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.PaintTransparentBackground">
      <summary>
            Gets or sets whether a transparent background must be painted. When this is false the background color of the parent is painted on this Control.
            This can increase performance. Set this to false when the Control is situated on a Parent with a solid background or when the control has a rectangular filled out shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.Items">
      <summary>
            Gets an object representing the collection of the items contained in this QInputBox.
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            When the QInputBox is databound the Items collection is locked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.BorderStyle">
      <summary>
            Overridden. The BorderStyle property is not used in the QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.Multiline">
      <summary>
            Overridden. Gets or sets whether multiline is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.OuterBorderColor">
      <summary>
            Overridden. Gets or sets the OuterBorderColor of this control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.BackColor">
      <summary>
            Overridden. Gets the current BackColor of the input area of this QInputBox.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ForeColor">
      <summary>
            Overridden. Gets the ForeColor of the input area of this QInputBox.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.OuterBackColor">
      <summary>
            Overridden. Gets or Sets the OuterBackColor of this Control.  This Color is used when the Appearance is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.OuterBackColor2">
      <summary>
            Overridden. Gets or Sets the OuterBackColor2 of this Control.  This Color is used when the Appearance is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.Appearance">
      <summary>
            Gets the QAppearance to configure the background of the QInputBox. This property only has effect when the
            Configuration.InputBoxStyle is set to Custom. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.AppearanceHot">
      <summary>
            Gets the QAppearance to configure the background of the QInputBox when the mouse is over the QInputBox.
            This property only has effect when the Configuration.InputBoxStyle is set to Custom. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.AppearanceFocused">
      <summary>
            Gets the QAppearance to configure the background of the QInputBox when it is focused.
            This property only has effect when the Configuration.InputBoxStyle is set to Custom. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ItemConfiguration">
      <summary>
            Gets or sets the configuration for the items of this QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ChildWindowConfiguration">
      <summary>
            Gets or sets the configuration for the dropdown window of this QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ChildCompositeConfiguration">
      <summary>
            Gets the configuration for the composite of the child window
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ChildCompositeColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used for child composites.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.Configuration">
      <summary>
            Gets or sets the QInputBoxConfiguration for this QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ToolTipText">
      <summary>
            Gets or sets the ToolTipText. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" />
            The ToolTipConfiguration, see <see cref="P:Qios.DevSuite.Components.QInputBox.ToolTipConfiguration" />, must be enabled for this to show.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ToolTipConfiguration">
      <summary>
            Gets the QToolTipConfiguration for this QContainerControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.AutoSize">
      <summary>
            Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.PreferredHeight">
      <summary>
            Gets the preferred height of a single-line textbox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.Text">
      <summary>
            Gets or sets the text of the QInputBox.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.CueText">
      <summary>
            Gets or sets the text that is displayed as the textual cue.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.Painter">
      <summary>
            Gets or sets the Painter for the QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ForeColorPropertyName">
      <summary>
            Returns the background color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.TextCueColorPropertyName">
      <summary>
            Returns the background color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.BackColorPropertyName">
      <summary>
            Returns the background color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DisabledBackColorPropertyName">
      <summary>
            Returns the background color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.HotBackColorPropertyName">
      <summary>
            Returns the background color from <see cref="T:Qios.DevSuite.Components.QColorScheme" /> for when it is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.FocusedBackColorPropertyName">
      <summary>
            Returns the background color from <see cref="T:Qios.DevSuite.Components.QColorScheme" /> for when it is focused.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.OuterBackColor1PropertyName">
      <summary>
            Returns the outer background color 1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.OuterBackColor2PropertyName">
      <summary>
            Returns the outer background color 2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.OuterBorderColorPropertyName">
      <summary>
            Returns the outer border color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DisabledOuterBackColor1PropertyName">
      <summary>
            Returns the outer background color 1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DisabledOuterBackColor2PropertyName">
      <summary>
            Returns the outer background color 2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DisabledOuterBorderColorPropertyName">
      <summary>
            Returns the outer border color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.HotOuterBackColor1PropertyName">
      <summary>
            Returns the outer background color 1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.HotOuterBackColor2PropertyName">
      <summary>
            Returns the outer background color 2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.HotOuterBorderColorPropertyName">
      <summary>
            Returns the outer border color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.FocusedOuterBackColor1PropertyName">
      <summary>
            Returns the outer background color 1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.FocusedOuterBackColor2PropertyName">
      <summary>
            Returns the outer background color 2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.FocusedOuterBorderColorPropertyName">
      <summary>
            Returns the outer border color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ButtonBackColor1PropertyName">
      <summary>
            Returns the outer background color 1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ButtonBackColor2PropertyName">
      <summary>
            Returns the outer background color 2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.ButtonBorderColorPropertyName">
      <summary>
            Returns the outer border color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DisabledButtonBackColor1PropertyName">
      <summary>
            Returns the disabled background color 1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DisabledButtonBackColor2PropertyName">
      <summary>
            Returns the disabled color 2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.DisabledButtonBorderColorPropertyName">
      <summary>
            Returns the disabled border border color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.HotButtonBackColor1PropertyName">
      <summary>
            Returns the outer background color 1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.HotButtonBackColor2PropertyName">
      <summary>
            Returns the outer background color 2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.HotButtonBorderColorPropertyName">
      <summary>
            Returns the outer border color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.PressedButtonBackColor1PropertyName">
      <summary>
            Returns the outer background color 1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.PressedButtonBackColor2PropertyName">
      <summary>
            Returns the outer background color 2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.PressedButtonBorderColorPropertyName">
      <summary>
            Returns the outer border color from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.Sorted">
      <summary>
            Gets or sets whether the items of the QInputBox are sorted
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            When the QInputBox is databound the Items collection is locked and cannot be sorted.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBox.CreateParams">
      <summary>
            Overridden. Creates the CreateParams.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComboBox.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComboBox.CreateConfigurationInstance">
      <summary>
            Creates the configuration instance for this QTextBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComboBox.Configuration">
      <summary>
            Gets or sets the QInputBoxConfiguration for this QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComboBox.Accelerations">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComboBox.NumericValue">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComboBox.Increment">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComboBox.MaximumValue">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComboBox.MinimumValue">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComboBox.FormatString">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QComboBoxConfiguration">
      <summary>
            Defines configuration properties for a QComboBox.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxConfiguration">
      <summary>
            Defines configuration properties for a QInputBox.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropButtonAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropButtonAppearanceHot">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropButtonAppearancePressed">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropInputBoxTextPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropInputBoxPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropInputBoxStyle">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropInputStyle">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropButtonMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropButtonPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropButtonMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropInputBoxButtonDrawNormal">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropInputBoxButtonDrawHot">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropInputBoxButtonDrawFocused">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropButtonMaskAlign">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropButtonAlign">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropAutoCompleteMode">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropAutoCompleteSource">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.PropKeyBoardBehaviour">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxConfiguration.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxConfiguration.Finalize">
      <summary>
            Defines the destructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxConfiguration.CreateButtonAppearanceInstance">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QAppearance.
            This can be an inherited class of QAppearance.
            </summary>
      <returns>A new QAppearance instance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxConfiguration.CreateButtonAppearanceHotInstance">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QAppearance.
            This can be an inherited class of QAppearance.
            </summary>
      <returns>A new QAppearance instance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxConfiguration.CreateButtonAppearancePressedInstance">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QAppearance.
            This can be an inherited class of QAppearance.
            </summary>
      <returns>A new QAppearance instance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QInputBoxConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxConfiguration.Dispose">
      <summary>
            Disposes the QInputBoxConfiguration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxConfiguration.Dispose(System.Boolean)">
      <summary>
            Disposes this Configuration.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBoxConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of this configuration changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QInputBoxConfiguration.InputBoxTextPaddingChanged">
      <summary>
            Gets raised when the InputBoxTextPadding property of this configuration changes
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.KeyboardBehaviour">
      <summary>
            Gets or sets the keyboard behaviour
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.AutoCompleteSource">
      <summary>
            Gets or sets the auto complete source.
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.AutoCompleteMode">
      <summary>
            Gets or sets the auto complete mode
            This property only has effect when the QInputBox is configured as a DropDown, DropDownList or TextBox control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.ButtonAppearance">
      <summary>
            Gets the QAppearance for the button of the QInputBox.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.ButtonAppearanceHot">
      <summary>
            Gets the QAppearance for the button of the QInputBox when the mouse is over the button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.ButtonAppearancePressed">
      <summary>
            Gets the QAppearance for the button of the QInputBox when the button is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.ButtonAlign">
      <summary>
            Gets or sets the alignment of the buttons of a QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.InputBoxStyle">
      <summary>
            Gets or sets the drawing style of the inputbox.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.InputBoxButtonDrawNormal">
      <summary>
            Gets or sets the draw type of the button when the InputBox is in the normal state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.InputBoxButtonDrawHot">
      <summary>
            Gets or sets the draw type of the button when the InputBox is in the hot state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.InputBoxButtonDrawFocused">
      <summary>
            Gets or sets the draw type of the button when the InputBox is in the focused state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.InputBoxTextPadding">
      <summary>
            Gets or sets the padding of the text of the QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.InputBoxPadding">
      <summary>
            Gets or sets the padding of the QInputBox. This property only has effect when the InputBoxStyle
            property is set to Custom.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.InputStyle">
      <summary>
            Gets or sets the style of the QInputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.ButtonPadding">
      <summary>
            Gets or sets the button padding of the QInputBox. This property only has effect when the InputBoxStyle
            property is set to Custom.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.ButtonMargin">
      <summary>
            Gets or sets the button margin of the QInputBox. This property only has effect when the InputBoxStyle
            property is set to Custom.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.UsedButtonMask">
      <summary>
            Gets the actual used button Mask. This is based on whether the ButtonMask
            is set. If it is not set the default is used. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.UsedButtonMaskReverse">
      <summary>
            Gets the actual used button Mask. This is based on whether the ButtonMask
            is set. If it is not set the default is used. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.ButtonMask">
      <summary>
            Gets or sets the base image that is used to for the buttons.
            In the Mask the Color Red is replaced by the TextColor. This property only has effect when the 
            InputBoxStyle property has been set to Custom.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxConfiguration.ButtonMaskAlign">
      <summary>
            Gets or sets the alignment of the button mask. This property only has effect when the 
            InputBoxStyle property has been set to Custom.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QComboBoxConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QComboBoxConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComboBoxConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QComboBoxConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComboBoxConfiguration.InputStyle">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QComboBoxConfiguration.DropDownStyle">
      <summary>
            Gets or sets the drop down style of the QComboBox
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QComboBoxStyle">
      <summary>
            Determines the drop down style of the QComboBox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QComboBoxStyle.DropDown">
      <summary>
            Drop down with the possibility of the user entering text.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QComboBoxStyle.DropDownList">
      <summary>
            Dropdown without the possibility of the user entering text.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QBalloon">
      <summary>
            A QBalloon is a component that can contain listeners with descriptive text for controls. The QBalloon will show
            a QBalloonWindow with the provided markup text when the target control contains the focus or when the user hovers above
            it with the mouse. The QBalloon showing and hiding process can be configured to apply animations and delays. The 
            QBalloonWindow is a QShapedWindow (a rectangle shape by default) and its shape can be configured. To configure the 
            shape of the QBalloonWindow, set the BalloonWindowClassReference, BalloonWindow or BalloonWindowShape property
            of the Configuration object.
            </summary>
      <remarks>
            To configure the markup text for controls use the <see cref="M:Qios.DevSuite.Components.QBalloon.AddListener(System.Windows.Forms.Control,System.String)" />, <see cref="M:Qios.DevSuite.Components.QBalloon.RemoveListener(System.Windows.Forms.Control)" /> and <see cref="M:Qios.DevSuite.Components.QBalloon.SetMarkupText(System.Windows.Forms.Control,System.String)" /> methods.
            The methods <see cref="M:Qios.DevSuite.Components.QBalloon.AddListener(System.Windows.Forms.Control,System.String)" /> and <see cref="M:Qios.DevSuite.Components.QBalloon.SetMarkupText(System.Windows.Forms.Control,System.String)" /> allows you to format your text.
            To see the tags that can be used for this formatting, see the <a href="088eec04-2535-4aeb-9092-638574e8a38b.htm">QMarkupText XML Reference</a>.<br /><br />
            To handle mouse events, implement an event handler for the several events like <see cref="E:Qios.DevSuite.Components.QBalloon.ElementMouseEnter" /> or <see cref="E:Qios.DevSuite.Components.QBalloon.ElementLinkClick" />.
            <seealso cref="T:Qios.DevSuite.Components.QMarkupText" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.ShouldSerializeConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.ResetConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.ShowOnNotifyIcon(System.Windows.Forms.NotifyIcon,System.String)">
      <summary>
            Shows the QBalloonWindow on the specified notifyIcon. If the notifyIcon is not visible it does not show the balloon and returns false.
            </summary>
      <param name="notifyIcon">The notifyIcon to show the QBalloon on.</param>
      <param name="markupText">The markupText to show</param>
      <returns>True if the Balloon was shown, else false (this is the case when the NotifyIcon was not visible.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.Show(System.Drawing.Point,System.String)">
      <summary>
            Shows the QBalloonWindow at the specified screen location.
            The QBalloonWindow will display the given text.
            </summary>
      <param name="screenLocation">Screen location to position the QBalloonWindow</param>
      <param name="markupText">Text to display on the QBalloonWindow</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.Show(System.Drawing.Point,System.String,System.Boolean)">
      <summary>
            Shows the QBalloonWindow at the specified screen location.
            The QBalloonWindow will display the given text.
            </summary>
      <param name="screenLocation">Screen location to position the QBalloonWindow</param>
      <param name="markupText">Text to display on the QBalloonWindow</param>
      <param name="ignoreWorkingArea">Indicates if the QBalloonWindow may overlap the TaskBar and other docked windows</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.Show(System.Windows.Forms.Control,System.String)">
      <summary>
            Shows the QBalloonWindow to point at a control.
            The QBalloonWindow will display the given text.
            </summary>
      <param name="targetControl">Control to point the QBalloonWindow at</param>
      <param name="markupText">Text to display on the QBalloonWindow</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.Show(System.Windows.Forms.Control)">
      <summary>
            Shows the QBalloonWindow to point at a control.
            The QBalloon must have a listener with the control to determine the text to show.
            Use the Show(Control, String) overload to show the QBalloonWindow without the use of a listener.
            </summary>
      <param name="targetControl">Control to point the QBalloonWindow at</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.HasListenerForControl(System.Windows.Forms.Control)">
      <summary>
            Returns whether there already is a listener for a specified control.
            </summary>
      <param name="control">Control to search for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.SetMarkupText(System.Windows.Forms.Control,System.String)">
      <summary>
            Sets the markupText of the control to the specified markupText. If markupText is empty the balloon will not
            show anymore on the specified control.
            </summary>
      <param name="control">Control to set the markupText for</param>
      <param name="markupText">MarkupText to set</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.GetMarkupText(System.Windows.Forms.Control)">
      <summary>
            Gets the markupText that was set for the control
            </summary>
      <param name="control">Control to get the markupText for</param>
      <returns>The markupText if it was set, else null</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.AddListener(System.Windows.Forms.Control,System.String)">
      <summary>
            Adds control to the array of listeners with the specified markupText
            </summary>
      <param name="control">Control to add the listener for</param>
      <param name="markupText">MarkupText of the listener</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.RemoveListener(System.Windows.Forms.Control)">
      <summary>
            Removes the control from the listeners array.
            </summary>
      <param name="control">Control to remove the listener of</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.CreateDefaultBalloonWindow">
      <summary>
            Creates a default balloon window if no reference is set.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.CreateBalloonWindow">
      <summary>
            Creates a balloon window to display
            </summary>
      <returns>QBalloonWindow instance to display</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.CreateBalloonConfigurationInstance">
      <summary>
            Can be used by subclasses to implement another BalloonConfiguration.
            </summary>
      <returns>A new QBalloonConfiguration Instance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.OnElementMouseEnter(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloon.ElementMouseEnter" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.OnElementMouseLeave(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloon.ElementMouseLeave" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.OnElementMouseDown(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloon.ElementMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.OnElementMouseUp(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloon.ElementMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.OnElementMouseClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloon.ElementMouseClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.OnElementLinkClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloon.ElementLinkClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.OnBalloonVisibleChanged(System.EventArgs)">
      <summary>
            Raises a BalloonVisibleChanged event
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.OnFontChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the FontChanged event
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloon.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Overridden. Handles the TimerElapsed event.
            </summary>
      <param name="e">EventArgs</param>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloon.BalloonVisibleChanged">
      <summary>
            Occurs when the QBalloonWindow is changes visibility (after any animation)
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloon.ElementMouseEnter">
      <summary>
            Occurs when the mouse enters an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloon.ElementMouseLeave">
      <summary>
            Occurs when the mouse leaves an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloon.ElementMouseDown">
      <summary>
            Occurs when the user presses the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloon.ElementMouseUp">
      <summary>
            Occurs when the user releases the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloon.ElementMouseClick">
      <summary>
            Occurs when the user clicks on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloon.ElementLinkClick">
      <summary>
            Occurs when the user clicks on a link.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloon.Visible">
      <summary>
            Gets if the QBalloonWindow is currently visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloon.BalloonWindow">
      <summary>
            Gets the current QBalloonWindow used for showing the balloon text.
            To configure the QBalloon to show a QBalloonWindow you can set the BalloonWindowClassReference,
            BalloonWindow or the BalloonWindowShape Property of the Configuration object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloon.Configuration">
      <summary>
            Gets the QBalloonConfiguration for this QBalloon
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPropertyBagHost">
      <summary>
            Defines a base class that want to implement <see cref="T:Qios.DevSuite.Components.IQPropertyBagHost" /> and <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />.
            The ICustomTypeDescriptor is used to return the same Properties as the <see cref="T:Qios.DevSuite.Components.Design.QPropertyBagHostTypeConverter" /> does.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.#ctor">
      <summary>
            Creates the QPropertyBagHost
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.SetToDefaultValues">
      <summary>
            Sets this to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.IsSetToDefaultValues">
      <summary>
            Returns whether this is set to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetConverter">
      <summary>
            Gets the TypeConverter
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetEvents(System.Attribute[])">
      <summary>
            Gets the Events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetEvents">
      <summary>
            Gets the Events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetComponentName">
      <summary>
            Gets the component name.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <summary>
            Gets the owner of the specified property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetAttributes">
      <summary>
            Gets the attributes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetProperties(System.Attribute[])">
      <summary>
            Gets the Properties, this returns the same propertyDescriptors as <see cref="T:Qios.DevSuite.Components.Design.QPropertyBagHostTypeConverter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetProperties">
      <summary>
            Gets the Properties, this returns the same propertyDescriptors as <see cref="T:Qios.DevSuite.Components.Design.QPropertyBagHostTypeConverter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetEditor(System.Type)">
      <summary>
            Gets the editor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetDefaultProperty">
      <summary>
            Gets the default property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetDefaultEvent">
      <summary>
            Gets the default event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBagHost.GetClassName">
      <summary>
            Gets the class name.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPropertyBagHost.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QPropertyBagHost.Properties">
      <summary>
            Gets the propertyBag. Use this bag to store properties in or to redefine defaultValues
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QItemStates">
      <summary>
            Defines the states for items. Difference between this and <see cref="T:Qios.DevSuite.Components.QButtonState" /> is that this can have multiple states
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QItemStates.Normal">
      <summary>
            Normal ItemState // 01, 02, 04, 10, 1.000, 10.000,
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QItemStates.Disabled">
      <summary>
            Is disabled
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QItemStates.Hot">
      <summary>
            Is hot.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QItemStates.Pressed">
      <summary>
            Is pressed
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QItemStates.Expanded">
      <summary>
            Is expanded
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QItemStates.Checked">
      <summary>
            Is checked
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QItemStates.All">
      <summary>
            Defines all the states.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QItemStatesHelper">
      <summary>
            Is a helper class to get and adjust <see cref="T:Qios.DevSuite.Components.QItemStates" /> values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QItemStatesHelper.IsHot(Qios.DevSuite.Components.QItemStates)">
      <summary>
            Gets whether the state is hot.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QItemStatesHelper.IsPressed(Qios.DevSuite.Components.QItemStates)">
      <summary>
            Gets whether the state is pressed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QItemStatesHelper.IsExpanded(Qios.DevSuite.Components.QItemStates)">
      <summary>
            Gets whether the state is expanded.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QItemStatesHelper.IsChecked(Qios.DevSuite.Components.QItemStates)">
      <summary>
            Gets whether the state is checked
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QItemStatesHelper.IsDisabled(Qios.DevSuite.Components.QItemStates)">
      <summary>
            Gets whether the state is disabled.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QItemStatesHelper.IsNormal(Qios.DevSuite.Components.QItemStates)">
      <summary>
            Gets whether the state is normal.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QItemStatesHelper.IsState(Qios.DevSuite.Components.QItemStates,Qios.DevSuite.Components.QItemStates)">
      <summary>
            Returns whether the specified state contains all the values defined in mustBeState
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QItemStatesHelper.AdjustState(Qios.DevSuite.Components.QItemStates,Qios.DevSuite.Components.QItemStates,System.Boolean)">
      <summary>
            Adjusts the specified state. It sets or unsets the specified adjustment.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QItemStatesHelper.FromButtonState(Qios.DevSuite.Components.QButtonState)">
      <summary>
            Coverts a QButtonState to a QItemStates object
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFontCache">
      <summary>
            The QFontCache is used to cache fonts created from <see cref="T:Qios.DevSuite.Components.QFontDefinition" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QObjectCache">
      <summary>
            Defines the base Object cache for Fonts or Images or other resources.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructor. Creates a new Cache.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.ExcludeObjectFromCleanup(System.Object)">
      <summary>
            Excludes an object from cleanup. This can be usefull when an instance from the object in a cache
            is saved and needed several times. Use <see cref="M:Qios.DevSuite.Components.QObjectCache.IncludeObjectInCleanup(System.Object)" /> to include the object
            in the cleanup again.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.IncludeObjectInCleanup(System.Object)">
      <summary>
            Includes the object in the cleanup when it was excluded by <see cref="M:Qios.DevSuite.Components.QObjectCache.ExcludeObjectFromCleanup(System.Object)" />
            in the cleanup again.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.StoreObject(System.Object,System.Object)">
      <summary>
            Stores an object in the cache under the specified key.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.FindObject(System.Object)">
      <summary>
            Tries to find an object in the cache.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.ClearObjectCache(System.Boolean)">
      <summary>
            Clears all the entries in the cache. if ignoreExclusions is true 
            the objects excluded via <see cref="M:Qios.DevSuite.Components.QObjectCache.ExcludeObjectFromCleanup(System.Object)" /> are also removed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.ClearObjectCacheTill(System.Int32,System.Boolean)">
      <summary>
            Clears from all the entries which popularity is till or the same as tillPopularity.
            </summary>
      <param name="newSize">Contains the new size of the cache</param>
      <param name="ignoreExclusions">Indicates if excluded images must be ignored, and cleaned up anyway.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.CleanupObjectCache">
      <summary>
            Cleans up the cache so it does not contain more images then the Maximum size. When
            it does contain more objects, it cleans up till MaxSize - UnloadSize
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.Dispose">
      <summary>
            Disposes the group configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.Dispose(System.Boolean)">
      <summary>
            Disposes the QImageCache
            </summary>
      <param name="disposing">Disposing</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QObjectCache.Finalize">
      <summary>
            Destructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QObjectCache.MaxSize">
      <summary>
            Gets or sets the MaxSize.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QObjectCache.CacheEnabled">
      <summary>
            Gets or sets whether the cacahe is enabled. When this is disabled it is not used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QObjectCache.CurrentCacheSize">
      <summary>
            Gets the current CacheSize
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontCache.ExcludeFromCleanup(System.Drawing.Font)">
      <summary>
            Excludes an Font from cleanup. This can be usefull when an instance from the font in a cache
            is saved and needed several times. Use <see cref="M:Qios.DevSuite.Components.QFontCache.IncludeInCleanup(System.Drawing.Font)" /> to include the font
            in the cleanup again.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontCache.IncludeInCleanup(System.Drawing.Font)">
      <summary>
            Includes the font in the cleanup when it was excluded by <see cref="M:Qios.DevSuite.Components.QFontCache.ExcludeFromCleanup(System.Drawing.Font)" />
            in the cleanup again.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontCache.StoreFont(System.Drawing.Font)">
      <summary>
            Stores a font in the cache that uses a QFontDefinition as key.
            </summary>
      <param name="font">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontCache.StoreFont(Qios.DevSuite.Components.QFontDefinition,System.Drawing.Font)">
      <summary>
            Stores a Font in the cache and uses the specified definition as a key.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontCache.FindFont(Qios.DevSuite.Components.QFontDefinition)">
      <summary>
            Tries to find an font in the FontCache.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontCache.ClearCache(System.Boolean)">
      <summary>
            Clears all the entries in the cache. if ignoreExclusions is true 
            the fonts excluded via <see cref="M:Qios.DevSuite.Components.QFontCache.ExcludeFromCleanup(System.Drawing.Font)" /> are also removed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontCache.Enabled">
      <summary>
            Gets or sets whether the QFontCache is enabled. When this is disabled it is not used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontCache.MaximumSize">
      <summary>
            Gets or sets the maximum count of fonts the cache is allowed to contain.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontCache.CurrentSize">
      <summary>
            Gets the current size.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorHsl">
      <summary>
            Defines a color in Hue, Saturation and Lightness values.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorHsl.Hue">
      <summary>
            Defines the Hue
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorHsl.Saturation">
      <summary>
            Defines the Saturation.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorHsl.Lightness">
      <summary>
            Defines the Lightness.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorHsl.Empty">
      <summary>
            Defines an empty QColorHSL
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.FromColor(System.Drawing.Color)">
      <summary>
            Creates a QColorHSL from the specified color.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.ToColor">
      <summary>
            Creates a Color from this QColorHSL.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.ToRGB">
      <summary>
            Creates an RGB uint from this QColorHSL
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.SetElement(Qios.DevSuite.Components.QColorHslElement,System.Int32)">
      <summary>
            Sets the element to the specified value
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.GetElement(Qios.DevSuite.Components.QColorHslElement)">
      <summary>
            Gets the specified element.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.HslToRgb(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a regular RGB int containing the RGB values for the specified hue, saturation and lightness
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.FromRGB(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a QColorHSL from the specified rgb values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.GetUnusedElement(Qios.DevSuite.Components.QColorHslElement,Qios.DevSuite.Components.QColorHslElement)">
      <summary>
            Gets the element that is not used by a or b.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.Equals(System.Object)">
      <summary>
            Indicates whether this is equal to the specified object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.GetHashCode">
      <summary>
            Gets the hashcode.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorHsl.ToString">
      <summary>
            Gets the value as string.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorHslElement">
      <summary>
            Defines the several elements of a QColorHsl
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorHslElement.None">
      <summary>
            No element
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorHslElement.Hue">
      <summary>
            The Hue element.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorHslElement.Saturation">
      <summary>
            The saturation element.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorHslElement.Lightness">
      <summary>
            The lightness element.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartOptions">
      <summary>
            Defines additional options for a QPart.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartOptions.None">
      <summary>
            No options
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartOptions.ShrinkHorizontal">
      <summary>
            The item can shrink horizontal.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartOptions.ShrinkVertical">
      <summary>
            The item can shrink vertical.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartOptions.StretchHorizontal">
      <summary>
            The item can stretch horizontal.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartOptions.StretchVertical">
      <summary>
            The item can stretch vertical.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartDirection">
      <summary>
            Defines the direction of a QPart.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartDirection.Horizontal">
      <summary>
            Indicates that the contents of a QPart are layed out from left to right.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartDirection.Vertical">
      <summary>
            Indicates that  the contents of a QPart are layed out from top to bottom.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartAlignment">
      <summary>
            Defines the alignment of a part inside its parent part.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartAlignment.Near">
      <summary>
            Near alignment, most often left or top.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartAlignment.Centered">
      <summary>
            Centered alignment. Always the middle.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartAlignment.Far">
      <summary>
            Far alignment, most often right or bottom.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartLayoutOptions">
      <summary>
            Defines additional options to layout or calculate a QPart.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutOptions.None">
      <summary>
            No options
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartVisibilitySelectionTypes">
      <summary>
            Defines selection types for the visibility of parts. This is used with <see cref="M:Qios.DevSuite.Components.IQPart.IsVisible(Qios.DevSuite.Components.QPartVisibilitySelectionTypes)" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartVisibilitySelectionTypes.IncludeNone">
      <summary>
            Include no visibility property into the selection. This implicates that all the visibility properties are ignored.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartVisibilitySelectionTypes.IncludeConfiguration">
      <summary>
            Include the configuration into the selection. This should look at the <see cref="M:Qios.DevSuite.Components.IQPartSharedProperties.GetVisible(Qios.DevSuite.Components.IQPart)" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartVisibilitySelectionTypes.IncludeVisible">
      <summary>
            Includes the default visible property.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartVisibilitySelectionTypes.IncludeHiddenBecauseOfConstraints">
      <summary>
            Includes whether the part is hidden because of physical constraints. Remark: this doesn't mean that the user
            doesn't have right on the item. Just that the item is hidden because it doesn't fit on the screen.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartVisibilitySelectionTypes.IncludeAll">
      <summary>
            Include all visibility properties.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartVisibilitySelectionTypes.Default">
      <summary>
            The default. This is IncludeAll.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartSelectionTypes">
      <summary>
            Contains selectionTypes to select parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.None">
      <summary>
            No items
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.HorizontalNearAligned">
      <summary>
            Defines the selectionType for horizontal near aligned parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.HorizontalCenterAligned">
      <summary>
            Defines the selectionType for horizontal center aligned parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.HorizontalFarAligned">
      <summary>
            Defines the selectionType for horizontal far aligned parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.VerticalNearAligned">
      <summary>
            Defines the selectionType for vertical near aligned parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.VerticalCenterAligned">
      <summary>
            Defines the selectionType for vertical center aligned parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.VerticalFarAligned">
      <summary>
            Defines the selectionType for vertical far aligned parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.StretchHorizontal">
      <summary>
            Defines the selectionType for horizontal stretched  parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.StretchVertical">
      <summary>
            Defines the selectionType for vertical stretched parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.ShrinkHorizontal">
      <summary>
            Defines the selectionType for horizontal shrinked parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.ShrinkVertical">
      <summary>
            Defines the selectionType for vertical shrinked parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.SetToMaximumWidth">
      <summary>
            Defines the selection for items set to maximum width,
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.SetToMinimumWidth">
      <summary>
            Defines the selection for items set to minimum width,
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.SetToMaximumHeight">
      <summary>
            Defines the selection for items set to maximum height.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.SetToMinimumHeight">
      <summary>
            Defines the selection for items set to minimum height
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.NotSetToMaximumWidth">
      <summary>
            Defines the selection for items not set to maximum width,
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.NotSetToMinimumWidth">
      <summary>
            Defines the selection for items not set to minimum width,
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.NotSetToMaximumHeight">
      <summary>
            Defines the selection for items not set to maximum height.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.NotSetToMinimumHeight">
      <summary>
            Defines the selection for items not set to minimum height
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.NotStretchHorizontal">
      <summary>
            Defines the selection for items that are not stretched horizontal
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.NotStretchVertical">
      <summary>
            Defines the selection for items that are not stretched vertical
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.NotShrinkHorizontal">
      <summary>
            Defines the selection for items that are not shrinked horizontal
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.NotShrinkVertical">
      <summary>
            Defines the selection for items that are not shrinked vertical
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.AllHorizontalAligned">
      <summary>
            Defines all horizontal aligned selections
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.AllVerticalAligned">
      <summary>
            Defines all vertical aligned selections
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartSelectionTypes.All">
      <summary>
            All items
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartCalculatePartSizeOptions">
      <summary>
            Contains additional options when calculating a QPart size with <see cref="M:Qios.DevSuite.Components.IQPartLayoutEngine.CalculatePartSize(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartCalculatePartSizeOptions.None">
      <summary>
            No options specified
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartCalculatePartSizeOptions.PeekOnly">
      <summary>
            Peek only. Means no sizes are cleared or set.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartBoundsType">
      <summary>
            Identifies the various bounds of a <see cref="T:Qios.DevSuite.Components.IQPart" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartBoundsType.InnerBounds">
      <summary>
            The inner bounds
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartBoundsType.Bounds">
      <summary>
            The bounds
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartBoundsType.OuterBounds">
      <summary>
            The outer bounds
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartLayoutStage">
      <summary>
            Is used to define the stages in the layout cyclus of a IQPart. This is mainly used by <see cref="T:Qios.DevSuite.Components.IQPartLayoutListener" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutStage.None">
      <summary>
            No stage.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutStage.PreparingForLayout">
      <summary>
            Is called before anything is done for all the items.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutStage.CalculatingSize">
      <summary>
            Is called before the size is calculated.
            When the size gets calculated every parts determine its size based on the content.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutStage.SizeCalculated">
      <summary>
            Is called after the size is calculated.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutStage.ApplyingConstraints">
      <summary>
            Is called before constraints are applied.
            When constraints are applied, every part can adjust itself to constraints, as for example the size it must be able to fit in.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutStage.ConstraintsApplied">
      <summary>
            Is called after contstrainst are applied.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutStage.CalculatingBounds">
      <summary>
            Is called before the bounds is calculated.
            When the bounds are calculated, all the positions of the parts are set.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutStage.BoundsCalculated">
      <summary>
            Is called after the bounds is calculated.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutStage.LayoutFinished">
      <summary>
            The layout is finished.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartPaintStage">
      <summary>
            Is used to define the stages in the paint cyclus of a IQPart. This is mainly used by <see cref="T:Qios.DevSuite.Components.IQPartPaintListener" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintStage.None">
      <summary>
            No stage.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintStage.PaintingBackground">
      <summary>
            Is called before the background is painted of a part that required painting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintStage.BackgroundPainted">
      <summary>
            Is called after the background is painted of a part that required painting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintStage.PaintingContent">
      <summary>
            Is called before the content is painted of a part that required painting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintStage.ContentPainted">
      <summary>
            Is called after the content is painted of a part that required painting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintStage.PaintingForeground">
      <summary>
            Is called before the foreground is painted of a part that required painting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintStage.ForegroundPainted">
      <summary>
            Is called after the foreground is painted of a part that required painting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintStage.PaintFinished">
      <summary>
            Is called for every part (even invisible or out of bounds parts) after the paint is finished.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartPaintLayer">
      <summary>
            Defines the layers of an IQPart that can be painted
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintLayer.Background">
      <summary>
            The background
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintLayer.Content">
      <summary>
            The content
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartPaintLayer.Foreground">
      <summary>
            The foreground
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorStyle">
      <summary>
            The QColorStyle enumeration is used to define how the Backgrounds of various objects are drawn.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorStyle.Solid">
      <summary>
            Use a solid BackgroundStyle.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorStyle.Gradient">
      <summary>
            Use a Gradient BackgroundStyle.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorStyle.Metallic">
      <summary>
            Use the metalic BackgroundStyle
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QTabPageDocumentDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QExplorerBar" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabPageDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QTabPageDocumentDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration">
      <summary>
            Contains configuration properties for the caption of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.PropAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.PropTitleConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.PropShowDialogConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.GetRequestedCount">
      <summary>
            Gets the requested property count.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden. Gets the defaultContentPartLayoutOrder
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.Appearance">
      <summary>
            Gets the appearance of the captionArea of a QRibbonPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.TitleConfiguration">
      <summary>
            Gets the configuration of the text of the captionArea of a QRibbonPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionConfiguration.ShowDialogConfiguration">
      <summary>
            Gets the configuration of the ShowDialog button of the captionArea of a QRibbonPanel.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionTitleConfiguration">
      <summary>
            Defines the configuration for the text of the caption of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionTitleConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionShowDialogConfiguration">
      <summary>
            Defines the configuration for the ShowDialog button of the caption of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionShowDialogConfiguration.PropShowDialogMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionShowDialogConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionShowDialogConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionShowDialogConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionShowDialogConfiguration.GetRequestedCount">
      <summary>
            Gets the requested propertyCount.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionShowDialogConfiguration.CreateAppearance">
      <summary>
            Overridden. Gets the appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionShowDialogConfiguration.UsedShowDialogMask">
      <summary>
            Gets the actual used ShowDialogMask. This is based on whether the ShowDialogMask
            is set. If it is not set the default is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionShowDialogConfiguration.ShowDialogMask">
      <summary>
            Gets or sets the base image that is used to for the ShowDialog button.
            In the Mask the Color Red is replaced by the TextColor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonShowDialogButtonAppearance">
      <summary>
            Contains the appearance for ShowDialog button item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonShowDialogButtonAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonShowDialogButtonAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionAppearance">
      <summary>
            Defines the Appearance class for the caption of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelCaptionAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStrip">
      <summary>
            This class is used by <see cref="T:Qios.DevSuite.Components.QTabControl" /> to hold its tabbuttons. 
            </summary>
      <remarks>
            It is not possible to create QTabStrips manually. This is done automatically by <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.CreatePainter">
      <summary>
            Creates the QTabStripPainter for the QTabStrip
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.CreateConfiguration(System.Drawing.Font)">
      <summary>
            Creates the Configuration for the QTabStrip
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.CreateNavigationArea">
      <summary>
            Creates the Navigation Area for the QTabStrip.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.BeginInit">
      <summary>
            Starts the initialisation sequence. When initializing the QTabButton.ButtonOrder property
            is not changed when it is not -1 and added to a collection, else it is possible
            that the ButtonOrder of tabbuttons are increased.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.EndInit">
      <summary>
            Stops the initialisation sequence
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.RetrievePaintParams">
      <summary>
            Retrieves the paint params that should be used to draw this QTabStrip with.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.CalculateBoundsToControl(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Calculates the specified bounds to a bounds on the parent control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.CalculateControlBoundsToThis(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Calculates the specified control bounds to a bounds on this tabStrip.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.CalculatePointToControl(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Calculates the specified point to a point on the parenting control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.CalculateControlPointToThis(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Calculates the specified control point to a point on this tabStrip.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.IsOnStripPart(System.Drawing.Point)">
      <summary>
            Gets whether the specified controlPoint is on a part of this QTabStrip.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.SuspendLayout">
      <summary>
            Suspends any layout
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.ResumeLayout">
      <summary>
            Resumes layout
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetNextButton(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow,System.Boolean)">
      <summary>
            Gets the next (possible visible, possible enabled) button. If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetPreviousButton(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow,System.Boolean)">
      <summary>
            Gets the previous (possible visible, possible enabled) button. If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetNextVisibleButton(Qios.DevSuite.Components.QTabButton,System.Boolean)">
      <summary>
            Gets the next visible button. If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetPreviousVisibleButton(Qios.DevSuite.Components.QTabButton,System.Boolean)">
      <summary>
            Gets the previous visible button. If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetNextButtonForNavigation(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,System.Boolean)">
      <summary>
            Gets the next button for navigation. The difference between this and the regular <see cref="M:Qios.DevSuite.Components.QTabStrip.GetNextButton(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow,System.Boolean)" /> is that it ignores rows and just looks at the buttonOrder and Alignment.
            If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetPreviousButtonForNavigation(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,System.Boolean)">
      <summary>
            Gets the previous button for navigation. The difference between this and the regular <see cref="M:Qios.DevSuite.Components.QTabStrip.GetPreviousButton(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow,System.Boolean)" /> is that it ignores rows and just looks at the buttonOrder and Alignment.
            Gets the previous (possible visible, possible enabled) button. If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetNextAccessibleButtonForNavigation(Qios.DevSuite.Components.QTabButton,System.Boolean)">
      <summary>
            Gets the next visible and enabled button for navigation. If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetPreviousAccessibleButtonForNavigation(Qios.DevSuite.Components.QTabButton,System.Boolean)">
      <summary>
            Gets the previous visible and enabled button for navigation. If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.ScrollLeft">
      <summary>
            Scolls the buttons one step left. Returns whether it did scroll.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.ScrollLeft(System.Int32,System.Boolean)">
      <summary>
            Scrolls the buttons with the specified amount left. Returns whether it did scroll.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.ScrollOneButtonLeft(System.Boolean,System.Boolean)">
      <summary>
            Scrolls one button left. Returns true when scrolling took place.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.ScrollRight">
      <summary>
            Scolls the buttons one step right. Returns whether it did scroll.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.ScrollRight(System.Int32,System.Boolean)">
      <summary>
            Scrolls the buttons with the specified amount right. Returns whether it did scroll
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.ScrollOneButtonRight(System.Boolean,System.Boolean)">
      <summary>
            Scrolls one button right. Returns true when scrolling took place.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.MakeButtonRowFirstRow(Qios.DevSuite.Components.QTabButton,System.Boolean)">
      <summary>
            Makes the row of the button the first row when the configuration is set to MakeFirstRow. Returns true when it changed something.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.ScrollButtonIntoView(Qios.DevSuite.Components.QTabButton,System.Boolean,System.Boolean)">
      <summary>
            Scrolls the specified button into the view when the configuration specifies that scrolling must be used. Returns whether it did scroll.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.StartScrolling(System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Starts a scroll animation till the specified point is visible. Whether tillPointVisible indicates
            an X or an Y depends on the dockStyle of the tabStrip.
            when tillPointVisible is 0, then it scrolls to the most left, when tillPointVisible is <see cref="P:Qios.DevSuite.Components.QTabStrip.RequiredButtonsSize" />
            (Width or Height depending on the Dock property) then it scrolls to the most right.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.StopScrolling">
      <summary>
            Stops the scrolling process.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetButtonAtPoint(System.Drawing.Point,Qios.DevSuite.Components.QTabButtonSelectionTypes)">
      <summary>
            Returns the  TabButton at the specified controlPoint that matches the selection. If there is no TabButton at that point
            it returns null. the controlPoint must be in the coordinates of the parenting control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.GetAccessibleButtonAtPoint(System.Drawing.Point)">
      <summary>
            Returns the accessible TabButton (enabled and visible) at the specified controlPoint. If there is no TabButton at that point
            it returns null. the controlPoint must be in the coordinates of the parenting control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.UpdatePropertiesFromConfiguration">
      <summary>
            Updates various properties for this tabStrip that are filled out via the Configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.Dispose">
      <summary>
            Disposes this QTabStrip
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStrip.Finalize">
      <summary>
            Defines the destructor.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabStrip.ActiveButtonChanging">
      <summary>
            Gets raised when the active button is about to change.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabStrip.ActiveButtonChanged">
      <summary>
            Gets raised when the active button is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabStrip.HotButtonChanged">
      <summary>
            Gets raised when the hot button is changed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabStrip.CloseButtonClick">
      <summary>
            Gets raised when the close button is clicked
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.Configuration">
      <summary>
            Gets the configuration of the QTabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.Font">
      <summary>
            Gets or sets the Font used with this QTabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.AdditionalData">
      <summary>
            Gets or sets additional data. This can be used to store additional data for a QTabStrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.LastDrawnGraphicsPath">
      <summary>
            Gets or sets the LastDrawn GraphicsPath, this is used to determine whether the mouse
            is over this button. This should be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.DrawTabStrip(Qios.DevSuite.Components.QTabStrip,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.CloseButtonEnabled">
      <summary>
            Gets or sets whether the CloseButton must be enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.Painter">
      <summary>
            Gets or sets the Painter for the QTabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.IsHorizontal">
      <summary>
            Gets whether this is a horizontal docked QTabStrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.IsInitializing">
      <summary>
            Gets whether this TabStrip is Initializing. When initializing the QTabButton.ButtonOrder property
            is not changed when it is not -1 and added to a collection, else it is possible
            that the ButtonOrder of tabbuttons are increased.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.Bounds">
      <summary>
            Gets the Bounds of the QTabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.OuterBounds">
      <summary>
            Gets the outer bounds of the QTabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.CalculatedSize">
      <summary>
            Contains the size after a call to <see cref="M:Qios.DevSuite.Components.QTabStrip.CalculateLayout(System.Drawing.Size,System.Boolean)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.CalculatedContentBounds">
      <summary>
            Contains the calculated contentBounds after a call to <see cref="M:Qios.DevSuite.Components.QTabStrip.CalculateLayout(System.Drawing.Size,System.Boolean)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.CalculatedButtonAreaBounds">
      <summary>
            Contains the calculated button area bounds after a call to <see cref="M:Qios.DevSuite.Components.QTabStrip.CalculateLayout(System.Drawing.Size,System.Boolean)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.CalculatedScrollArea">
      <summary>
            Gets the area where the buttons can scroll in. This is set via <see cref="M:Qios.DevSuite.Components.QTabStrip.CalculateLayout(System.Drawing.Size,System.Boolean)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.RequiredButtonsSize">
      <summary>
            Gets the size that is needed to present all the tabs in. This is set via <see cref="M:Qios.DevSuite.Components.QTabStrip.CalculateLayout(System.Drawing.Size,System.Boolean)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.TabButtons">
      <summary>
            Returns the TabButtonCollection that contains the TabButtons
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.TabButtonRows">
      <summary>
            Gets the TabButtonRows for this QTabStrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.Dock">
      <summary>
            Gets the Orientation of the QTabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.Parent">
      <summary>
            Gets or the ParentControl this QTabStrip belongs to
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.NavigationArea">
      <summary>
            Gets the NavigationArea of the QTabStrip. This contains the scroll and close buttons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.ActiveButton">
      <summary>
            Gets or sets the ActiveButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.HotButton">
      <summary>
            Gets or sets the Hot button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.IsDisposed">
      <summary>
            Indicates if this QTabStrip is Disposed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.HasVisibleButtons">
      <summary>
            Returns whether this collection has visible buttons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.VisibleButtonCount">
      <summary>
            Gets the amount of buttons that are visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.IsVisible">
      <summary>
            Gets whether this strip should be visible. This depends on the visible button count and whether
            the strip must be visible without buttons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.AccessibleButtonCount">
      <summary>
            Get the amount of buttons that are accessiable.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.FirstDrawnButton">
      <summary>
            Gets the first drawn button. This is the first visible button when scrolling is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.LastDrawnButton">
      <summary>
            Gets the last drawn button. This is the last visible button when scrolling is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.CanScrollLeft">
      <summary>
            Gets whether this strip can scroll to the left
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.CanScrollRight">
      <summary>
            Gets whether this strip can scroll to the left
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.ScrollLeftAvailable">
      <summary>
            Gets the amount of pixels that can be scrolled to the left.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStrip.ScrollRightAvailable">
      <summary>
            Gets the amount of pixels that can be scrolled to the right.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripStackBehaviors">
      <summary>
            Defines the behavior of a <see cref="T:Qios.DevSuite.Components.QTabStrip" /> when the buttons are stacked.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripStackBehaviors.None">
      <summary>
            The button has no behavior,
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripStackBehaviors.ExtendButtonBackground">
      <summary>
            The buttonBackground is drawn till the bottom of the strip (when docked top).
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripStackBehaviors.MoveRowToFrontOnActivate">
      <summary>
            Moves the row to the front when a button is activated.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripScrollBehaviors">
      <summary>
            Defines various the scroll behavior of the QTabStrip
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripScrollBehaviors.Animate">
      <summary>
            The buttons animate.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripScrollBehaviors.OneButton">
      <summary>
            Every click scrolls one button.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripSizeBehaviors">
      <summary>
            Defines restyle flags to use with a <see cref="T:Qios.DevSuite.Components.QTabStrip" /> to define how the QTabStrip should
            behave when the QTabButtons don't fit.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripSizeBehaviors.None">
      <summary>
            No size behavior.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripSizeBehaviors.Shrink">
      <summary>
            The buttons are shrunken till they reach their minimum size.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripSizeBehaviors.Scroll">
      <summary>
            Scrollbuttons are added and you can scroll the buttons.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripSizeBehaviors.Stack">
      <summary>
            The buttons are stacked on eachother to create multiple rows of TabButtons
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabStripSizeBehaviors.Grow">
      <summary>
            The buttons are grown while they don't fit.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripButtonChangeEventHandler">
      <summary>
            Defines the delegate used for the <see cref="E:Qios.DevSuite.Components.QTabStrip.ActiveButtonChanging" /> and the <see cref="E:Qios.DevSuite.Components.QTabStrip.ActiveButtonChanged" /> event.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripButtonChangeEventArgs">
      <summary>
            Defines the EventArgs used for the <see cref="E:Qios.DevSuite.Components.QTabStrip.ActiveButtonChanging" />, <see cref="E:Qios.DevSuite.Components.QTabStrip.ActiveButtonChanged" />  and the <see cref="E:Qios.DevSuite.Components.QTabStrip.HotButtonChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabStripButtonChangeEventArgs.#ctor(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButton,System.Boolean)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripButtonChangeEventArgs.FromButton">
      <summary>
            Gets the FromButton. This is the button that is deactivating / deactivated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripButtonChangeEventArgs.ToButton">
      <summary>
            Gets or sets the ToButton. This is the button that is activated. During the <see cref="E:Qios.DevSuite.Components.QTabStrip.ActiveButtonChanging" /> event
            this can be set.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabControlConfiguration">
      <summary>
            Contains configuration properties the <see cref="T:Qios.DevSuite.Components.QTabControl" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabControlConfiguration.PropContentMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabControlConfiguration.PropContentAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabControlConfiguration.PropAnimationInterval">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabControlConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabControlConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlConfiguration.CreateContentApperearance">
      <summary>
            Creates the ContentAppearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlConfiguration.Dispose">
      <summary>
            Disposes the Configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlConfiguration.Dispose(System.Boolean)">
      <summary>
            Disposes this Configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabControlConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlConfiguration.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabControlConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlConfiguration.AnimationInterval">
      <summary>
            Gets or sets the internal for the animation timer
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlConfiguration.ContentMargin">
      <summary>
            Gets or sets the margin used between the TabStrips and the ContentShape or TabPages.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlConfiguration.ContentAppearance">
      <summary>
            Gets or sets the appearance of the content of a QTabControl. The content is the part between the TabStrips and the TabPages.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabControlContentAppearance">
      <summary>
            Defines the Appearance class for the <see cref="T:Qios.DevSuite.Components.QTabControl" /> content. The content of a QTabControl
            is the part between the TabStrips and the QTabControl.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabControlContentAppearance.PropUseControlBackgroundForShape">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabControlContentAppearance.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabControlContentAppearance.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlContentAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabControlContentAppearance.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this appearance.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlContentAppearance.UseControlBackgroundForShape">
      <summary>
            Gets or sets whether the Control (QTabPage) background must be used to fill the content Shape.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlContentAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonCollection">
      <summary>
            This class is used by <see cref="T:Qios.DevSuite.Components.QTabStrip" /> to hold its <see cref="T:Qios.DevSuite.Components.QTabButton" /> instances.
            </summary>
      <remarks>
            It is not possible to add QTabButtons to this collection manually, this is done automatically by the <see cref="T:Qios.DevSuite.Components.QTabControl" /> when add an instance of <see cref="T:Qios.DevSuite.Components.QTabPage" /> to it.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.RemoveAt(System.Int32)">
      <summary>
            Overridden. Should not be called.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.Clear">
      <summary>
            Overridden. Should not be called.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.IndexOf(Qios.DevSuite.Components.QTabButton)">
      <summary>
            Returns the Index of QTabButton. If button is not in the list it returns -1.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.Contains(Qios.DevSuite.Components.QTabButton)">
      <summary>
            Returns whether this collection contains IQTabButton
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.CopyTo(Qios.DevSuite.Components.QTabButton[],System.Int32)">
      <summary>
            Copies this collection to the buttons collection.
            </summary>
      <param name="buttons">The array to copy to.</param>
      <param name="index">The index to start at.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.GetButtonIndexWithControl(System.Windows.Forms.Control)">
      <summary>
            Returns the index of the QTabButton that has control as Control. Returns -1 if there is none.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.GetButtonWithControl(System.Windows.Forms.Control)">
      <summary>
            Returns the QTabButton that has control as Control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.GetButtonCountThatMatchSelection(Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow)">
      <summary>
            Gets the amount of buttons that matches the specified selection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.HasButtonsThatMatchSelection(Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow)">
      <summary>
            Gets whether this collection has buttons that match the specified selection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.GetPreviousButton(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow,System.Boolean)">
      <summary>
            Gets the previous (possible visible, possible enabled, etc) button based on the Row, Alignment and ButtonOrder. If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.GetNextButton(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow,System.Boolean)">
      <summary>
            Gets the next (possible visible, possible enabled, etc) button based on the Row, Alignment and ButtonOrder. If looparound is set it starts over again when no button is found.
            If there are no buttons it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.GetNextButtonForNavigation(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,System.Boolean)">
      <summary>
            Gets the next Button for navigation. The difference with the regular <see cref="M:Qios.DevSuite.Components.QTabButtonCollection.GetNextButton(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow,System.Boolean)" /> is that it ignores rows, and
            just looks at buttonOrder and alignment.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.GetPreviousButtonForNavigation(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,System.Boolean)">
      <summary>
            Gets the previous Button for navigation. The difference with the regular <see cref="M:Qios.DevSuite.Components.QTabButtonCollection.GetPreviousButton(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow,System.Boolean)" /> is that it ignores rows, and
            just looks at buttonOrder and alignment.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonCollection.OnClear">
      <summary>
            Handles the Clear process.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonCollection.TabStrip">
      <summary>
            Gets the TabStrip this button belongs to
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonCollection.HasVisibleButtons">
      <summary>
            Returns whether this collection has visible buttons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonCollection.HasAccessisbleButtons">
      <summary>
            Returns whether this collection has accessisble buttons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonCollection.VisibleButtonCount">
      <summary>
            Gets the amount of buttons that are visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonCollection.AccessibleButtonCount">
      <summary>
            Gets the amount of buttons that are accessible (that is enabled and visible).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonCollection.Item(System.Int32)">
      <summary>
            Returns the QTabButton at index index
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingWindowCloseType">
      <summary>
            Defines close types for the QFloatingWindow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowCloseType.None">
      <summary>
            No or unknown reason for closing.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingWindowCloseType.ClickedOutsideWindow">
      <summary>
            The user clicked outside the window
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingMenu">
      <summary>
            This is an implementation of <see cref="T:Qios.DevSuite.Components.QMenu" /> to represent floating menus. It is mainly used as a submenu of a <see cref="T:Qios.DevSuite.Components.QToolBar" /> or the menu
            used by a <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenu">
      <summary>
            The QMenu is a base class for <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> and <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.#ctor">
      <summary>
            Default Constructor. Creates a QMenu with its own <see cref="T:Qios.DevSuite.Components.QCommandCollection" /> as MenuItems. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.#ctor(Qios.DevSuite.Components.IQCommandContainer)">
      <summary>
            Creates a QMenu with a Custom commandContainer as parent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.#ctor(Qios.DevSuite.Components.QCommand,Qios.DevSuite.Components.QMenuItemCollection)">
      <summary>
            Constructor. Creates a QMenu and uses the specified <see cref="T:Qios.DevSuite.Components.QCommandCollection" /> as MenuItems.
            </summary>
      <param name="parentCommand">Contains the parentCommand this QMenu belongs to</param>
      <param name="menuItems">Contains the menuItems to fill this QMenu with</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.FindMenuItem(System.String)">
      <summary>
            Searches the MenuItem structure to find the MenuItem with RelativeName. The relativeName
            must be relative to this QMenu. it returns the MenuItem when found, else null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.ActivateMenuItem(Qios.DevSuite.Components.QMenuItem,System.Boolean,System.Boolean,Qios.DevSuite.Components.QMenuItemActivationType)">
      <summary>
            Activates a MenuItem.
            </summary>
      <param name="menuItem">The MenuItem to activate</param>
      <param name="animate">
            Indicates if a ChildMenu should animate when the activated menuItem has ChildItems.
            When this parameter is set to true it is defined by the Configuration whether to animate.
            </param>
      <param name="showHotkeyPrefix">
            Indicates if a ChildMenu should show its HotkeyPrefixes when the activated menuItem has ChildItems.
            When this parameter is set to true it is defined by the Configuration whether to show the HotKeyPrefixes.
            </param>
      <param name="activationType">Sets the activationType that is used by the various events.</param>
      <returns>False when the activation is canceled in one of the events, else true.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.DepersonalizeMenu">
      <summary>
            Depersonalizes the QMenu and shows every menuItem that has <see cref="P:Qios.DevSuite.Components.QMenuItem.VisibleWhenPersonalized" /> set to false.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.ShowMenu(System.Drawing.Rectangle,System.Drawing.Rectangle,Qios.DevSuite.Components.QRelativePositions,Qios.DevSuite.Components.QCommandDirections)">
      <summary>
            When implemented, it shows the QMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.HandleKeyDown(System.Windows.Forms.Keys)">
      <summary>
            Obsolete. Use the overload containing the destinationControl and the message.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            When implemented, handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.HandleKeyUp(System.Windows.Forms.Keys)">
      <summary>
            Obsolete. Use the overload containing the destinationControl and the message.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            When implemented, handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.CalculateRequestedSize">
      <summary>
            When implemented, it calculates the requested size for this QMenu. This is only implemented by a <see cref="T:Qios.DevSuite.Components.QFloatingMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.DrawMenuItem(Qios.DevSuite.Components.QMenuItem,System.Drawing.StringFormat,Qios.DevSuite.Components.QCommandPaintOptions,System.Drawing.Graphics)">
      <summary>
            Draws the specified MenuItem on a QMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.HideMenu">
      <summary>
            Hides the QMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.GetMenuItemAtPosition(System.Int32,System.Int32)">
      <summary>
            Returns QMenuItem at the specified coordinates. Returns null if none was found.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.CreateAppearanceInstance">
      <summary>
            Overridden. Returns a new QAppearance.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseMove on the QMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseDown on the QMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.OnMouseLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the MouseLeave on the QMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the QMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.ResetMenuState">
      <summary>
            Resets the QMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles some Window Messages for a QMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Overridden. Handles the TimerElapsed for the HasMoreItemsDown and Up buttons.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenu.StopTimer">
      <summary>
            Stops the timer
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.MenuName">
      <summary>
            Returns the Name of the QMenu. This is equal to the FullName of its <see cref="P:Qios.DevSuite.Components.QMenuItemContainer.ParentMenuItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.ForeColor">
      <summary>
            Overridden. Gets or sets the ForeColor of the QMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.MenuItems">
      <summary>
            Gets the collection of MenuItems of this QMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.ParentMenu">
      <summary>
            Gets the parent QMenu when there is one.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.RootMenu">
      <summary>
            Gets the root QMenu of the menu structure.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.HotMenuItem">
      <summary>
            Gets or sets the MenuItem the mouse is currently over.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.ExpandedMenuItem">
      <summary>
            Gets the MenuItem that is currently expanded. Use the <see cref="M:Qios.DevSuite.Components.QMenuItemContainer.SetExpandedItem(Qios.DevSuite.Components.QMenuItem,System.Boolean,System.Boolean,Qios.DevSuite.Components.QMenuItemActivationType)" /> to set it.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.BackColorPropertyName">
      <summary>
            Overridden. Returns the MenuBackground1 property from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.BackColor2PropertyName">
      <summary>
            Overridden. Returns the MenuBackground2 property from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenu.BorderColorPropertyName">
      <summary>
            Overridden. Returns the MenuBorder property from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.#ctor">
      <summary>
            Default Constructor. Creates a QFloatingMenu with its own <see cref="T:Qios.DevSuite.Components.QCommandCollection" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.#ctor(Qios.DevSuite.Components.IQCommandContainer)">
      <summary>
            Creates a QFloatingMenu with a Custom commandContainer as parent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.#ctor(Qios.DevSuite.Components.QCommand,Qios.DevSuite.Components.QMenuItemCollection)">
      <summary>
            Constructor. Creates a QFloatingMenu and uses the specified <see cref="T:Qios.DevSuite.Components.QCommandCollection" />.
            </summary>
      <param name="parentCommand">Contains the parent command this QFloatingMenu belongs to.</param>
      <param name="menuItems">Contains the menuItems to fill this QFloatingMenu with.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.ResetConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.ShouldSerializeConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.SetOwnerWindowCore">
      <summary>
            Overridden. Sets the ownerwindow of this window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden. Also sets the shade bounds core when needed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.HandleCommandChanged(Qios.DevSuite.Components.QCommandUIRequest,Qios.DevSuite.Components.QCommand)">
      <summary>
            Overridden. Handles the Command Change. It only handles it when the QFloatingMenu
            is visible, because the layout gets performed anyway on show.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.HandleCommandCollectionChanged(System.Int32,System.Int32)">
      <summary>
            Overridden. Handles the Command Collection Change. It only handles it when the QFloatingMenu
            is visible, because the layout gets performed anyway on show.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.ShowMenu(System.Drawing.Rectangle,System.Drawing.Rectangle,Qios.DevSuite.Components.QRelativePositions,Qios.DevSuite.Components.QCommandDirections)">
      <summary>
            Shows this QFloatingMenu.
            </summary>
      <param name="bounds">Contains the bounds of the QFloatingMenu</param>
      <param name="openingItemBounds">
            The bounds of the item (in screencoordinates) that opened the item.
            This is used when the position is recalculated by the <see cref="M:Qios.DevSuite.Components.QMenu.DepersonalizeMenu" /> method</param>
      <param name="openingItemRelativePosition">
            The relative position of the Item that opened the Item.
            This is used when the Position is recalculated by the <see cref="M:Qios.DevSuite.Components.QMenu.DepersonalizeMenu" /> method
            </param>
      <param name="animateDirection">The direction of the animation</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.ShowChildMenu(Qios.DevSuite.Components.QMenuItem,System.Boolean,System.Boolean)">
      <summary>
            Overridden. Shows the ChildMenu of the specified menuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Overridden. Handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.CalculateRequestedSize">
      <summary>
            Calculates the requested size for this QFloatingMenu.
            </summary>
      <returns>the size the QFloatingMenu wishes to be.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Hides or shows the QFloatingMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles WindowMessages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Handles the layout of this QFloatingMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.DrawMenuItem(Qios.DevSuite.Components.QMenuItem,System.Drawing.StringFormat,Qios.DevSuite.Components.QCommandPaintOptions,System.Drawing.Graphics)">
      <summary>
            Draws the MenuItem on a QFloatingMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the menuItems.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the background and the shading.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenu.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Handles the ConfigurationChanged event.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenu.Configuration">
      <summary>
            Gets or sets the Configuration of this QFloatingMenu. The Configuration defines the layout of the QFloatingMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenu.OwnerWindow">
      <summary>
            Overridden. Gets or sets the OwnerWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenu.RequestedSize">
      <summary>
            Returns the requested size. This is the size the menu needs to draw all its items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenu.CreateParams">
      <summary>
            Overridden. Returns the CreateParams for this QFloatingMenu.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QNonClientAreaLocation">
      <summary>
            Defines where the user clicked on the NonClientArea
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QNonClientAreaLocation.Nowhere">
      <summary>
            The user didn't click anyware
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QNonClientAreaLocation.Caption">
      <summary>
            The user clicked on the caption
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QNonClientAreaLocation.SizingArea">
      <summary>
            The user clicked on the top / left / right or bottom border for sizing.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QSizingAction">
      <summary>
            Indicates what part of a control can get sized.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingAction.None">
      <summary>
            No action.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingAction.SizingLeft">
      <summary>
            Left is sizing.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingAction.SizingRight">
      <summary>
            Right is sizing.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingAction.SizingTop">
      <summary>
            Top is sizing.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingAction.SizingBottom">
      <summary>
            Bottom is sizing.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingAction.SizingTopLeft">
      <summary>
            TopLeft is sizing.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingAction.SizingBottomLeft">
      <summary>
            BottomLeft is sizing.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingAction.SizingTopRight">
      <summary>
            TopRight is sizing.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingAction.SizingBottomRight">
      <summary>
            BottomRight is sizing.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QUserSizingEventHandler">
      <summary>
            Is used by <see cref="T:Qios.DevSuite.Components.QContainerControlBase" /> in the UserResize event.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QUserSizedEventHandler">
      <summary>
            Is used by <see cref="T:Qios.DevSuite.Components.QContainerControlBase" /> in the UserSized event.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QUserSizedEventArgs">
      <summary>
            Is used with the UserSized  event of a <see cref="T:Qios.DevSuite.Components.QContainerControlBase" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QUserSizedEventArgs.#ctor(System.Drawing.Size)">
      <summary>
            Creates a new QUserSizedEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QUserSizedEventArgs.NewSize">
      <summary>
            Gets the new size of the sized Control.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QUserSizingEventArgs">
      <summary>
            Is used by the <see cref="T:Qios.DevSuite.Components.QContainerControlBase" /> in the UserResize event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QUserSizingEventArgs.#ctor(System.Drawing.Size)">
      <summary>
            Constructor, creates a new <see cref="T:Qios.DevSuite.Components.QUserSizingEventArgs" /> event args.
            </summary>
      <param name="newSize">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.QUserSizingEventArgs.NewSize">
      <summary>
            Gets or sets the new size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QUserSizingEventArgs.Cancel">
      <summary>
            Gets or sets whether the size action should be canceled.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QNonClientAreaMouseEventHandler">
      <summary>
            Defines the delegate used for NonClientArea mouse events on the <see cref="T:Qios.DevSuite.Components.QContainerControlBase" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QNonClientAreaMouseEventArgs">
      <summary>
            Defines MouseEventArgs for the NonClientArea mouse events on the <see cref="T:Qios.DevSuite.Components.QContainerControlBase" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QNonClientAreaMouseEventArgs.#ctor(Qios.DevSuite.Components.QMouseAction,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,Qios.DevSuite.Components.QNonClientAreaLocation,Qios.DevSuite.Components.QSizingAction)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNonClientAreaMouseEventArgs.MouseAction">
      <summary>
            Gets the executed mouse action.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNonClientAreaMouseEventArgs.NonClientAreaLocation">
      <summary>
            Gets the NonClientAreaLocation. This defines where the user hit the NonClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNonClientAreaMouseEventArgs.SizingAction">
      <summary>
            Gets the SizingAction. This is filled when the NonClientAreaLocation is set to SizingArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNonClientAreaMouseEventArgs.CancelDefaultAction">
      <summary>
            Gets or sets whether the DefaultAction must be canceled.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandConfiguration">
      <summary>
            Contains configuration properties for instances of <see cref="T:Qios.DevSuite.Components.QCommandContainer" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandConfiguration.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandConfiguration.CreateCommandAppearance">
      <summary>
            Creates the appearance for the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.ActivatedItemAppearance" />. Can be overridden
            to return a custom appearance.
            </summary>
      <returns>The new created appearance.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandConfiguration.ShouldSerializeActivatedItemAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.ActivatedItemAppearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandConfiguration.ResetActivatedItemAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.ActivatedItemAppearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandConfiguration.CalculateSeparatorSize(Qios.DevSuite.Components.QCommandOrientation)">
      <summary>
            Returns the separator size based on the orientation and whether the Mask is set.
            The separatorOrientation must be the separator orientation, not the command orientation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandConfiguration.RetrieveDefaultHasChildItemsMask">
      <summary>
            When overridden, it must create the default HasChildItemsMask.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandConfiguration.SetToDefaultValues">
      <summary>
            Sets this QMenuConfiguration to its defaultvalues.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandConfiguration.IsSetToDefaultValues">
      <summary>
            Returns whether this QMenuConfiguration is set to its defaultvalues.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCommandConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCommandConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.ActivatedItemAppearance">
      <summary>
            Gets the appearance of activated items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.IconSize">
      <summary>
            Gets or sets the prefered IconSize.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.HotkeyVisibilityType">
      <summary>
            Gets or sets if the Hotkey should always be visible, only when Alt is pressed or never.
            This is not used when <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.UsedHotkeyVisibilityType">
      <summary>
            Gets the used HotkeyVisibility type. This depends on whether the WindowsSettings are inherited.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QMenu" /> should inherit WindowsSettings like drawing a shade or animating a menu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.IconsVisible">
      <summary>
            Gets or sets whether icons should be shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.TitlesVisible">
      <summary>
            Gets or sets if titles should be shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.ShortcutsVisible">
      <summary>
            Gets or sets if shortcuts should be shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.ItemMargin">
      <summary>
            Gets or sets the margin between separate items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.ItemPadding">
      <summary>
            Gets or sets the padding between the bounds of an item and the contents of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.IconSpacing">
      <summary>
            Gets or sets the spacing for the icons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.ControlSpacing">
      <summary>
            Gets or sets the spacing for the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.TitleSpacing">
      <summary>
            Gets or sets the spacing for the titles.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.ShortcutSpacing">
      <summary>
            Gets or sets the spacing for the shortcuts.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.SeparatorSpacing">
      <summary>
            Gets or sets the spacing for the separators.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.ExpandingDelay">
      <summary>
            Gets or sets the time that should pass before a hot Item becomes an expanded Item. This is ignored
            when <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> is true or <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.UseExpandingDelay" /> is false.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.UseExpandingDelay">
      <summary>
            Gets or sets whether the QCommandContainer should use the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.ExpandingDelay" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.MinimumItemHeight">
      <summary>
            Gets or sets the minimum height of an Item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.SeparatorSize">
      <summary>
            Gets or sets the size of a separator.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.SeparatorRelativeStart">
      <summary>
            Gets or sets the start of the separator line relative to the default start position.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.SeparatorRelativeEnd">
      <summary>
            Gets or sets the end of the separator line relative to the default end position.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.UsedExpandingDelay">
      <summary>
            Gets the used ExpandingDelay.
            It returns 0 if <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.UseExpandingDelay" /> is false. It returns the Windows setting when <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> is true.
            When the Windows settings are not inherited it returns the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.ExpandingDelay" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.DepersonalizeDelay">
      <summary>
            Gets or sets the time a user has to hover above the DepersonalizeItem of a <see cref="T:Qios.DevSuite.Components.QMenu" /> before the item gets
            unpersonalized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.UsedHasChildItemsMask">
      <summary>
            Gets the actual used HasChildItemsMask. This is based on whether the HasChildItemsMask
            is set. If it is not set the default HasChildItemsMask is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.HasChildItemsMask">
      <summary>
            Gets or sets the base image that is used to show if a MenuItem has ChildItems. In the Mask the Color Red is replaced by the TextColor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.SeparatorMask">
      <summary>
            Gets or sets the base image that is used for the separator. The mask is repeated for the length of the separator. In the Mask the Color Red is replaced by the SeparatorColor.
            When this is not set a line is drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.HasChildItemsSpacing">
      <summary>
            Gets or sets the Spacing for the HasChildItemsIcon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.HasChildItemsImageVisible">
      <summary>
            Gets or sets if the HasChildItemsIcons should be shown when there are child items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandConfiguration.PersonalizedItemBehavior">
      <summary>
            Gets or sets the behavior on how to deal with personalized items.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPersonalizedItemBehavior">
      <summary>
            Defines the behavior of how to handle the <see cref="P:Qios.DevSuite.Components.QMenuItem.VisibleWhenPersonalized" /> property.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersonalizedItemBehavior.DependsOnPersonalized">
      <summary>
            The visibility depends on whether the QMenu is personalized or not.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersonalizedItemBehavior.AlwaysVisible">
      <summary>
            The items are always visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersonalizedItemBehavior.NeverVisible">
      <summary>
            The items are never visible.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QHotkeyVisibilityType">
      <summary>
            Determines when the Hotkey of <see cref="T:Qios.DevSuite.Components.QMenu" /> instances should be visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHotkeyVisibilityType.Always">
      <summary>
            The Hotkey must be always visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHotkeyVisibilityType.Never">
      <summary>
            The Hotkey must be never visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHotkeyVisibilityType.WhenAltIsPressed">
      <summary>
            The Hotkey must be visible when the Alt key is pressed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandAppearance">
      <summary>
            Defines the appeareance for an activated item on a <see cref="T:Qios.DevSuite.Components.QToolBar" /> or <see cref="T:Qios.DevSuite.Components.QMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppStateIndicatorItem">
      <summary>
            A QAppStateIndicatorItem represents one item on a <see cref="T:Qios.DevSuite.Components.QAppStateIndicator" />. Every item 
            contains a state, a description and a name.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppStateIndicatorItem.#ctor(System.String,System.String,System.String,System.Int32,Qios.DevSuite.Components.QAppStateIndicatorType,System.Windows.Forms.PictureBox)">
      <summary>
            Constructor, creates a new QStateIndicatorItem instance.
            </summary>
      <param name="name">the Name of the item</param>
      <param name="description">the description of the item</param>
      <param name="toolTipText">the tooltiptext of the item.  This must contain valid Xml like used on <see cref="T:Qios.DevSuite.Components.QMarkupText" /></param>
      <param name="state">the state of the item</param>
      <param name="stateType">The type of the item</param>
      <param name="pictureBox">The picturebox that contains the Image for this type</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicatorItem.StateName">
      <summary>
            Gets the name of this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicatorItem.StateType">
      <summary>
            Gets the state type of this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicatorItem.Description">
      <summary>
            Gets or sets the description of this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicatorItem.ToolTipText">
      <summary>
            Gets or sets the ToolTip text for this item. This must contain valid Xml like used on <see cref="T:Qios.DevSuite.Components.QMarkupText" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicatorItem.State">
      <summary>
            Gets or sets the state of this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppStateIndicatorItem.PictureBox">
      <summary>
            Returns the PictureBox that shows the Image for this Item.
            This can be an animated gif.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QGradientAppearanceFiller">
      <summary>
            Defines the appearance Filler for a Gradient
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGradientAppearanceFiller.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGradientAppearanceFiller.CreateGradientBrush(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties)">
      <summary>
            Creates a GradientBrush with the specified properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGradientAppearanceFiller.FillRectangleBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the background (usually filling the bounds) with the specified appearance properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGradientAppearanceFiller.FillRectangleForeground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the foreground (usually drawing the borders) with the specified appearance properties
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGradientAppearanceFiller.FillPathBackground(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the background (usually filling the path) with the specified appearance properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGradientAppearanceFiller.FillPathForeground(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the foreground (usually drawing the borders) with the specified appearance properties
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QXmlHelper">
      <summary>
            Contains helper methods for Xml.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.ValidateXmlFragment(System.String,System.Boolean)">
      <summary>
            Validates an XmlFragment this can contain mulitiple tags. If throw exception is true, it trows an exception
            when the fragment is not valid. If throwException is false it returns false when it does not contain a valid Xml fragment.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.LoadObjectFromXmlElement(System.Xml.XPath.IXPathNavigable,System.Object,System.ComponentModel.PropertyDescriptorCollection)">
      <summary>
            Loads the properties of an object from the child elements of an XmlElement.
            </summary>
      <param name="element">The element which child-elements represent the properties.</param>
      <param name="destination">the destination object to initialize.</param>
      <param name="propertiesToSet">The list of properties to set, can be null</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.SaveObjectToXml(System.Xml.XPath.IXPathNavigable,System.Object,System.ComponentModel.PropertyDescriptorCollection)">
      <summary>
            Saves the properties of an object to the child elements of an XmlElement.
            </summary>
      <param name="objectElement">The element which child-elements will represent the properties. This can only be an XmlElement or XmlDocument.</param>
      <param name="source">the source object to read from.</param>
      <param name="propertiesToRead">The list of properties to read. Can ben null</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.AddAttribute(System.Xml.XPath.IXPathNavigable,System.String,System.Object)">
      <summary>
            Adds an attribute to the specified parentElement. The parentElement can only be an XmlElement or XmlDocument.
            </summary>
      <returns>The created Attribute</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.AddElement(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Adds an element to the specified parentElement. The parentElement can only be an XmlElement or an XmlDocument.
            </summary>
      <param name="parentNode">Contains the node to create the element under. This parameter can only be an XmlElement or an XmlDocument.</param>
      <param name="name">Contains the name of the element to create</param>
      <returns>The created Element</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.AddElement(System.Xml.XPath.IXPathNavigable,System.String,System.Object)">
      <summary>
            Adds an element to the specified parentElement. The parentElement can only be an XmlElement or an XmlDocument.
            </summary>
      <param name="parentNode">Contains the node to create the element under. This parameter can only be an XmlElement or an XmlDocument.</param>
      <param name="name">Contains the name of the element to create</param>
      <param name="innerValue">Contains the value to set the text of the created element to.</param>
      <returns>The created Element</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.RemoveAll(System.Xml.XPath.IXPathNavigable)">
      <summary>
            Removes all the childs from the specified element. The element must be an XmlNode.
            </summary>
      <param name="element">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeString(System.Xml.XPath.IXPathNavigable,System.String,System.String)">
      <summary>
            Returns the value of the specified attribute as a string, when not set it returns defaultValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeString(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the value of the specified attribute as a string. If not set it returns an empty string
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeGuid(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the specified attribute as a Guid. If it is not set it returns an empty value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeGuid(System.Xml.XPath.IXPathNavigable,System.String,System.Guid)">
      <summary>
            Returns the specified attribute as a Guid. If it is not set it returns defaultValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeBool(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the specified attribute as a bool. If it is not set it returns false.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeBool(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean)">
      <summary>
            Returns the specified attribute as a bool. If it is not set it returns defaultValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeType(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the specified attribute as a Type. If it is not set it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeInt(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the specified attribute as an integer. If it is not set it returns 0.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeInt(System.Xml.XPath.IXPathNavigable,System.String,System.Int32)">
      <summary>
            Returns the specified attribute as an integer. If it is not set it returns defaultValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeEnum(System.Xml.XPath.IXPathNavigable,System.String,System.Type,System.Enum)">
      <summary>
            Returns the specified value of the name as an enum. Returns defaultValue when not possible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetAttributeEnum(System.Xml.XPath.IXPathNavigable,System.String,System.Type)">
      <summary>
            Returns the specified value of the name as an enum. Returns null when not possible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.SelectChildNavigator(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Selects a single child based on the xpath query from the parentElement
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.SelectChildNavigable(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Selects a single child navigable based on the xpath query from the parentElement.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetNavigableFromNavigator(System.Xml.XPath.XPathNavigator)">
      <summary>
            Gets a IXPatNavigable instance from the specified navigator if it is created via an XmlNode. Else it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.ContainsChildElement(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns whether the specified parentElement contains a childElement with the specified childName
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementString(System.Xml.XPath.IXPathNavigable,System.String,System.String)">
      <summary>
            Returns the inner text value of the first child eLement with the specified name specified element as a string.
            If it is not found it returns defaultValue
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementString(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the inner text value of the first child eLement with the specified name specified element as a string.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementGuid(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the value of the specified childElement as a Guid. If it is not set it returns an empty value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementGuid(System.Xml.XPath.IXPathNavigable,System.String,System.Guid)">
      <summary>
            Returns the value of the specified childElement as a Guid. If it is not set it returns defaulValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementBool(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the value of the specified childElement as a bool. If it is not set it returns false.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementBool(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean)">
      <summary>
            Returns the value of the specified childElement as a bool. If it is not set it returns defaultValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementType(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the value of the specified childElement as a Type. If it is not set it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementInt(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns value the specified childElement as an integer. If it is not set it returns 0.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementInt(System.Xml.XPath.IXPathNavigable,System.String,System.Int32)">
      <summary>
            Returns value the specified childElement as an integer. If it is not set it returns defaultValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementSize(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the specified childElement as a Size struct. If it is not set it returns Size.Empty;
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementSize(System.Xml.XPath.IXPathNavigable,System.String,System.Drawing.Size)">
      <summary>
            Returns the specified childElement as a Size struct. If it is not set it returns defaultValue;
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementRectangle(System.Xml.XPath.IXPathNavigable,System.String)">
      <summary>
            Returns the specified childElement as a Rectangle struct. If it is not set it returns Rectangle.Empty.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementRectangle(System.Xml.XPath.IXPathNavigable,System.String,System.Drawing.Rectangle)">
      <summary>
            Returns the specified childElement as a Rectangle struct. If it is not set it returns defaultValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementEnum(System.Xml.XPath.IXPathNavigable,System.String,System.Type)">
      <summary>
            Returns the value of the specified childElement as an enum. If it is not set it returns null
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlHelper.GetChildElementEnum(System.Xml.XPath.IXPathNavigable,System.String,System.Type,System.Enum)">
      <summary>
            Returns the value of the specified childElement as an enum. If not possible it returns defaultValue
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QXmlSaveAttribute">
      <summary>
            Defines options that can be set on properties that defines how a property is saved when used
            with <see cref="M:Qios.DevSuite.Components.QXmlHelper.SaveObjectToXml(System.Xml.XPath.IXPathNavigable,System.Object,System.ComponentModel.PropertyDescriptorCollection)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlSaveAttribute.#ctor(Qios.DevSuite.Components.QXmlSaveType)">
      <summary>
            Constructor.
            </summary>
      <param name="saveType">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QXmlSaveAttribute.ShouldSaveProperty(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>
            Returns whether the specified property of the specified component should be saved depending on the
            QXmlSaveAttribute and its defaultValue.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QXmlSaveAttribute.SaveType">
      <summary>
            Gets the SaveType
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QXmlSaveType">
      <summary>
            Defines the options used with <see cref="T:Qios.DevSuite.Components.QXmlSaveAttribute" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QXmlSaveType.DependsOnDefaultValue">
      <summary>
            Depends on the default value of the property. If the value equals the default value it is not saved.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QXmlSaveType.AlwaysSave">
      <summary>
            The property is always saved.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QXmlSaveType.NeverSave">
      <summary>
            The property is never saved.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QRange">
      <summary>
            The QRange class is used by the various classes to indicate
            the start and end position of elements.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRange.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructor, creates a new QRange instance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRange.FromStartEnd(System.Int32,System.Int32)">
      <summary>
            Creates a new QRange with Start and End.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRange.FromRectangle(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Creates a QRange from a rectangle. leftRight indicates if the left / right properties must be used or top / bottom.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRange.AdjustRectangle(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Adjusts the specified rectangle to this range. leftRight indicates if the left and right properties must be adjusted, else the top and bottom properties are adjusted.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRange.CreateRectangle(Qios.DevSuite.Components.QRange,Qios.DevSuite.Components.QRange)">
      <summary>
            Creates a rectangle from the 2 specified ranges.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRange.Contains(System.Int32)">
      <summary>
            Returns whether this QRange contains the Specified position.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRange.Equals(System.Object)">
      <summary>
            Overridden. Returns whether this QRange is equal to obj.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRange.GetHashCode">
      <summary>
            Overridden. Returns a hashcode for this QRange.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRange.Empty">
      <summary>
            Gets the Empty range.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRange.Size">
      <summary>
            Gets or sets the Size of this QRange.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRange.Start">
      <summary>
            Gets or sets the Start of this QRange.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRange.End">
      <summary>
            Gets or sets the End of this QRange.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPropertyBag">
      <summary>
            Is used by several classes to store properties and their default values in. It uses <see cref="P:Qios.DevSuite.Components.QPropertyBag.BaseProperties" />
            to retrieve the base value from if the value for this bag is not set.
            </summary>
      <remarks>
            Besure to cal
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.#ctor">
      <summary>
            Creates a new PropertyCollection with the specified capacity
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.RetrievePropertyNames">
      <summary>
            Gets a list of all the propertyNames.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.Clone">
      <summary>
            Clones the object
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.SetBaseProperties(Qios.DevSuite.Components.QPropertyBag,System.Boolean,System.Boolean)">
      <summary>
            Sets the baseProperties to the specified baseProperties. setChildPropertyBags indicates
            if the baseProperties of any containing IQPropertyBagHosts must be set to its corresponding
            baseProperties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.SetBaseProperties(Qios.DevSuite.Components.QPropertyBag,System.Boolean)">
      <summary>
            Sets the baseProperties to the specified baseProperties. setChildPropertyBags indicates
            if the baseProperties of any containing IQPropertyBagHosts must be set to its corresponding
            baseProperties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.DefineResettableProperty(System.String,Qios.DevSuite.Components.IQResettableValue)">
      <summary>
            Defines a property with a resetable value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.DefineProperty(System.String,System.Object)">
      <summary>
            Defines a property on the specified specified default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.DefineProperty(System.String,System.Object,System.Object)">
      <summary>
            Defines a property with the specified value and default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.DefineProperty(System.String,System.Object,System.Object,System.Boolean)">
      <summary>
            Defines a property with the specified value and default value.
            </summary>
      <param name="name">Contains the name of the property. If the name already exists the property gets overridden.</param>
      <param name="value">Contains the value of the property. If this is null the base Property is returned. If there is no base Property, the defaultValue is returned.</param>
      <param name="defaultValue">Contains the defaultValue of this property</param>
      <param name="returnBasePropertyWhenNull">
            Indicates whether this property must return the base Property when null (if there is a base Property ofcourse).
            Default this is true. When it is false or there are no base Properties the defaultValue is returned.
            </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.GetProperty(System.String)">
      <summary>
            Gets the property with the specified name. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.GetPropertyAsValueType(System.String)">
      <summary>
            Gets the property value type with the specified name. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.SetProperty(System.String,System.Object)">
      <summary>
            Sets the property with the specified name. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.ResetProperty(System.String)">
      <summary>
            Resets the property on the specified index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.GetDefaultValue(System.String)">
      <summary>
            Returns the default value of the specified property. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.GetDefaultValueAsValueType(System.String)">
      <summary>
            Returns the default value of the specified property. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.IsSetToDefaultValue(System.String)">
      <summary>
            Returns whether the property is set to its default value. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.IsDefined(System.String)">
      <summary>
            Returns whether a property is defined.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.IsValueSet(System.String)">
      <summary>
            Returns whether the value of the specified property is set. Make sure the specified property is defined before calling this.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.IsSetToDefaultValues">
      <summary>
            Gets whether the complete PropertyBag is set to default values
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.SetToDefaultValues">
      <summary>
            Sets the complete PropertyBag to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyBag.OnPropertyChanged(Qios.DevSuite.Components.QPropertyChangedEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QPropertyBag.PropertyChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QPropertyBag.PropertyChanged">
      <summary>
            This event gets raised when a property changes. The PropertyName of the QPropertyChangedEventArgs
            contains the name of the changed property. If <see cref="P:Qios.DevSuite.Components.QPropertyBag.BaseProperties" /> is changed,
            this name is null.		
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPropertyBag.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            Alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QPropertyBag.Count">
      <summary>
            Gets the amount of properties defined.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPropertyBag.BaseProperties">
      <summary>
            Gets or sets the BaseProperties, this is used to determine the default values.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPropertyChangedEventHandler">
      <summary>
            Defines the delegate for the <see cref="E:Qios.DevSuite.Components.QPropertyBag.PropertyChanged" /> event.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPropertyChangedEventArgs">
      <summary>
            Defines the EventArgs for the <see cref="E:Qios.DevSuite.Components.QPropertyBag.PropertyChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPropertyChangedEventArgs.#ctor(System.String)">
      <summary>
            Constructor, creates the eventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPropertyChangedEventArgs.PropertyName">
      <summary>
            Gets the name of the property that is changed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QLine">
      <summary>
            Is used to define a set of 2 points.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QLine.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructor. Creates a QLine instance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QLine.#ctor(System.Drawing.Point,System.Drawing.Point)">
      <summary>
            Constructor. Creates a QLine instance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QLine.Equals(System.Object)">
      <summary>
            Overridden. Return whether this QLine is equal to obj.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QLine.GetHashCode">
      <summary>
            Overridden. Returns a hashcode for this QLine.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QLine.Empty">
      <summary>
            Gets the empty QLine.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QLine.P1">
      <summary>
            Gets or sets the first point.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QLine.P2">
      <summary>
            Gets or sets the second point.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorSet">
      <summary>
            Defines a set of colors regulary used in several Qios.DevSuite classes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSet.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSet.#ctor(System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSet.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSet.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSet.#ctor(Qios.DevSuite.Components.QColorSet)">
      <summary>
            Creates a new QColorSet from the specified colorSet.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSet.GetColorSetOnState(Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QButtonState)">
      <summary>
            Gets the ColorSet based on the specified state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorSet.EqualsColorSet(Qios.DevSuite.Components.QColorSet)">
      <summary>
            Returns whether the colors on this colorSet equal the colors on the specified colorSet.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSet.Background1">
      <summary>
            Gets or sets the first background Color
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSet.Background2">
      <summary>
            Gets or sets the first second background Color
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSet.Border">
      <summary>
            Gets or sets the border Color
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSet.Foreground">
      <summary>
            Gets or sets the foreground color
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSet.NotEmptyColorCount">
      <summary>
            Gets the NotEmpty color count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorSet.ColorCount">
      <summary>
            Gets the amount of colors.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartLayoutHelper">
      <summary>
            Defines a helper class for laying out QParts.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutHelper.PrepareForStretchShrink(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.IQPartCollection,System.Drawing.Size,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Prepares the collection for stretching / shrinking. Returns a storage containing totals.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutHelper.SaveSizeBeforeConstraints(Qios.DevSuite.Components.IQPartCollection)">
      <summary>
            Saves all the sizes before constraints in the engine state properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutHelper.ReapplyConstraintsRequired(Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Checks whether contraints must be reapplied.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutHelper.AssertApplyConstraintsLoopCount(System.Int32@,Qios.DevSuite.Components.IQPart)">
      <summary>
            Because ApplyConstraints are potentially infinite loops, this method makes sure the app crashes when the loop comes over a 100 count. Normally
            the loop has to run once for a regular linear layout. It may run twice for flow layouts or automatic scroll layouts, and it may run 3 times for 
            automatic scroll on a flow layout.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutHelper.AddAdditionalRowSizesToStretchShringStorage(Qios.DevSuite.Components.QPartStretchStorage,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartDirection)">
      <summary>
            If a table contains rows with various column counts, the rows containing cells that can stretch shrink should
            take possible additional sizes into account. This method adds those sizes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutHelper.CalculatePossibleMaxTableRowsAndCells(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStage)">
      <summary>
            This method calculates possible table cell sizes in a a QPartLayoutStorage. This is called by several methods
            in the LayoutEngines while calculating their sizes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutHelper.ApplyShrinkInDirection(System.Drawing.Size,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartStretchStorage)">
      <summary>
            Applies shrink to the items in the collection. After this is called constraints must be applied to every part
            to make sure the childs can adjust to the shrink.
            </summary>
      <returns>Returns whether some shrinking is done. If no shrinking is done it might need some stretching</returns>
      <remarks>
            The shrink behavior is different then the stretch behavior.
            When shrinking, all the big parts are shrinked till all the parts are the same size. Then they are shrunken equally.
            When stretching, the additional space is added to the stretched parts equally.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutHelper.ApplyStretchInDirection(System.Drawing.Size,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartStretchStorage)">
      <summary>
            Applies stretch to the items in the collection. After this is called constraints must be applied to every part
            to make sure the childs can adjust to the stretch.
            </summary>
      <returns>Returns whether some stretching is done. If no stretching is done it might need shrinking</returns>
      <remarks>
            The shrink behavior is different then the stretch behavior.
            When shrinking, all the big parts are shrinked till all the parts are the same size. Then they are shrunken equally.
            When growing, the additional space is added to the stretched parts equally.
            </remarks>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartStretchStorage">
      <summary>
            Defines a storage class where calculated sizes are recorded for stretching and shrinking.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartStretchStorage.Direction">
      <summary>
            Contains the direction.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartStretchStorage.LastCanStretchPart">
      <summary>
            Contains the last part that can be stretched.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartStretchStorage.LastCanShrinkPart">
      <summary>
            Contains the last part that can be shrunken.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartStretchStorage.NotShrinkSize">
      <summary>
            Contains the complete size of the items that cannot shrink.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartStretchStorage.UsedShrinkSize">
      <summary>
            Contains the size the current shrink items use.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartStretchStorage.AvailableShrinkSize">
      <summary>
            Contains the still available shrink size
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartStretchStorage.NotStretchSize">
      <summary>
            Contains the size of the items that cannot stretch.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartStretchStorage.UsedStretchSize">
      <summary>
            Contains the size of the items that can stretch.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartStretchStorage.AvailableStretchSize">
      <summary>
            Contains the still available stretch size. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartStretchStorage.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartStretchStorage.AddCanShrinkPart(Qios.DevSuite.Components.IQPart)">
      <summary>
            Adds a part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartStretchStorage.AddCanStretchPart(Qios.DevSuite.Components.IQPart)">
      <summary>
            Adds a part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartStretchStorage.SortCanShrinkCollection">
      <summary>
            Sorts the can shrink collection when needed on the size. Biggest items first.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartStretchStorage.GetCanShrinkPart(System.Int32)">
      <summary>
            Gets the part at the index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartStretchStorage.GetCanStretchPart(System.Int32)">
      <summary>
            Gets the part at the index.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartStretchStorage.CanShrinkCount">
      <summary>
            Gets the count of parts that are actually in the collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartStretchStorage.CanStretchCount">
      <summary>
            Gets the count of parts that are actually in the collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartStretchStorage.ShouldShrink">
      <summary>
            Gets whether stuff should shrink.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartStretchStorage.ShouldStretch">
      <summary>
            Gets whether stuff should stretch.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQPartPaintEngine">
      <summary>
            IQPartPaintEngine defines the interface used to paint <see cref="T:Qios.DevSuite.Components.IQPart" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartPaintEngine.PerformPaint(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Performs the complete painting.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartPaintEngine.PaintPart(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints a specific part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.IQPartPaintEngine.FinishPaint(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Finishes the painting. 
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QContentAlignment">
      <summary>
            Defines how content of several objects must be aligned.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentAlignment.Near">
      <summary>
            The content will be aligned near. (this is usually left or top)
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentAlignment.Far">
      <summary>
            The content will be aligned near. (this is usually right or bottom)
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentAlignment.Center">
      <summary>
            The content will be centered.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentAlignment.Stretched">
      <summary>
            The content will be stretched.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QToolItemConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QToolItem" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QToolItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> to the specified destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QToolItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> to the given destinationType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QTabControlDesigner">
      <summary>
            This class defines the Designer for <see cref="T:Qios.DevSuite.Components.QTabControl" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlDesigner.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Intializes the designer
            </summary>
      <param name="component">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary>
            Overridden. The QTabControl should handle mouseMessages in designTime when it hits a tabButton
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlDesigner.AddTabPage">
      <summary>
            Adds a QTabPage
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>
            Overridden. Handles this drag method.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>
            Overridden. Handles this drag method.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>
            Overridden. Handles this drag method.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlDesigner.OnDragLeave(System.EventArgs)">
      <summary>
            Overridden. Handles this drag method.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QTabControlDesigner.TabControl">
      <summary>
            Gets the TabControl that is currently designed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QTabControlDesigner.Verbs">
      <summary>
            Overridden. Gets the Verbs
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QTabControlDesigner.AddTabPageVerb">
      <summary>
            Gets the DesignerVerb to add a TabPage
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QTabControlDesigner.TabPageType">
      <summary>
            Gets the Type of the QTabPage that should be added.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QMenuItemDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QMenuItem" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QMenuItemDesigner.AssociatedComponents">
      <summary>
            Overridden. Returns the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QMenuItem" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QExplorerItemDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QExplorerItem" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QExplorerItemConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QExplorerItem" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> to the specified destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> to the given destinationType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper">
      <summary>
            Defines a helper class for designer that hosts QComposites
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.ShouldSetCursor">
      <summary>
            Returns whether this helper should set the cursor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.SetCursor">
      <summary>
            Sets the cursor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.ShouldHandleMouseDragBegin(System.Int32,System.Int32)">
      <summary>
            Returns whether this helper should handle the mouse drag begin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.HandleMouseDragBegin(System.Int32,System.Int32)">
      <summary>
            Handles the mouse drag begin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.ShouldHandleMouseDragMove(System.Int32,System.Int32)">
      <summary>
            Returns whether this helper should handle the mouse drag move.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.HandleMouseDragMove(System.Int32,System.Int32)">
      <summary>
            Handles the mouse drag move.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.ShouldHandleMouseDragEnd(System.Boolean)">
      <summary>
            Returns whether this helper should handle the mouse drag end
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.HandleMouseDragEnd(System.Boolean)">
      <summary>
            Handles the mouse drag end.
            </summary>
      <param name="cancel">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.HandlePaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Paints the adorments for the selected parts.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.ShouldCallDefaultWndProc(System.Windows.Forms.Message@)">
      <summary>
            Returns whether the DefaultWndProc should be called instead of the base WndProc.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.Dispose">
      <summary>
            Disposes this helper.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.Dispose(System.Boolean)">
      <summary>
            Disposes this helper.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.Finalize">
      <summary>
            Finalizer
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.DrawOutlines">
      <summary>
            Gets or sets whether outlines must be drawin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.IgnoreCreation">
      <summary>
            Gets or sets whether creation must be ignored
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.CreationTypes">
      <summary>
            Gets or sets the types this designer can create.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.Verbs">
      <summary>
            Gets the verbs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.ChangeService">
      <summary>
            Gets the ChangeService
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.DesignerHost">
      <summary>
            Gets the DesignerHost
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.SelectionService">
      <summary>
            Gets the selection service
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCompositeControlDesignerHelper.AssociatedComponents">
      <summary>
            Overridden. Gets the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QCompositeControl" /> component.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabStrip">
      <summary>
            this class implements the TabStrip for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStrip.CreateConfiguration(System.Drawing.Font)">
      <summary>
            Overridden. Creates the Configuration for this QTabStrip.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStrip.CreatePainter">
      <summary>
            Overridden. Creates the Painter for this QTabStrip.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStrip.CreateNavigationArea">
      <summary>
            Overridden. Creates the NavigationArea for this QTabStrip.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStrip.UpdateMdiVisbilityState">
      <summary>
            Updates the MdiVsibility state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStrip.UpdatePropertiesFromConfiguration">
      <summary>
            Overridden. Updates the properties from the specified configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStrip.Configuration">
      <summary>
            Gets the configuration as a QRibbonTabStripConfiguration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStrip.NavigationArea">
      <summary>
            Gets the NavigationArea of the QRibbonTabStrip. This contains the scroll,close, MDI and help buttons buttons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStrip.Ribbon">
      <summary>
            Gets a possible ribbon this QRibbonTabStrip belongs to.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeGroupOrderedConfiguration">
      <summary>
            Defines a configuration for a QCompositeGroup that has a set of predefined child items that can be ordered
            with the <see cref="P:Qios.DevSuite.Components.QCompositeGroupOrderedConfiguration.ContentLayoutOrder" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroupOrderedConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroupOrderedConfiguration.ContentLayoutOrder">
      <summary>
            Gets or sets the content layout order of the child parts. This defines when a part is layed out.
            The actual position is also determined by the alignment of a part.
            Set this string to String.Empty (not null) when you want to order manually or want to add parts.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.PropCaptionConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.PropItemAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.PropResizeBehavior">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.PropCollapsedConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font. The partToInitialize from is used
            to determine the subparts etc.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.CreateAppearance">
      <summary>
            Overridden. Creates the appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.GetContentLayoutOrder(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. This configuration returns null when the panel is collapsed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. Gets the paddings. returns an empty padding for the RibbonPanel if it is collapsed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden. Gets the defaultContentPartLayoutOrder
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.CaptionConfiguration">
      <summary>
            Gets the configuration of the caption area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.ItemAreaConfiguration">
      <summary>
            Gets the configuration of the item area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.CollapsedConfiguration">
      <summary>
            Gets the configuration for the item that is displayed when the QRibbonPanel is collapsed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelConfiguration.ResizeBehavior">
      <summary>
            Gets or sets the custom behavior that must be applied when the panel doesn't fit. If this is turned off default resize behaviors like scrolling can be applied.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPanelAppearance">
      <summary>
            Defines the Appearance class for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" /> content.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanelAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPanelResizeBehavior">
      <summary>
            Defines possible custom resize behaviors for a QRibbonPanel
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelResizeBehavior.None">
      <summary>
            No custom resizing is done.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelResizeBehavior.HideHorizontalText">
      <summary>
            Horizontal texts are hidden.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPanelResizeBehavior.Collapse">
      <summary>
            Panel will be fully collapsed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration">
      <summary>
            Defines the Configuration of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.PropLaunchBarAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.PropItemAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.CreateAppearance">
      <summary>
            Returns the QRibbonLaunchBarHost appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Gets the DefaultContentPartLayoutOrder
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Is used on a QRibbonLaunchBar, see the base for further documentation.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.LaunchBarAreaConfiguration">
      <summary>
            Gets the configuration of the LaunchBar area of this QRibbonLaunchBarHost.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.ItemAreaConfiguration">
      <summary>
            Gets the configuration of the custom iteam area of this QRibbonLaunchBarHost.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.IconBackgroundMargin">
      <summary>
            Overridden. Not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.IconBackgroundSize">
      <summary>
            Overridden. Not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostConfiguration.IconBackgroundVisible">
      <summary>
            Overridden. Not used on this configuration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostGroupConfiguration">
      <summary>
            Defines the configuration for several groups on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostGroupConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostGroupConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Not used in this configuration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostAppearance">
      <summary>
            Implements the appearance of a QRibbonLaunchBarHost
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBarForm">
      <summary>
            Defines the Form that is used when a QToolBar is not docked to a QToolBarHost but floating.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Hides or shows the QFloatingMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.Refresh">
      <summary>
            Overridden. refreshes the Control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden. Sets the specified bounds.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnUserSizing(Qios.DevSuite.Components.QUserSizingEventArgs)">
      <summary>
            Handles the UserSizing event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnUserSized(Qios.DevSuite.Components.QUserSizedEventArgs)">
      <summary>
            Overridden. Handles the UserSized event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Overridden. Handles the add of a Control.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>
            Handles the Remove of the Control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Lays out the QToolBarForm.
            </summary>
      <param name="levent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the NonClientArea.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnNonClientAreaMouseMove(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Handles the MouseMove.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnNonClientAreaMouseLeave(System.EventArgs)">
      <summary>
            Handles the MouseLeave on the NonClientArea.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnNonClientAreaMouseDown(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Handles the MouseDown on the NonClientArea.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnNonClientAreaDoubleClick(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Handles the DoubleClick on the Menu
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.OnNonClientAreaMouseUp(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Handles the MouseUp on the NonClientArea.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarForm.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the QToolBarForm.
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarForm.Owner">
      <summary>
            Overridden. Gets or sets the Owner
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarForm.BackColor2PropertyName">
      <summary>
            Overridden. Returns the ToolBarFormBackground1 property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarForm.BackColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarFormBackground2 property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarForm.BorderColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarFormBorder property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarForm.CaptionColor1PropertyName">
      <summary>
            Overridden. Returns the ToolBarFormCaption1 property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarForm.CaptionColor2PropertyName">
      <summary>
            Overridden. Returns the ToolBarFormCaption2 property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarForm.CaptionTitleBounds">
      <summary>
            Overridden. Returns the CaptionTitleBounds.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarForm.UserRequestedToolBarWidth">
      <summary>
            Gets or sets the width that the user wants the ToolBar on this form to be.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBarConfiguration">
      <summary>
            Contains configuration properties for instances of <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuConfiguration">
      <summary>
            Contains configuration properties for instances of <see cref="T:Qios.DevSuite.Components.QMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuConfiguration.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarConfiguration.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ExpandOnItemClick">
      <summary>
            Gets or sets whether the item expands if the use clicks on it, or only if the user clicks on the HasChildItemsImage
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ShortcutScope">
      <summary>
            Gets or sets when Shortcuts must react. This can be on the complete application or parent Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.UsedCustomizeToolBarMask">
      <summary>
            Gets the actual used CusomizeToolBarMask. This is based on whether the CustomizeToolBarMask
            is set. If it is not set the default CusomizeToolBarMask is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.CustomizeToolBarMask">
      <summary>
            Gets or sets the base image that is used to customize the QToolBar.
            In the Mask the Color Red is replaced by the ToolBarTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.UsedHasMoreItemsMask">
      <summary>
            Gets the actual used HasMoreItemsMask. This is based on whether the HasMoreItemsMask
            is set. If it is not set the default HasMoreItemsMask is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.HasMoreItemsMask">
      <summary>
            Gets or sets the base image that is used when a QToolBar has more items then visible.
            In the Mask the Color Red is replaced by the ToolBarTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.UsedFormCustomizeToolBarMask">
      <summary>
            Gets the actual used FormCustomizeToolBarMask. This is based on whether the FormCustomizeToolBarMask
            is set. If it is not set the default FormCustomizeToolBarMask is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.FormCustomizeToolBarMask">
      <summary>
            Gets or sets the base image that is used for customizing when a QToolBar is placed on a Form.
            In the Mask the Color Red is replaced by the ToolBarTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.UsedFormCloseToolBarMask">
      <summary>
            Gets the actual used FormCloseToolBarMask. This is based on whether the UsedFormCloseToolBarMask
            is set. If it is not set the default UsedFormCloseToolBarMask is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.FormCloseToolBarMask">
      <summary>
            Gets or sets the base image that is used for closing when a QToolBar is placed on a Form.
            In the Mask the Color Red is replaced by the ToolBarTextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.SizingGripWidth">
      <summary>
            Gets or sets the width of the SizingGrip.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.RoundedBevelCornerSize">
      <summary>
            Gets or sets the size of the rounded corners when the QToolBar is displayed as a Bevel.
            This depends on the ToolBarStyle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.LayoutType">
      <summary>
            Gets or sets how the items of a QToolBar should be threated when they don't fit.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.CanMove">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QToolBar" /> can move. When this is true it only can move 
            when it is hosted on a <see cref="T:Qios.DevSuite.Components.QToolBarHost" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.CanFloat">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QToolBar" /> can float. When this is true it only can float 
            when it is hosted on a <see cref="T:Qios.DevSuite.Components.QToolBarHost" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.CanCustomize">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QToolBar" /> can customize.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ShowCustomizeBar">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QToolBar" /> will show its CustomizeBar. When this is true
            If you want to hide the CustomizeBar, also specify false to CanCustomize and set the LayoutType to ExpandOnNoFit.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.CanClose">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QToolBar" /> can close.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.Stretched">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QToolBar" /> should be stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.HideOnClose">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QToolBar" /> should should be hidden when the closebutton is pressed instead of disposed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.SizingGripStyle">
      <summary>
            Gets or sets the style of the SizingGrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.HasMoreItemsAreaWidth">
      <summary>
            Gets or sets width of the HasMoreItemsArea
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ToolBarPadding">
      <summary>
            Gets or sets the padding between the edge and the contents of a <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.SizingGripPadding">
      <summary>
            Gets or sets the padding of the SizingGrip of a <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.FormButtonsPadding">
      <summary>
            Gets or sets the padding of the buttons used on the Form when a <see cref="T:Qios.DevSuite.Components.QToolBar" /> is floating.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ItemsSpacing">
      <summary>
            Gets or sets the spacing before and after the items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ToolBarStyle">
      <summary>
            Gets or sets the ToolBarStyle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ItemMargin">
      <summary>
            Overridden. Gets or sets the margin between items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ItemPadding">
      <summary>
            Overridden. Gets or sets the padding between the bounds and the contents of an item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.IconSpacing">
      <summary>
            Overridden. Gets or sets the IconSpacing between the <see cref="T:Qios.DevSuite.Components.QToolBar" /> and the items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.TitleSpacing">
      <summary>
            Overridden. Gets or sets the spacing for the titles.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ShortcutsVisible">
      <summary>
            Overridden. Indicates if Shortcuts should be shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.HasChildItemsSpacing">
      <summary>
            Overridden. Gets or sets the Spacing used for the HasChildItems icon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.SeparatorSpacing">
      <summary>
            Overridden. Gets or sets the spacing for the separators.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.PersonalizedItemBehavior">
      <summary>
            Overridden. Gets or sets the personalized behavior. The personalized behavior
            of a QMainMenu or QToolBar cannot be set to DependsOnPersonalized
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.ShowDefaultCustomizeItems">
      <summary>
            Gets or sets whether the default CustomizeItems must be added to the CustomizeMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.CustomizeItemTitle">
      <summary>
            Gets or sets the title of the CustomizeItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBarConfiguration.CustomizeItemTooltip">
      <summary>
            Gets or sets the tooltip of the CustomizeItem. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShortcutScope">
      <summary>
            Defines the scope of the shortcuts of a QMenu
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShortcutScope.ParentForm">
      <summary>
            Shorcut only works when the parent Form is activated.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShortcutScope.Application">
      <summary>
            Shortcut works when any Form of the Application is activated.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonRow">
      <summary>
            Defines one row on a <see cref="T:Qios.DevSuite.Components.QTabStrip" /> where <see cref="T:Qios.DevSuite.Components.QTabButton" /> instances can be assigned to.
            When QTabButtons are stacked, multiple rows are created. Every <see cref="T:Qios.DevSuite.Components.QTabButton" /> will be assigend
            to a row.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonRow.CalculatePointToControl(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Calculates the specified point to a point on the parenting control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonRow.CalculateBoundsToControl(System.Drawing.Rectangle,System.Boolean)">
      <summary>
            Calculates the specified bounds to a bounds on the parent control
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonRow.TabStrip">
      <summary>
            Gets the TabStrip this row belongs to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonRow.RowIndex">
      <summary>
            Gets the RowIndex of this QTabButtonRow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonRow.Range">
      <summary>
            Gets or sets the range (in pixels) of this row.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonRow.Start">
      <summary>
            Gets or sets the start of the range of this row.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonRow.Size">
      <summary>
            Gets or sets the size of the range of this row.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonRow.End">
      <summary>
            Gets or sets the end of the range of this row.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QStatusBarPanelCollection">
      <summary>
            Is used by a <see cref="T:Qios.DevSuite.Components.QStatusBar" /> to maintain  the collection of <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelCollection.#ctor(Qios.DevSuite.Components.QStatusBar)">
      <summary>
            Constructor. Creates a new QStatusBarPanelCollection for the specified QStatusBar.
            </summary>
      <param name="statusBar">The QStatusBar that this collection belongs to.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelCollection.Add(Qios.DevSuite.Components.QStatusBarPanel)">
      <summary>
            Adds a QStatusBarPanel to this collection.
            </summary>
      <param name="panel">The panel to add.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelCollection.Remove(Qios.DevSuite.Components.QStatusBarPanel)">
      <summary>
            Removes a QStatusBarPanel from this collection.
            </summary>
      <param name="panel">The panel to remove.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the QStatusBarPanel at the specified index from this collection.
            </summary>
      <param name="index">The index of the panel to remove.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelCollection.Insert(System.Int32,Qios.DevSuite.Components.QStatusBarPanel)">
      <summary>
            Inserts a QStatusBarPanel at the specified index.
            </summary>
      <param name="index">The index to insert the panel.</param>
      <param name="panel">The panel to insert.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelCollection.AddRange(Qios.DevSuite.Components.QStatusBarPanel[])">
      <summary>
            Adds a range of QStatusBarPanels to this collection.
            </summary>
      <param name="panels">The array of panels to add.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelCollection.CopyTo(Qios.DevSuite.Components.QStatusBarPanel[],System.Int32)">
      <summary>
            Copies this collection to the panels collection.
            </summary>
      <param name="panels">The array to copy to.</param>
      <param name="index">The index to start at.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelCollection.IndexOf(Qios.DevSuite.Components.QStatusBarPanel)">
      <summary>
            Returns the Index of QStatusBarPanel. If the panel is not in the list it returns -1.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelCollection.Contains(Qios.DevSuite.Components.QStatusBarPanel)">
      <summary>
            Returns whether this collection contains the specified QStatusBarPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanelCollection.Item(System.Int32)">
      <summary>
            Returns the QStatusBarPanel at the specified index.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextStyleRoot">
      <summary>
            Defines the text style for the root of <see cref="T:Qios.DevSuite.Components.QMarkupText" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleRoot.#ctor">
      <summary>
            Constructor, creates the Style.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextStyleText">
      <summary>
            Defines the text style for a text <see cref="T:Qios.DevSuite.Components.QMarkupTextElement" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleText.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleText.CanRenderNode(System.Xml.XmlNode)">
      <summary>
            Returns whether this style can render the specified node
            This returns true when the node is XmlText
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerBarConfiguration">
      <summary>
            Contains configuration properties for instances of <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarConfiguration.SetToDefaultValues">
      <summary>
            Sets this QMenuConfiguration to its defaultvalues.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarConfiguration.IsSetToDefaultValues">
      <summary>
            Returns whether this QMenuConfiguration is set to its defaultvalues.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QExplorerBarConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QExplorerBarConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarConfiguration.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarConfiguration.ShortcutScope">
      <summary>
            Gets or sets when Shortcuts must react. This can be on the complete application or parent Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarConfiguration.FocusRectangleVisible">
      <summary>
            Determines if the focus rectangle is visible to indicate which menuitem has the keyboard focus
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarConfiguration.ExplorerBarPadding">
      <summary>
            Gets or sets the padding between the edge and the contents of a <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeButtonConfiguration">
      <summary>
            Contains the configuration properties for the <see cref="T:Qios.DevSuite.Components.QCompositeMenuItem" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeButtonConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeButtonConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeButtonConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeButtonConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested property count.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeButtonConfiguration.CreateDropDownConfiguration">
      <summary>
            Overridden. Creates the drop down configuration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeButton">
      <summary>
            The QCompositeButton is the same as a <see cref="T:Qios.DevSuite.Components.QCompositeMenuItem" />. The only difference is that it default paints
            a shape in the normal state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeButton.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeButton.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeButton.CreateConfiguration">
      <summary>
            Creates the configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeButton.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the item color set for this button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeButton.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeButton.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColor">
      <summary>
            The QColor is the class that is used by the <see cref="T:Qios.DevSuite.Components.QColorScheme" />. It can contain colors for various Themes.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColor.ColorReferenceSymbol">
      <summary>
            Defines the symbol used to reference an other color from a QColorScheme, for example "@PanelBackground1"
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColor.ColorReferenceSymbolCharArray">
      <summary>
            Defines the color reference symbol as a character array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.ToColor(Qios.DevSuite.Components.QColor)">
      <summary>
            Converts a QColor to color, it always returns the color of the current theme of the <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.ShouldSerializeColorReference">
      <summary>
            Gets whether the property should serialize.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.ResetColorReference">
      <summary>
            Resets the property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.ContainsColorForTheme(System.String)">
      <summary>
            Returns whether this QColor contains a Color for the specified theme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.ContainsColorForCurrentTheme">
      <summary>
            Returns whether this QColor contains a Color for the current Theme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.ContainsDefaultColorForTheme(System.String)">
      <summary>
            Returns whether this QColor contains a default color for the specified theme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.SaveToXml(System.Xml.XPath.IXPathNavigable,Qios.DevSuite.Components.QColorSaveType)">
      <summary>
            Saves the QColor to Xml
            </summary>
      <param name="collectionElement">Contains the collection XML Element</param>
      <param name="saveOptions">Determines which colors to save</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.LoadFromXml(System.Xml.XPath.IXPathNavigable)">
      <summary>
            Loads the contents of this QMenuItem from the specified XmlElement.
            </summary>
      <param name="itemElement">The element to load it from</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.SetColor(System.String,System.Drawing.Color)">
      <summary>
            Sets the specified color of the specified theme.
            </summary>
      <param name="theme">The name of the theme to set the color for.</param>
      <param name="color">The color to set.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.SetColor(System.String,System.Drawing.Color,System.Boolean)">
      <summary>
            Sets the specified Color of the specified theme.
            </summary>
      <param name="theme">The name of the theme to set the color for.</param>
      <param name="color">The color to set.</param>
      <param name="checkIfThemeExists">When set, it checks if the theme exists in the QColorScheme and throws an error when not defined.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.SetColor(System.String)">
      <summary>
            Sets a color the the specified colorRefence.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColor.GetColor(System.String)">
      <summary>
            Returns the color of the specified scheme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.Empty">
      <summary>
            Gets the Empty QColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.Current">
      <summary>
            Gets or sets the color of the current Theme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.Item(System.String)">
      <summary>
            Gets or sets the color of the specified Theme.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.IsEmpty">
      <summary>
            Indicates if the QColor is empty. This is only true for the <see cref="P:Qios.DevSuite.Components.QColor.Empty" /> color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.ColorScheme">
      <summary>
            Returns the <see cref="T:Qios.DevSuite.Components.QColorSchemeBase" /> this QColor belongs to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.ColorName">
      <summary>
            Returns the name of the QColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.ColorReference">
      <summary>
            Gets or sets a reference to an other color in the QColorScheme, for example: "@PanelBackground1"
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.DefaultColorReference">
      <summary>
            Gets a possible default color reference.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.UsedColorReference">
      <summary>
            Gets the actual used color reference.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColor.ThemeColorCount">
      <summary>
            Gets the amount of colors that are actually defined on this QColor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTristateBool">
      <summary>
            Defines a boolean that can have 3 states.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTristateBool.Undefined">
      <summary>
            Defines the Undefined value.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTristateBool.False">
      <summary>
            Defines the False value.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTristateBool.True">
      <summary>
            Defines the True value.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QBalloonDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QBalloon" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer
            </summary>
      <param name="component">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QBalloonDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration">
      <summary>
            Contains configuration properties for the composite on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.PropDefaultPanelConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.PropDefaultGroupConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.PropDefaultBarConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.PropDefaultItemConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font. The partToInitialize from is used
            to determine the subparts etc.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.CreateAppearance">
      <summary>
            Overridden. Creates the appearance, isn't needed on a QRibbonPage
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetVisible(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets whether the item is visible.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the paddings for the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetMargins(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the margins for the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetMinimumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the minimum size for the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetMaximumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the maximum size for the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetDirection(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the direction for the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetAlignmentHorizontal(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the horizontal alignment for the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetAlignmentVertical(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the vertical alignment for the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetContentAlignmentHorizontal(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the horizontal alignment for the content of the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetContentAlignmentVertical(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the vertical alignment for the content of the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetContentLayoutOrder(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the content layout order alignment for the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetOptions(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the options for the specified part.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetIconBackgroundVisible(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns whether the iconbackground must be visible
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetIconBackgroundMargin(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the icon background margin.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetIconBackgroundSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Returns the icon background size.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetAppearance(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the appearance to use.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetLayout(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the layout to use.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.GetScrollConfiguration(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the configuration to use.
            Because this configuration is shared between a QRibbonCollapsedItemComposite and a QRibbonPage, the return value depends on the part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.DefaultPanelConfiguration">
      <summary>
            Gets the configuration for <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.DefaultGroupConfiguration">
      <summary>
            Gets the configuration of QRibbonItemGroups.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.DefaultBarConfiguration">
      <summary>
            Gets the configuration of QRibbonItemBars.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.DefaultItemConfiguration">
      <summary>
            Gets the configuration for <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.Visible">
      <summary>
            Overridden. Not used in this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.HotkeyWindowShowBehavior">
      <summary>
            Overridden. Not used on a QRibbonPage. It uses the HotkeyWindowShowBehavior of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.HotkeyWindowConfiguration">
      <summary>
            Overridden. Not used on a QRibbonPage. It uses the HotkeyWindowConfiguration of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBar">
      <summary>
            A QToolBar can be used to present buttons to a user for easy access to the most used functionality.
            The buttons of a QToolBar are implemented by <see cref="T:Qios.DevSuite.Components.QToolItem" />. When you host a QToolBar on a
            <see cref="T:Qios.DevSuite.Components.QToolBarHost" /> it can be dragged and moved.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.#ctor">
      <summary>
            Constructor. Creates a QToolBar
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.CreateAppearanceInstance">
      <summary>
            Overridden. Returns a new instance of the <see cref="T:Qios.DevSuite.Components.QToolBarAppearance" /></summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.CreateToolTipConfigurationInstance">
      <summary>
            Overridden. Creates a <see cref="T:Qios.DevSuite.Components.QStatusBarToolTipConfiguration" />.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the ConfigurationChanged event
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.ResetBevelAppearance">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.ShouldSerializeBevelAppearance">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.DockToolBar(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32)">
      <summary>
            Docks the ToolBar on the specified host, row and index.
            </summary>
      <param name="host">Specifies the toolBarHost where the toolBar must be docked on.</param>
      <param name="rowIndex">Specifies the row where the toolBar must be docked on. The first row has index 0.</param>
      <param name="toolBarIndex">Specifies what index the toolBar must have on the row. The first toolBar has index 0.</param>
      <remarks>When this method is called, the requestedPosition is resetted to 0. Use another overload to specify the requestedPosition</remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.DockToolBar(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32,System.Int32)">
      <summary>
            Docks the ToolBar on the specified host, row and index and the requestedPosition.
            </summary>
      <param name="host">Specifies the toolBarHost where the toolBar must be docked on.</param>
      <param name="rowIndex">Specifies the row where the toolBar must be docked on. The first row has index 0.</param>
      <param name="toolBarIndex">Specifies what index the toolBar must have on the row. The first toolBar has index 0.</param>
      <param name="requestedPosition">Specifies what the left (horizontal) or top (vertical) must be. The toolBar will get that position when there are no other toolBars on that posisition.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.FloatToolBar(System.Drawing.Point)">
      <summary>
             Floats the ToolBar to the specified point.
             </summary>
      <remarks>
             When the configuration has CanFloat set to false, it does nothing.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.ResetConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.ShouldSerializeConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.ResetChildMenuConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.ShouldSerializeChildMenuConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Sets the visibility property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.ContainsOrIsContainerWithHandle(System.IntPtr)">
      <summary>
            Overridden. Gets whether this QToolBar is or contains the specified handle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.HandleKeyDown(System.Windows.Forms.Keys)">
      <summary>
            Obsolete. Use the overload containing the destinationControl and the message.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.HandleKeyUp(System.Windows.Forms.Keys)">
      <summary>
            Obsolete. Use the overload containing the destinationControl and the message.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>
            Is used to PreFilter Application messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.OnParentChanged(System.EventArgs)">
      <summary>
            Overridden. Handles a possible ParentChange.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden. Sets the BoundsCore.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Calculates the Layout of the QToolBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseMove of the QToolBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseDown for the QToolBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseUp for the QToolBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.OnMouseLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the mouse leave.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the QToolBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the background of the QToolBar
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBar.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the QToolBar.
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.Appearance">
      <summary>
            Overridden. Gets the QToolBarAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.ToolTipConfiguration">
      <summary>
            Overridden. Gets or sets the ToolTipConfiguration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.Text">
      <summary>
            Overridden. Gets or sets the Text of the QToolBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.Anchor">
      <summary>
            Overridden. Gets or sets the AnchorStyles.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.Dock">
      <summary>
            Overridden. Gets or Sets the Dock property of the QToolBar. A ToolBar cannot be docked
            <b>Fill</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.RequestedPosition">
      <summary>
            Gets or sets the requested position on a ToolBarHost. This is the top position when orientation is vertical, else the left position.
            <see cref="M:Qios.DevSuite.Components.QToolBar.DockToolBar(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32)" /> for more information.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.RowIndex">
      <summary>
            Gets or sets the index of the row where the ToolBar must be placed on a ToolBarHost.
            When it is -1 it is added to the end of the host.
            <see cref="M:Qios.DevSuite.Components.QToolBar.DockToolBar(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32)" /> for more information.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.ToolBarIndex">
      <summary>
            Gets or sets the index where the ToolBar must be placed on a ToolBarHost.
            When it is -1 it is added to the end of the row.
            <see cref="M:Qios.DevSuite.Components.QToolBar.DockToolBar(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32)" /> for more information.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.BevelAppearance">
      <summary>
            Gets the appearance for the bevel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.BackColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarBackground1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.BackColor2PropertyName">
      <summary>
            Overridden. Returns the ToolBarBackground2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.BorderColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarBorderColor from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.Configuration">
      <summary>
            Gets or sets the Configuration of this QToolBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.ChildMenuConfiguration">
      <summary>
            Gets or sets the configuration for the child menus opened from this QToolBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.ToolItems">
      <summary>
            Gets the collection of QToolItems of this QToolBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolBar.IsFloating">
      <summary>
            Gets whether the QToolBar is Floating on a QToolBarForm.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBarBevelAppearance">
      <summary>
            Defines the Appearance for the QToolBar bevel.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarBevelAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBarAppearance">
      <summary>
            Defines the Appearance for the QToolBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolBarAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBarToolTipConfiguration">
      <summary>
            Defines the StatusBarToolTipConfiguration for the QToolBar
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBarLayoutType">
      <summary>
            Defines how a <see cref="T:Qios.DevSuite.Components.QToolBar" /> should be layed out.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolBarLayoutType.SetMoreItemsOnNoFit">
      <summary>
            Sets the moreItems button when the items do not fit and shows the items on a separate menu.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolBarLayoutType.ExpandOnNoFit">
      <summary>
            Expands the QToolBar vertical when horizontal layed out and horizontal when vertical layed out
            when the items do not fit.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolBarStyle">
      <summary>
            Defines how a QToolBar appears.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolBarStyle.Flat">
      <summary>
            The ToolBar will be shown flat, without a bevel.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolBarStyle.Beveled">
      <summary>
            The ToolBar will be shown with a bevel.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonRowCollection">
      <summary>
            Defines the collection for <see cref="T:Qios.DevSuite.Components.QTabButtonRow" /> instances on a <see cref="T:Qios.DevSuite.Components.QTabStrip" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonRowCollection.RemoveAt(System.Int32)">
      <summary>
            Overridden. Should not be called.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonRowCollection.Clear">
      <summary>
            Overridden. Should not be called.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonRowCollection.Contains(Qios.DevSuite.Components.QTabButtonRow)">
      <summary>
            Returns whether this collection contains tabButtonRow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonRowCollection.CopyTo(Qios.DevSuite.Components.QTabButtonRow[],System.Int32)">
      <summary>
            Copies this collection to the tabButtonRows collection.
            </summary>
      <param name="tabButtonRows">The array to copy to.</param>
      <param name="index">The index to start at.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonRowCollection.IndexOf(Qios.DevSuite.Components.QTabButtonRow)">
      <summary>
            Returns the Index of QTabButtonRow. If button is not in the list it returns -1.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonRowCollection.Item(System.Int32)">
      <summary>
            Returns the QTabButtonRow at index index
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeItemCollection">
      <summary>
            Defines the collection of <see cref="T:Qios.DevSuite.Components.QShapeItem" /> for a <see cref="T:Qios.DevSuite.Components.QShape" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.#ctor(System.Int32)">
      <summary>
            Creates a QShapeItemCollection that does not belong to a shape
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.#ctor(Qios.DevSuite.Components.QShape,System.Int32)">
      <summary>
            Constructor, creates the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.Add(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Adds an item to the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.Remove(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Removes an item from the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.Insert(System.Int32,Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Inserts an item in the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.InsertBefore(Qios.DevSuite.Components.QShapeItem,Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Inserts the specified item before beforeItem if beforeItem is in the list.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.InsertAfter(Qios.DevSuite.Components.QShapeItem,Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Inserts the specified item after afterItem if afterItem is in the list.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.GetNextItem(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Gets the next item from the specified item. This method loops around. When there is only one
            item it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.GetPreviousItem(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Gets the previous item from this item. This method loops around. When there is only one
            item it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.OnClear">
      <summary>
            Handles a clear on the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.OnClearComplete">
      <summary>
            Handles a when a clear is complete
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.IndexOf(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Gets the index of the specified item in this collection. Returns -1 when it does not exists
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.Contains(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Returns whether this collection contains the specified item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.GetItemsInRectangle(System.Drawing.RectangleF,Qios.DevSuite.Components.QShapeItemParts)">
      <summary>
            Returns the QShapeItems that has parts lying in the specified rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.GetItemsOnPoint(System.Drawing.PointF,System.Single,Qios.DevSuite.Components.QShapeItemParts)">
      <summary>
            Returns the QShapeItems that has parts lying on the specified point within the margin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.SelectShapeItemParts(Qios.DevSuite.Components.QShapeItemParts)">
      <summary>
            Sets the SelectionParts of all the items to the specified parts
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.GetSelectedItems(Qios.DevSuite.Components.QShapeItemParts)">
      <summary>
            Gets the selected items that have on or more of the specified parts selected.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.MoveSelectedItemPartsRelativeToCache(System.Drawing.PointF)">
      <summary>
            Moves the selected parts relative from the cached position.  Be sure that you call
            <see cref="M:Qios.DevSuite.Components.QShapeItemCollection.CacheSelectedParts" /> before calling this method.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.CacheSelectedParts">
      <summary>
            Caches all the items that have parts selected. Besure to call this before moving relativily
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.RestoreSelectedPartsFromCache">
      <summary>
            Restores the cached parts for all the selected items from the cache.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeItemCollection.CopyTo(Qios.DevSuite.Components.QShapeItem[],System.Int32)">
      <summary>
            Copies this collection to specified collection
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItemCollection.MinimumItemCount">
      <summary>
            Gets the minimum items that this collection should have.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeItemCollection.Item(System.Int32)">
      <summary>
            Gets the item on the specified index.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapedWindow">
      <summary>
            The QShapedWindow is a QTranslucentWindow based on a QShape.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.#ctor">
      <summary>
            Default Construcor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ShouldSerializeAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QShapedWindow.Appearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ResetAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QShapedWindow.Appearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ShouldSerializeConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ResetConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ShouldSerializeColorScheme">
      <summary>
            Returns whether the <see cref="P:Qios.DevSuite.Components.QShapedWindow.ColorScheme" /> changes from its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ResetColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QShapedWindow.ColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ShouldSerializeBackColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QShapedWindow.BackColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ResetBackColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QShapedWindow.BackColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ShouldSerializeBackColor2">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QShapedWindow.BackColor2" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ResetBackColor2">
      <summary>
            Is used by the designer to reset the <see cref="P:Qios.DevSuite.Components.QShapedWindow.BackColor2" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ShouldSerializeBorderColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QShapedWindow.BorderColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ResetBorderColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QShapedWindow.BorderColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ShouldSerializeShadeColor">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QShapedWindow.BorderColor" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.ResetShadeColor">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QShapedWindow.BorderColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the foreground.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden, Draws the background.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnPaintMask(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the mask. White for opaque, black for transparent.
            </summary>
      <param name="pevent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnLoad(System.EventArgs)">
      <summary>
            Handles the Load event
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnLocationChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the LocationChanged event.
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnSizeChanged(System.EventArgs)">
      <summary>
            Handles the SizeChanged event.
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseDown event.
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseUp event.
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseMove event
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnMouseLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the MouseLeave event
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles windows messages.
            </summary>
      <param name="m">Message info</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.UpdateMaximumSize">
      <summary>
            Calculates and updates the maximum size
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.UpdateMinimumSize">
      <summary>
            Calculates and updates the minimum size
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.CreateShapedWindowConfigurationInstance">
      <summary>
            Can be used by subclasses to implement an other ShapedWindowConfiguration.
            </summary>
      <returns>A new QShapedWindowConfiguration Instance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnColorsChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QShapedWindow.ColorsChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnWindowsXPThemeChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QShapedWindow.WindowsXPThemeChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.OnAppearanceChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QShapedWindow.AppearanceChanged" /> event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.CreateAppearanceInstance">
      <summary>
            Can be implemented by subclasses. This should return a new instance of a QAppearance.
            This can be an inherited class of QAppearance.
            </summary>
      <returns>A new QAppearance instance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.Initialize">
      <summary>
            Initializes this Control. Be sure to call the base when this method is overridden.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapedWindow.HandleConfigurationChanged(System.Boolean)">
      <summary>
            Handles a configuration change
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QShapedWindow.ColorsChanged">
      <summary>
            Gets raised when the colors or the QColorScheme changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QShapedWindow.WindowsXPThemeChanged">
      <summary>
            Is raised when the Windows XP theme is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QShapedWindow.AppearanceChanged">
      <summary>
            Gets raised when the Appearance changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.Site">
      <summary>
            Overridden. Gets or sets the site.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.MinimumSize">
      <summary>
            Overridden. Gets or sets the minimum size. This should be set through the <see cref="P:Qios.DevSuite.Components.QShapedWindow.Configuration" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.MaximumSize">
      <summary>
            Overridden. Gets or sets the maximum size. This should be set through the <see cref="P:Qios.DevSuite.Components.QShapedWindow.Configuration" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.TopMost">
      <summary>
            Overridden. Gets or sets the TopMost property. This should be set through the <see cref="P:Qios.DevSuite.Components.QShapedWindow.Configuration" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.Appearance">
      <summary>
            Gets the QAppearance for this QShapedWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.Configuration">
      <summary>
            Gets the QShapedWindowConfiguration for this QShapedWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.BackgroundImage">
      <summary>
            Overridden. Gets or sets the image that is used to show the Window. The translucent areas in this Image will
            make the Window translucent. Do not set the background image, it will be set by the QShapedWindow to show the 
            QShape.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.BackColor">
      <summary>
            Overridden. Gets or sets the BackColor of this QShapedWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.BackColor2">
      <summary>
            Gets or sets the second background color of this QShapedWindow. The second background color
            is used when the BackgroundStyle property of the <see cref="P:Qios.DevSuite.Components.QShapedWindow.Appearance" /> property is set to <b>Gradient</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.BorderColor">
      <summary>
            Gets or sets the border color of this QContainerControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.ShadeColor">
      <summary>
            Gets or sets the shade color of this QContainerControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.BackColorPropertyName">
      <summary>
            Should get the property name of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the first BackColor.
            It returns the QShapedWindowControlBackground1.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.BackColor2PropertyName">
      <summary>
            Should get the property name of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the second BackColor.
            It returns the QShapedWindowControlBackground2.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.BorderColorPropertyName">
      <summary>
            Should get the property name of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the border color.
            It returns the QShapedWindowControlBorder.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.ShadeColorPropertyName">
      <summary>
            Should get the property name of the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> that contains the border color.
            It returns the QShapedWindowControlBorder.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.ContentRectangle">
      <summary>
            Gets or sets the content rectangle
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.FlipHorizontal">
      <summary>
            Determines if the shape must be flipped horizontally
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapedWindow.FlipVertical">
      <summary>
            Determines if the shape must be flipped vertically
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollBarDirection">
      <summary>
            Is used by <see cref="T:Qios.DevSuite.Components.QScrollBar" /> to define the direction
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarDirection.Horizontal">
      <summary>
            The QScrollBar is a Horizontal ScrollBar.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QScrollBarDirection.Vertical">
      <summary>
            The QScrollBar is a Vertical ScrollBar.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollEventArgs">
      <summary>
            EventArgs used in the scrolling events or <see cref="T:Qios.DevSuite.Components.QScrollBar" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QScrollEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructor. Creates a new QScrollEventArgs
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollEventArgs.CurrentValue">
      <summary>
            Contains the current scrollvalue of the <see cref="T:Qios.DevSuite.Components.QScrollBar" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QScrollEventArgs.PreviousValue">
      <summary>
            Contains the previous scrollvalue of the <see cref="T:Qios.DevSuite.Components.QScrollBar" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QScrollEventHandler">
      <summary>
            The delegate that is used in the Scrolling events.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QScrollBarExtension.Scroll">
      <summary>
            Gets raised when the QScrollBar scrolls.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QNumericUpDown">
      <summary>
            An advanced numeric up/down control 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QNumericUpDown.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QNumericUpDown.CreateConfigurationInstance">
      <summary>
            Creates the configuration instance for this QTextBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.CustomDropDownWindow">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.DataSource">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.DisplayMember">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.ValueMember">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.Items">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.Sorted">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.SelectedIndex">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.SelectedValue">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.SelectedItem">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.ChildWindowConfiguration">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.ChildCompositeConfiguration">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.ChildCompositeColorScheme">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDown.ItemConfiguration">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QNumericUpDownConfiguration">
      <summary>
            Defines configuration properties for a QNumericUpDown.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QNumericUpDownConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QNumericUpDownConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QNumericUpDownConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QNumericUpDownConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDownConfiguration.AutoCompleteMode">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDownConfiguration.AutoCompleteSource">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QNumericUpDownConfiguration.InputStyle">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuItem">
      <summary>
            The QMenuItem class represents a menu item on a <see cref="T:Qios.DevSuite.Components.QMenu" />. It can contain a <see cref="P:Qios.DevSuite.Components.QMenuItem.Title" /> to represent text or
            an <see cref="P:Qios.DevSuite.Components.QMenuItem.Icon" /> to show an icon. To use a different icon when the QMenuItem is checked use the <see cref="P:Qios.DevSuite.Components.QMenuItem.CheckedIcon" />.
            <br /><br />
            Set the <see cref="P:Qios.DevSuite.Components.QMenuItem.IsSeparator" /> property to true to define the QMenuItem as a separator.
            <br /><br />
            A QMenuItem can be activated by the mouse, a <see cref="P:Qios.DevSuite.Components.QMenuItem.Shortcut" /> or a <see cref="P:Qios.DevSuite.Components.QMenuItem.Hotkey" />.
            <br /><br />
            The <see cref="T:Qios.DevSuite.Components.QMenu" /> system also supports personalization. Set the <see cref="P:Qios.DevSuite.Components.QMenuItem.VisibleWhenPersonalized" /> to false to make sure a QMenuItem is not drawn
            when a QMenu is personalized.
            <br /><br />
            Because applications often have a system with rights that determine if a user is allowed to do something, a QMenuItem contains a <see cref="P:Qios.DevSuite.Components.QMenuItem.UserHasRightToExecute" /> property.
            With this property it is possible to disable or hide the QMenuItem when the user is not allowed to execute the item. Use the <see cref="P:Qios.DevSuite.Components.QMenuItem.UserRightBehavior" />
            to indicate if the MenuItem should be hidden or disabled.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommand">
      <summary>
            This is a base class for command based visual items like a <see cref="T:Qios.DevSuite.Components.QMenuItem" />.
            A QCommand can be visualized in a <see cref="T:Qios.DevSuite.Components.IQCommandContainer" /> and can contain child commands
            via the the <see cref="P:Qios.DevSuite.Components.QCommand.Commands" /> collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.#ctor">
      <summary>
            Default Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Creates a new QCommand and adds it to container.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.PerformParentLayout">
      <summary>
            Obsolete since 1.0.5.10, use <see cref="M:Qios.DevSuite.Components.QCommand.NotifyParentContainerOfChange(Qios.DevSuite.Components.QCommandUIRequest)" /> instead.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.PerformParentRefresh">
      <summary>
            Obsolete since 1.0.5.10, use <see cref="M:Qios.DevSuite.Components.QCommand.NotifyParentContainerOfChange(Qios.DevSuite.Components.QCommandUIRequest)" /> instead.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.NotifyParentContainerOfChange(Qios.DevSuite.Components.QCommandUIRequest)">
      <summary>
            Notifies the ParentContainer of the change on this command.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.HandleChildCommandCollectionChanged(System.Int32,System.Int32)">
      <summary>
            Handles a change on the Child CommandCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.HandleChildCommandChanged">
      <summary>
            Handles a change on a ChildCommand.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.CreateChildCommandContainer">
      <summary>
            When implemented in a descendant class, it should return a new instance of an IQCommandContainer,
            so that child items can be visualized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.CreateCommandCollection">
      <summary>
            When implemented in a descendant class, it should return a new instance of an QCommandCollection,
            so that child items can be created.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.SetParent(Qios.DevSuite.Components.IQCommandContainer,Qios.DevSuite.Components.QCommand)">
      <summary>
            Sets the parent of this QCommand
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.SetAdditionalProperty(System.Int32,System.Object)">
      <summary>
            Sets an additional property for the QCommand.
            </summary>
      <remarks>
            The Keys used by QIOS are defined in <see cref="T:Qios.DevSuite.Components.QCommandPropertyKey" />.
            You can use your own keys. Be sure that the index starts on 1024.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.ContainsAdditionalProperty(System.Int32)">
      <summary>
            Returns whether this QCommand contains a specified property.
            </summary>
      <remarks>
            The Keys used by QIOS are defined in <see cref="T:Qios.DevSuite.Components.QCommandPropertyKey" />.
            You can use your own keys. Be sure that the index starts on 1024.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.GetAdditionalProperty(System.Int32)">
      <summary>
            Returns an additional property. Returns null when no property is defined.
            </summary>
      <remarks>
            The Keys used by QIOS are defined in <see cref="T:Qios.DevSuite.Components.QCommandPropertyKey" />.
            You can use your own keys. Be sure that the index starts on 1024.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.Clone(System.Boolean)">
      <summary>
            Clones this QCommand and sets the AdditionalProperty defined by <see cref="F:Qios.DevSuite.Components.QCommandPropertyKey.OriginalCommand" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.Dispose">
      <summary>
            Disposes the group configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.Dispose(System.Boolean)">
      <summary>
            Disposes the group configuration
            </summary>
      <param name="disposing">Disposing</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommand.Finalize">
      <summary>
            Destructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.NameSeparator">
      <summary>
            Gets or sets the separator used by <see cref="T:Qios.DevSuite.Components.QCommandCollection" /> to find relativeCommands.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.ItemName">
      <summary>
            Gets or sets the name of this QCommand.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.ParentFullName">
      <summary>
            Gets the FullName of all its parents separated by a <see cref="P:Qios.DevSuite.Components.QCommand.NameSeparator" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.FullName">
      <summary>
            Gets the FullName of the QCommand. This is the name of the QCommand and all its parents
            separated by a <see cref="P:Qios.DevSuite.Components.QCommand.NameSeparator" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.HasChildItems">
      <summary>
            Gets whether this QCommand has child commands.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.ParentContainer">
      <summary>
            Gets the ParentContainer of this QCommand.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.ParentControl">
      <summary>
            Gets the ParentContainer as a Control when it is a Control, else null
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.ParentCommand">
      <summary>
            Gets the ParentCommand of this QCommand.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.ChildContainerCreated">
      <summary>
            Gets whether the ChildContainer is created.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.ChildContainer">
      <summary>
            Gets the IQCommandContainer for the child commands of this QCommand.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.Bounds">
      <summary>
            Gets or sets the bounds of the QCommand on the parent <see cref="T:Qios.DevSuite.Components.IQCommandContainer" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.Left">
      <summary>
            Returns the Left of the bounds. This can be used when the <see cref="P:Qios.DevSuite.Components.QCommand.Bounds" /> are set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.Top">
      <summary>
            Returns the Top of the bounds. This can be used when the <see cref="P:Qios.DevSuite.Components.QCommand.Bounds" /> are set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.Right">
      <summary>
            Returns the Right of the bounds. This can be used when the <see cref="P:Qios.DevSuite.Components.QCommand.Bounds" /> are set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.Bottom">
      <summary>
            Returns the Bottom of the bounds. This can be used when the <see cref="P:Qios.DevSuite.Components.QCommand.Bounds" /> are set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.Width">
      <summary>
            Returns the Width of the bounds. This can be used when the <see cref="P:Qios.DevSuite.Components.QCommand.Bounds" /> are set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.Height">
      <summary>
            Returns the Height of the bounds. This can be used when the <see cref="P:Qios.DevSuite.Components.QCommand.Bounds" /> are set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.IsCommandCollectionCreated">
      <summary>
            Gets whether the actual commandCollection for the <see cref="P:Qios.DevSuite.Components.QCommand.Commands" /> property is created.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.Commands">
      <summary>
            Gets or sets the collection of child commands for this QCommand.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCommand.Disposed">
      <summary>
            Gets raised when the QCommand gets disposed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommand.Site">
      <summary>
            Gets or sets the Site this command belongs to.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Constructor. Creates a new QMenuItem and adds it to container.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.#ctor">
      <summary>
            Default Constructor. Creates a new QMenuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.#ctor(System.Boolean)">
      <summary>
            Constructor. Creates a QMenuItem with the specified parameters.
            </summary>
      <param name="separator">Indicates if the QMenuItem is a separator.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.#ctor(System.String)">
      <summary>
            Constructor. Creates a QMenuItem with the specified parameters.
            </summary>
      <param name="title">Contains the title of the QMenuItem</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.#ctor(System.String,System.String)">
      <summary>
            Constructor. Creates a QMenuItem with the specified parameters.
            </summary>
      <param name="title">Contains the title of the QMenuItem.</param>
      <param name="name">Contains the name of the QMenuItem.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.#ctor(System.String,System.String,System.Drawing.Icon,System.Windows.Forms.Shortcut)">
      <summary>
            Constructor. Creates a QMenuItem with the specified parameters.
            </summary>
      <param name="title">Contains the title of the QMenuItem.</param>
      <param name="itemName">Contains the name of the QMenuItem.</param>
      <param name="icon">Contains the icon.</param>
      <param name="shortcut">Contains the shortcut.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.ShouldSerializeIcon">
      <summary>
            Returns whether the Icon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.ResetIcon">
      <summary>
            Resets the Icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.ShouldSerializeCheckedIcon">
      <summary>
            Returns whether the CheckedIcon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.ResetCheckedIcon">
      <summary>
            Resets the CheckedIcon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.ShouldSerializeDisabledIcon">
      <summary>
            Returns whether the DisabledIcon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.ResetDisabledIcon">
      <summary>
            Resets the DisabledIcon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.ContentsRectangleToParent(System.Drawing.Rectangle)">
      <summary>
            Calcuates a rectangle that is relative to the contents to a rectangle that is relative
            to the parentContainer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.ParentRectangleToContents(System.Drawing.Rectangle)">
      <summary>
            Calcuates a rectangle that is relative
            to the parentContainer to the contents rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.ContentsPointToParent(System.Drawing.Point)">
      <summary>
            Calcuates a point that is relative to the contents to a point that is relative
            to the parentContainer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.HandleChildCommandCollectionChanged(System.Int32,System.Int32)">
      <summary>
            Handles a ChildCommandCollectionChange
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.LoadFromXml(System.Xml.XPath.IXPathNavigable,Qios.DevSuite.Components.QMenuItemLoadType)">
      <summary>
            Loads the contents of this QMenuItem from the specified XmlElement.
            </summary>
      <param name="itemElement">The element to load it from</param>
      <param name="loadType">specifies what to load</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.SaveToXml(System.Xml.XPath.IXPathNavigable,Qios.DevSuite.Components.QMenuItemSaveType)">
      <summary>
            Saves the QMenuItem to Xml
            </summary>
      <param name="collectionElement">Contains the collection XML Element</param>
      <param name="saveType">Specifies what to save.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.SetParent(Qios.DevSuite.Components.IQCommandContainer,Qios.DevSuite.Components.QCommand)">
      <summary>
            Overridden. Sets the parent container and command
            </summary>
      <param name="container">Parent container</param>
      <param name="command">Parent command</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.CreateCommandCollection">
      <summary>
            Creates a new MenuItemCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.CreateChildCommandContainer">
      <summary>
            Creates a new ChildContainer. This is an instance of <see cref="T:Qios.DevSuite.Components.QFloatingMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.GetMenuItemWithShortcut(System.Windows.Forms.Keys)">
      <summary>
            Returns the MenuItem that has shortcut as its shortcut. The MenuItem
            that has the shortcut cannot have child MenuItems, else it does not get returned.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnParentMenuItemCollectionChanged(System.EventArgs)">
      <summary>
            Raises the ParentMenuItemCollectionChanged event
            </summary>
      <param name="e">Event arguments</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnMenuItemMouseDown(Qios.DevSuite.Components.QMenuMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuItemMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnMenuItemMouseUp(Qios.DevSuite.Components.QMenuMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuItemMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnMenuItemsRequested(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuItemsRequested" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnMenuItemSelected(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuItemSelected" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnMenuItemActivating(Qios.DevSuite.Components.QMenuCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuItemActivating" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnMenuItemActivated(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnMenuShowing(Qios.DevSuite.Components.QMenuCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuShowing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnPaintMenuItem(Qios.DevSuite.Components.QPaintMenuItemEventArgs)">
      <summary>
            Raises the PaintMenuItem event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItem.OnMenuShowed(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuItemActivated" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.MenuItemMouseDown">
      <summary>
            Gets raised when a the mouse hovers over a MenuItem and a button is pressed.
            The <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuItemActivated" /> event should be used for handling the activation of a MenuItem,
            because it also allows keyboard activation and it takes into consideration the InformationOnly and Enabled properties.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.MenuItemMouseUp">
      <summary>
            Gets raised when a the mouse hovers over a MenuItem and a button is released.
            The <see cref="E:Qios.DevSuite.Components.QMenuItem.MenuItemActivated" /> event should be used for handling the activation of a MenuItem,
            because it also allows keyboard activation and it takes into consideration the InformationOnly and Enabled properties.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.ParentMenuItemCollectionChanged">
      <summary>
            Gets changed when the ParentMenuItemCollection changes
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.MenuItemsRequested">
      <summary>
            Gets raised when a user tries to expand a menuItem while the menuItem doens't have any child menuitems.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.MenuItemSelected">
      <summary>
            Gets raised when a user selects a menuItem via the mouse or the Keyboard
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.MenuItemActivating">
      <summary>
            Gets raised when a user activates a MenuItem by clicking it, using a ShortCut, a HotKey or navigating
            to it with the keyboard. This event can be canceled.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.MenuItemActivated">
      <summary>
            Gets raised when a user activates a menuItem by clicking it, using a ShortCut, a HotKey or navigating
            to it with the keyboard.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.MenuShowing">
      <summary>
            Gets raised when a menuItem is activated and it has ChildMenuItems before the ChildMenu pops up. This
            event can be canceled.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.MenuShowed">
      <summary>
            Gets raised when a menuItem is activated and it has ChildMenuItems when the ChildMenu is popped up.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMenuItem.PaintMenuItem">
      <summary>
            Gets raised when a MenuItem must be painted.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.MenuItems">
      <summary>
            Gets the collection of child MenuItems of this MenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ParentMenuItemCollection">
      <summary>
            Returns the ParentMenuItemCollection of this QMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ParentMenu">
      <summary>
            Gets the ParentMenu if there is one. This is set when the ParentMenuItem is visually opened.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ParentMenuItemContainer">
      <summary>
            Gets the ParentMenuItemContainer if there is one. This is set when the ParentMenuItem is visually opened.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ParentMenuItem">
      <summary>
            Gets the ParentMenuItem of this QMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ChildMenu">
      <summary>
            Gets the ChildMenu if this QMenuItem has one.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.IsSeparator">
      <summary>
            Gets or sets whether this QMenuItem is a separator.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.CloseMenuOnActivate">
      <summary>
            Gets or sets whether the Menu must be closed when the Item is activated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ToolTip">
      <summary>
            Gets or sets the text on the ToolTip. This must contain valid Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.UsedToolTip">
      <summary>
            Gets the actual used ToolTipText. This depends on the <see cref="P:Qios.DevSuite.Components.QMenuItem.ToolTip" /> property and the Text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.Title">
      <summary>
            Gets or sets the title of the QMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.DisplayedTitle">
      <summary>
            Gets the DisplayedTitle. This is the Title without a possible ampesant character.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.Icon">
      <summary>
            Gets or sets the Icon of the QMenuItem.
            </summary>
      <remarks>																						   
            When you load or save MenuItems via <see cref="M:Qios.DevSuite.Components.QMenuItemCollection.SaveToXml(System.String,Qios.DevSuite.Components.QMenuItemSaveType)" /> or <see cref="M:Qios.DevSuite.Components.QMenuItemCollection.LoadFromXml(System.String,Qios.DevSuite.Components.QMenuItemLoadType)" /> use the <see cref="P:Qios.DevSuite.Components.QMenuItem.IconResourceName" />
            instead of setting the Icon, else it cannot be loaded.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.IconResourceName">
      <summary>
            Gets or sets a possible resource name to load the Icon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.IconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.CheckedIcon">
      <summary>
            Gets or sets the Icon of the QMenuItem when it is checked. When this is not set the default CheckedIcon is used.
            </summary>
      <remarks>
            When you load or save MenuItems via <see cref="M:Qios.DevSuite.Components.QMenuItemCollection.SaveToXml(System.String,Qios.DevSuite.Components.QMenuItemSaveType)" /> or <see cref="M:Qios.DevSuite.Components.QMenuItemCollection.LoadFromXml(System.String,Qios.DevSuite.Components.QMenuItemLoadType)" /> use the <see cref="P:Qios.DevSuite.Components.QMenuItem.CheckedIconResourceName" />
            instead of setting the Icon, else it cannot be loaded.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.CheckedIconResourceName">
      <summary>
            Gets or sets a possible resource name to load the CheckedIcon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.CheckedIconLoadedFromResource">
      <summary>
            Gets whether the CheckedIcon was loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.DisabledIcon">
      <summary>
            Gets or sets the Disabled Icon of the QMenuItem. When this is not set the default Icon is used for painting.
            </summary>
      <remarks>																						   
            When you load or save MenuItems via <see cref="M:Qios.DevSuite.Components.QMenuItemCollection.SaveToXml(System.String,Qios.DevSuite.Components.QMenuItemSaveType)" /> or <see cref="M:Qios.DevSuite.Components.QMenuItemCollection.LoadFromXml(System.String,Qios.DevSuite.Components.QMenuItemLoadType)" /> use the <see cref="P:Qios.DevSuite.Components.QMenuItem.IconResourceName" />
            instead of setting the Icon, else it cannot be loaded.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.DisabledIconResourceName">
      <summary>
            Gets or sets a possible resource name to load the DisabledIcon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.DisabledIconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.DisabledIconGrayScaled">
      <summary>
            Gets or sets whether the Icon or DisabledIcon must be drawn gray-scaled when disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.UsedIcon">
      <summary>
            Gets the Icon that is used. This is determined by whether the item is checked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.UsedIconReplaceColor">
      <summary>
            Gets the ReplaceColor that is used. This is determined by whether the Item is checked.
            The ReplaceColor is replaced with the TextColor before the item is drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.IconColorToReplace">
      <summary>
            Gets or sets the color of the Icon or DisabledIcon to replace with the TextColor. This is used
            to make sure the Icon is always visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.CheckedIconColorToReplace">
      <summary>
            Gets or sets the color of the CheckedIcon to replace with the TextColor. This is used
            to make sure the CheckedIcon is always visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.Checked">
      <summary>
            Gets or sets whether the QMenuItem is checked. When this is set the <see cref="P:Qios.DevSuite.Components.QMenuItem.CheckedIcon" /> is used. If the
            CheckedIcon is not set the default CheckedIcon is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.Shortcut">
      <summary>
            Gets or sets the Shortcut of the QMenuItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ShortcutKeys">
      <summary>
            Gets the Shortcut as <see cref="T:System.Windows.Forms.Keys" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ShortcutString">
      <summary>
            Gets the Shortcut as a string
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.SuppressShortcutToSystem">
      <summary>
            Gets or sets whether the pressed shortcut must be suppressed and not be bubbeled up to the system. Turn this off to let the system handle the shortcut.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.Hotkey">
      <summary>
            Returns the Hotkey of this QMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.Visible">
      <summary>
            Gets or sets whether this item is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.Enabled">
      <summary>
            Gets or sets whether this item is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.InformationOnly">
      <summary>
            Gets or sets whether this item has only information purposes. When it is true it cannot be clicked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.IsInformationOnly">
      <summary>
            Gets whether the item is InformationOnly or is a separator.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.UserHasRightToExecute">
      <summary>
            Gets or sets whether the use has right to execute the QMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.VisibleWhenPersonalized">
      <summary>
            Gets or sets whether the QMenuItem is shown when the <see cref="T:Qios.DevSuite.Components.QMenu" /> is personalized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.UserRightBehavior">
      <summary>
            Gets or sets what should happen when the user has no right to execute the QMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.IsVisible">
      <summary>
            Gets whether the QMenuItem is visible based on the Visible, UserHasRightToExecute, UserRightBehavior
            VisibleWhenPersonalized properties and whether its parent QMenu is Personalized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.OuterBounds">
      <summary>
            Gets or sets the OuterBounds. This is the Bounds inflated by the Margin. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ContentsBounds">
      <summary>
            Gets bounds of the Contents. This is the Bounds deflated by the Padding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.Bounds">
      <summary>
            Gets or sets the bounds of the QCommand on the parent <see cref="T:Qios.DevSuite.Components.IQCommandContainer" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.Control">
      <summary>
            Gets or sets the Control that will be placed on the MenuItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ControlBounds">
      <summary>
            Gets the ControlBounds relative to the ContentsBounds
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.IsAccessible">
      <summary>
            Gets whether the QMenuItem is accessible. This is defined by whether the item is Visible, is Enabled, is not Information Only
             and if the user has the Right to execute it.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.IsEnabled">
      <summary>
            Gets whether the QMenuItem is enabled based on the Enabled, UserHasRightToExecute and the UserRightBehavior
            properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.PreviousVisibleItem">
      <summary>
            Returns the previous visible QMenuItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.NextVisibleItem">
      <summary>
            Returns the Next visible QMenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.IconBounds">
      <summary>
            Gets the IconBounds relative to the ContentsBounds
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.TextBounds">
      <summary>
            Gets the TextBounds relative to the ContentsBounds
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.ShortcutBounds">
      <summary>
            Gets ShortcutBounds relative to the ContentsBounds
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.HasChildItemsBounds">
      <summary>
            Gets the HasChildItem Bounds relative to the ContentsBounds
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.HasChildItemsHotBounds">
      <summary>
            Gets the rectangle the user has to click to open ChildItems (used for QToolBar)
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.SeparatorBounds">
      <summary>
            Gets the Separator Bounds relative to the ContentsBounds
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.CommandObject">
      <summary>
            Contains a possible additional object to save some extra information.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItem.MouseIsOverMenuItem">
      <summary>
            Returns whether the mouse is over this MenuItem.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection">
      <summary>
            Is used to maintain a collection of <see cref="T:Qios.DevSuite.Components.QMarkupTextRenderedLine" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.CalculateAbsoluteLocation(System.Drawing.PointF)">
      <summary>
            Calculates the absolute location of a childlocation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.IndexOf(Qios.DevSuite.Components.QMarkupTextRenderedLine)">
      <summary>
            Gets the index of the specified line.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.GetLineThatContainsAbsoluteY(System.Single)">
      <summary>
            Returns the Line that contains the specified absolute yLocation. This is the point calculated in the parent control coordinates. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.GetPartThatContainsAbsolutePoint(System.Drawing.PointF)">
      <summary>
            Returns the Part that contains the specified absolute point. This is the point calculated in the parent control coordinates. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.MarkupText">
      <summary>
            Gets the markupText this LineCollection belongs to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.Bounds">
      <summary>
            Gets the Bounds of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.Size">
      <summary>
            Gets the Size of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.Location">
      <summary>
            Gets the location of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.Left">
      <summary>
            Gets the Left of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.Top">
      <summary>
            Gets the Top of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.Width">
      <summary>
            Gets or sets the Width of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.Height">
      <summary>
            Gets the Height of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.AbsoluteLocation">
      <summary>
            Gets the absolute location of this Line.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedLineCollection.Item(System.Int32)">
      <summary>
            Returns the line at index
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextElementCollection">
      <summary>
            Is used to maintain a collection of <see cref="T:Qios.DevSuite.Components.QMarkupTextElement" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementCollection.IndexOf(Qios.DevSuite.Components.QMarkupTextElement)">
      <summary>
            Gets the index of the specified element.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementCollection.GetElementThatContainsAbsolutePoint(System.Drawing.PointF)">
      <summary>
            Returns the Element that contains the specified absolute point. This is the point calculated in the parent control coordinates.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementCollection.FindElement(System.String,System.Boolean)">
      <summary>
            Finds the element with the specified name. if deep is true, it also searches all the child elements of the elements.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementCollection.DisposeRenderedObjects(System.Boolean)">
      <summary>
            Disposes the rendered objects. if deep is true all the child elements will dispose their rendered objects too.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementCollection.DisposeAttributes(System.Boolean)">
      <summary>
            Disposes the attributes objects. if deep is true all the child elements will dispose their rendered objects too.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementCollection.DisposeElements">
      <summary>
            Disposes the elements.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementCollection.Item(System.Int32)">
      <summary>
            Returns the element at index
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementCollection.Item(System.String)">
      <summary>
            Gets the element with the specified name from this collection. This doesn't do a deep search. 
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxAppearance">
      <summary>
            Defines the Appearance for the <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxButtonShapeAppearance">
      <summary>
            Defines the Appearance for buttons
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxButtonShapeAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxButtonShapeAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxKeyboardBehaviour">
      <summary>
            Determines the QInputBox behaviour when predefined keys are pressed
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxKeyboardBehaviour.None">
      <summary>
            No keyboard handling
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxKeyboardBehaviour.ExpandKeys">
      <summary>
            Handle the keys to expand the drop down window of a DropDown or DropDownList control
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxKeyboardBehaviour.CollapseKeys">
      <summary>
            Handle the keys to collapse the drop down window of a DropDown or DropDownList control
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxKeyboardBehaviour.NavigationKeys">
      <summary>
            Handle the navigation keys of a DropDown, DropDownList to select a previous or next item.
            Handle the navigation keys of a Numeric up/down control to decrease or increase the numeric value.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxKeyboardBehaviour.PagingKeys">
      <summary>
            Handle the keys of a DropDown or DropDownList control to select the first/last item
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAutoCompleteMode">
      <summary>
            Determines the mode for auto completion
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteMode.None">
      <summary>
            No auto completion
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteMode.Suggest">
      <summary>
            Suggested options will be presented in a floating window
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteMode.Append">
      <summary>
            Suggested option will be appended to the current text
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAutoCompleteSource">
      <summary>
            Determines the source for auto completion
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteSource.None">
      <summary>
            Specifies that no AutoCompleteSource is currently in use.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteSource.AllSystemSources">
      <summary>
            Specifies the equivalent of FileSystem and AllUrl
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteSource.AllUrl">
      <summary>
            Specifies the equivalent of HistoryList and RecentlyUsedList
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteSource.FileSystem">
      <summary>
            Specifies the file system as the source
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteSource.FileSystemDirectories">
      <summary>
            Specifies that only directory names and not file names will be automatically completed
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteSource.HistoryList">
      <summary>
            Includes the Uniform Resource Locators (URLs) in the history list
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteSource.ListItems">
      <summary>
            Specifies that the items of the QInputBox represent the source
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAutoCompleteSource.RecentlyUsedList">
      <summary>
            Includes the Uniform Resource Locators (URLs) in the list of those URLs most recently used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxStyle">
      <summary>
            Determines the drop down style of the QInputBox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxStyle.TextBox">
      <summary>
            Textbox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxStyle.DropDown">
      <summary>
            Drop down with the possibility of the user entering text.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxStyle.DropDownList">
      <summary>
            Dropdown without the possibility of the user entering text.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxStyle.UpDown">
      <summary>
            The QInputBox functions as a NumericUpDown control
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxStates">
      <summary>
            Determines the state of an element of the QInputBox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxStates.Normal">
      <summary>
            The default state for the element
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxStates.Hot">
      <summary>
            The mouse pointer is over the element
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxStates.Focused">
      <summary>
            The element has the focus
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxStates.Inactive">
      <summary>
            The element is disabled or inactive
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxButtonAlign">
      <summary>
            Determines the alignment of a QInputBox button
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonAlign.Left">
      <summary>
            The button is left aligned within the borders
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonAlign.LeftOutside">
      <summary>
            The button is left aligned outside the borders
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonAlign.Right">
      <summary>
            The button is right aligned within the borders
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonAlign.RightOutside">
      <summary>
            The button is right aligned within the borders
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxButtonDrawType">
      <summary>
            Defines additional draw types for the button of a <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonDrawType.DontDrawButtonBackground">
      <summary>
            Dont draw the button background
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonDrawType.DrawButtonDisabled">
      <summary>
            Draws the button disabled.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonDrawType.DrawButtonNormal">
      <summary>
            Draws the button in normal state.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonDrawType.DrawButtonHot">
      <summary>
            Draw the button hot
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QInputBoxButtonDrawType.DrawButtonPressed">
      <summary>
            Draw the button pressed
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxCancelEventHandler">
      <summary>
            Defines the delegate for events that can be cancelled on <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxCancelEventArgs">
      <summary>
            Defines EventArgs for events that can be cancelled on <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxCancelEventArgs.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxEventHandler">
      <summary>
            Defines the delegate for events on <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxEventArgs">
      <summary>
            Defines EventArgs for events on <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxEventArgs.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxCompositeWindowEventHandler">
      <summary>
            Defines the delegate for events for a QInputBoxCompositeWindow on a <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxCompositeWindowEventArgs">
      <summary>
            Defines EventArgs for events for a QInputBoxCompositeWindow on a <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxCompositeWindowEventArgs.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxCompositeWindowEventArgs.#ctor(Qios.DevSuite.Components.QInputBoxCompositeWindow)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxCompositeWindowEventArgs.Window">
      <summary>
            Gets or sets the window
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxButtonEventHandler">
      <summary>
            Defines the delegate used for button events on the <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxButtonEventArgs">
      <summary>
            Defines EventArgs for the button events on the <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxButtonEventArgs.#ctor(Qios.DevSuite.Components.QInputBoxButtonType,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxButtonEventArgs.ButtonType">
      <summary>
            Gets the button type that raised the event
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration">
      <summary>
            Contains configuration properties for the items of the <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.CreateAppearance">
      <summary>
            Creates the appearance instance
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.AlignmentHorizontal">
      <summary>
            Gets or sets the alignment of this item horizontally.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.AlignmentVertical">
      <summary>
            Gets or sets the alignment of this item vertically.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.Direction">
      <summary>
            Gets or sets the direction of the content of this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.StretchHorizontal">
      <summary>
            Gets or sets whether the item is horizontal stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.StretchVertical">
      <summary>
            Gets or sets whether the item is vertical stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.ShrinkHorizontal">
      <summary>
            Gets or sets whether the item is horizontal shrinked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.ShrinkVertical">
      <summary>
            Gets or sets whether the item is vertical shrinked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.ContentLayoutOrder">
      <summary>
            Gets or sets the content layout order of the child parts. This defines when a part is layed out.
            The actual position is also determined by the alignment of a part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.Visible">
      <summary>
            Gets or sets whether the item is visible. Undefined means that is is based on other properties. This means that it is most often visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItemConfiguration.Layout">
      <summary>
            Gets or set the layout of the QCompositeItem
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeInputBoxItemAppearance">
      <summary>
            Contains the appearance for qcompositeitems.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeInputBoxItemAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingInputBoxWindowConfiguration">
      <summary>
            Contains the configuration for the drop down window of the QInputBox
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingInputBoxWindowConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeInputBoxItem">
      <summary>
            Defines an item that represents an item of a <see cref="T:Qios.DevSuite.Components.QInputBox" />. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeInputBoxItem.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeInputBoxItem.#ctor(Qios.DevSuite.Components.QInputBox)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeInputBoxItem.Title">
      <summary>
            Gets or sets the title of the QCompositeInputBoxItem
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeAppearance">
      <summary>
            Contains the appearance for the composite of the drop down window of the QInputBox
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeAppearance.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeScrollConfiguration">
      <summary>
            Contains configuration properties for the scrolling on the composite of the childwindow of a QInputBox
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeScrollConfiguration">
      <summary>
            Contains configuration properties for the scrolling on a <see cref="T:Qios.DevSuite.Components.QComposite" /> or a <see cref="T:Qios.DevSuite.Components.QCompositeGroup" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollConfiguration.PropBarAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollConfiguration.PropScrollType">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollConfiguration.PropScrollHorizontal">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollConfiguration.PropScrollVertical">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollConfiguration.PropScrollStepSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeScrollConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeScrollConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeScrollConfiguration.CreateTrackButtonAppearance">
      <summary>
            Creates the appearance
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeScrollConfiguration.CreateButtonAppearance">
      <summary>
            Creates the appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeScrollConfiguration.CreateBarAppearance">
      <summary>
            Creates the appearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeScrollConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeScrollConfiguration.ScrollStepSize">
      <summary>
            Gets or sets the stepsize to use. When animating this increases the speed, when not animating this increases
            the step of one button-click.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeScrollConfiguration.Direction">
      <summary>
            Gets or sets the direction of the scrollbar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeScrollConfiguration.ScrollHorizontal">
      <summary>
            Gets or sets when horizontal scroll must be visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeScrollConfiguration.ScrollVertical">
      <summary>
            Gets or sets when vertical scroll must be visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeScrollConfiguration.ScrollType">
      <summary>
            Gets or sets what type of scrolling to use.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeScrollConfiguration.BarAppearance">
      <summary>
            Gets the appearance of a scrollbar on a <see cref="T:Qios.DevSuite.Components.QComposite" /> or <see cref="T:Qios.DevSuite.Components.QCompositeGroup" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeScrollConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeScrollConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeScrollConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeScrollConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration">
      <summary>
            Defines the configuration for the QComposite on the QFloatingInputBoxWindow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.CreateAppearance">
      <summary>
            Creates the appearance
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.CreateScrollConfiguration">
      <summary>
            Creates the scrollConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.AlignmentHorizontal">
      <summary>
            Gets or sets the alignment of this item horizontally.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.AlignmentVertical">
      <summary>
            Gets or sets the alignment of this item vertically.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.ExpandBehavior">
      <summary>
            Gets or sets the behaviour for expanded or expanding items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.ExpandDirection">
      <summary>
            Gets or sets the direction a QCompositeItem will expand to when it contains child QCompositeItems.
            This can be overridden by the QCompositeItems.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.ExpandingDelay">
      <summary>
            Gets or sets the delay for expanding items that have CompositeChildItems when hovering above the item
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.HotkeyPrefixVisibilityType">
      <summary>
            Gets the used HotkeyVisibility type. This depends on whether the WindowsSettings are inherited.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.HotkeyWindowConfiguration">
      <summary>
            Gets the configuration for the HotkeyWindow. This window is displayed when ALT is pressed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.HotkeyWindowShowBehavior">
      <summary>
            Gets or sets the show behavior of the QHotkeyWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.IconBackgroundMargin">
      <summary>
            Gets or sets the margin of the icon background
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.IconBackgroundSize">
      <summary>
            Gets or sets the size of the icon background
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.IconBackgroundVisible">
      <summary>
            Gets or sets whether the icon background of the QCompositeMenu is visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.InheritWindowsSettings">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QComposite" /> should inherit WindowsSettings like showing hotkeys
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.Layout">
      <summary>
            Gets or set the layout of the QCompositeItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.Margin">
      <summary>
            Gets or sets the margin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.ShrinkHorizontal">
      <summary>
            Gets or sets whether the item can be horizontal shrinked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.ShrinkVertical">
      <summary>
            Gets or sets whether the item can be vertical shrinked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.StretchHorizontal">
      <summary>
            Gets or sets whether the item can be horizontal stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.StretchVertical">
      <summary>
            Gets or sets whether the item can be vertical stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.Visible">
      <summary>
            Gets or sets whether the item is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingInputBoxWindowCompositeConfiguration.MinimumSize">
      <summary>
            Overridden. The minimum size will be set based on the size of the QInputBox
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxCompositeWindow">
      <summary>
            Defines a floating window for displaying the items of a QInputBox
            </summary>
      <remarks>When inheriting from this class, you probably also want to override <see cref="M:Qios.DevSuite.Components.QInputBoxCompositeWindow.ClearInputBoxItems" />, 
            <see cref="M:Qios.DevSuite.Components.QInputBoxCompositeWindow.AddInputBoxItem(Qios.DevSuite.Components.QCompositeItemBase)" /> and <see cref="M:Qios.DevSuite.Components.QInputBoxCompositeWindow.CreateInputBoxItem(System.Object,Qios.DevSuite.Components.QInputBox,System.Boolean)" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxCompositeWindow.#ctor(System.Windows.Forms.IWin32Window)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxCompositeWindow.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxCompositeWindow.ClearInputBoxItems">
      <summary>
            Clears all the items that the user can select
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxCompositeWindow.AddInputBoxItem(Qios.DevSuite.Components.QCompositeItemBase)">
      <summary>
            Adds an item that the user can select to the window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxCompositeWindow.CreateInputBoxItem(System.Object,Qios.DevSuite.Components.QInputBox,System.Boolean)">
      <summary>
            Creates an item that the user can select to the window
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxAcceleration">
      <summary>
            Class that represents the acceleration increment after a certain number of seconds for a QInputBox that is configured
            as a numeric up/down control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxAcceleration.#ctor(System.Int32,System.Decimal)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxAcceleration.Seconds">
      <summary>
            Gets the number of seconds after which the increment becomes active
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxAcceleration.Increment">
      <summary>
            Gets the increment
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QInputBoxAccelerationCollection">
      <summary>
            Collection to hold QInputBoxAcceleration instances
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxAccelerationCollection.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxAccelerationCollection.Add(Qios.DevSuite.Components.QInputBoxAcceleration)">
      <summary>
            Adds a QInputBoxAcceleration instance to the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QInputBoxAccelerationCollection.Remove(Qios.DevSuite.Components.QInputBoxAcceleration)">
      <summary>
            Removes a QInputBoxAcceleration instance from the collection
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QInputBoxAccelerationCollection.Item(System.Int32)">
      <summary>
            Gets or sets a QInputBoxAcceleration instance at the specified index
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerBarItemConfiguration">
      <summary>
            Contains configuration properties for instances of <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarItemConfiguration.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarItemConfiguration.Dispose">
      <summary>
            Disposes the group configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarItemConfiguration.Finalize">
      <summary>
            Destructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarItemConfiguration.Dispose(System.Boolean)">
      <summary>
            Disposes the group configuration
            </summary>
      <param name="disposing">Disposing</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarItemConfiguration.PutFont(System.Drawing.Font)">
      <summary>
            Sets the Font of this configuration.
            This does not raise any events.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.DepersonalizeDelay">
      <summary>
            Overridden. Is not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.ExpandingDelay">
      <summary>
            Overridden. Is not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.UseExpandingDelay">
      <summary>
            Overridden. Is not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.UsedHasChildItemsMask">
      <summary>
            Gets the actual used HasChildItemsMaskReverse. This is based on whether the HasChildItemsMaskReverse
            is set. If it is not set the default HasChildItemsMaskReverse is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.HasChildItemsMask">
      <summary>
            Gets or sets the base image that is used when a QExplorerBar has more items then visible.
            In the Mask the Color Red is replaced by the ExplorerBarHasMoreChildItemsColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.ExpandOnItemClick">
      <summary>
            Gets or sets whether the item expands if the use clicks on it, or only if the user clicks on the HasChildItemsImage
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.ItemWrapText">
      <summary>
            Gets or sets whether the text of items should be wrapped
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.BackgroundBoundsType">
      <summary>
            Gets or sets the bounds type of the background
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.ItemOrientation">
      <summary>
            Gets or sets the Orientation of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.Font">
      <summary>
            Gets the Font that is used
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.FontHot">
      <summary>
            Gets the Font that is used for hot items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.FontPressed">
      <summary>
            Gets the Font that is used for pressed items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.FontExpanded">
      <summary>
            Gets the Font that is used for expanded items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.FontStyle">
      <summary>
            Gets or sets the style of the font
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.FontStyleHot">
      <summary>
            Gets or sets the style of the font for hot items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.FontStylePressed">
      <summary>
            Gets or sets the style of the font for pressed items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemConfiguration.FontStyleExpanded">
      <summary>
            Gets or sets the style of the font for expanded items
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QBackgroundBoundsType">
      <summary>
            Defines the bounds of the background
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBackgroundBoundsType.Normal">
      <summary>
            Normal bounds
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBackgroundBoundsType.Icon">
      <summary>
            Bounds of the icon only
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockBar">
      <summary>
            The QDockBar can be docked on the left, right, bottom or top of a Form. It is used to slide instances
            of <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> in or out. When a QDockingWindow is docked on a QDockBar, it can be slided.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.#ctor">
      <summary>
            Default Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.ShouldSerializeButtonAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QDockBar.ButtonAppearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.ResetButtonAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QDockBar.ButtonAppearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.CreateAppearanceInstance">
      <summary>
            Overridden creates a new <see cref="T:Qios.DevSuite.Components.QAppearance" />.
            </summary>
      <returns>a new <see cref="T:Qios.DevSuite.Components.QAppearance" /></returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Overridden. Handles the Timed events. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.OnVisibleChanged(System.EventArgs)">
      <summary>
            Handles the VisibleChanged of the QDockBar
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. lays out the QDockBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the QDockBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the buttons of the QDockBar
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the OnMouseDown event of the QDockBar
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the mouseover.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.CurrentDockControls">
      <summary>
            Gets the QDockControlCollection that contains all the QDockControls of this QDockBar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.PersistGuid">
      <summary>
            Gets or sets the PersistGuid. With this Guid the control is identified in the persistence files.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.Dock">
      <summary>
            Overridden. Gets or sets the Dock property of the QDockBar. A QDockBar cannot be docked
            <b>Fill</b> or <b>None</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.ButtonAppearance">
      <summary>
            Gets or sets the QAppearance for the buttons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.ControlIndex">
      <summary>
            Gets the index of this control in the Parent.Controls collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.WindowCount">
      <summary>
            Gets the count of <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> objects attached to this QDockBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.SlideWindowOnMouseOver">
      <summary>
            Gets or sets whether the windows must slide when the mouse hovers over a button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.BackColorPropertyName">
      <summary>
            Overridden. Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> propertyName of first background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.BackColor2PropertyName">
      <summary>
            Overridden. Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> propertyName of the second background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockBar.BorderColorPropertyName">
      <summary>
            Overridden. Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> propertyName of the border color.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockControlCollection">
      <summary>
            A readonly collection for storing QDockControls
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControlCollection.GetCurrentDockingWindows">
      <summary>
            Creates and returns a new QDockControlCollection with all the QDockingWindows.
            </summary>
      <returns>QDockControlCollection containing all QDockingWindows.</returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControlCollection.Item(System.Int32)">
      <summary>
            Returns the QDockControl at the specified index.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDiffTextComparer">
      <summary>
            Class for finding differences between two versions of a string
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffTextComparer.#ctor">
      <summary>
            Default Constructor. Creates a new QDiffTextComparer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffTextComparer.#ctor(System.String,System.String,Qios.DevSuite.Components.QDiffTextPart)">
      <summary>
            Constructor. Creates a new QDiffTextComparer.
            </summary>
      <param name="textA">Original version of the string</param>
      <param name="textB">New version of the string</param>
      <param name="inputTextPart">Parts of the file to compare</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffTextComparer.#ctor(System.String,System.String,Qios.DevSuite.Components.QDiffTextPart,System.Boolean)">
      <summary>
            Default constructor
            </summary>
      <param name="textA">Original version of the string</param>
      <param name="textB">New version of the string</param>
      <param name="inputTextPart">Parts of the file to compare</param>
      <param name="includeWhiteCharacters">Determines if the textparts should be filtered for special characters</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffTextComparer.Finalize">
      <summary>
            Destructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffTextComparer.Compare">
      <summary>
            Compares the two versions of a string 
            </summary>
      <returns>QDiffCompareResult containing all changes, textparts and indexes</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffTextComparer.MarkDiffCompareResult(Qios.DevSuite.Components.QDiffCompareResult,System.Windows.Forms.RichTextBox,System.Windows.Forms.RichTextBox)">
      <summary>
            Marks all changes of a QDiffCompareResult on two instances of RichTextBox
            </summary>
      <param name="result">QDiffCompareResult instances containing all information of a comparison</param>
      <param name="inputA">RichTextBox containing the original text</param>
      <param name="inputB">RichTextBox containing the new text</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffTextComparer.Dispose">
      <summary>
            Disposes class.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffTextComparer.Dispose(System.Boolean)">
      <summary>
            Disposes the class
            </summary>
      <param name="disposing">Disposing</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffTextComparer.InputA">
      <summary>
            Gets or sets the first string to compare. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffTextComparer.InputB">
      <summary>
            Gets or sets the second string to compare. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffTextComparer.InputTextPart">
      <summary>
            Gets or sets how the compare must take place. This can be word by word, line by line or character
            by character.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffTextComparer.IncludeWhiteCharacters">
      <summary>
            Gets or sets whether changes in white characters must be included int the CompareResult when InputA
            and InputB are compared.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDiffTextPart">
      <summary>
            Enumeration indicating a type of text part (line, character, word)
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDiffTextPart.Line">
      <summary>
            Line
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDiffTextPart.Word">
      <summary>
            Word
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDiffTextPart.Character">
      <summary>
            Character
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDiffCompareResult">
      <summary>
            Class containing all result information of a text comparison
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffCompareResult.GetIndexA">
      <summary>
            Gets all character indexes of the textparts of the original text;
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDiffCompareResult.GetIndexB">
      <summary>
            Gets all character indexes of the textparts of the new text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffCompareResult.Changes">
      <summary>
            Gets the changes of the comparison
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffCompareResult.TextPartsA">
      <summary>
            Gets all textparts of the original text the comparison took place on
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDiffCompareResult.TextPartsB">
      <summary>
            Gets all textparts of the new text the comparison took place on
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemLayout">
      <summary>
            Determines the layout of the QComposite item
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemLayout.Auto">
      <summary>
            QCompositeItems will be layout out in an order that depends on the parent.
            This will use the Linear layout by default.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemLayout.Linear">
      <summary>
            QCompositeItems will be layed out in a linear order
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemLayout.Flow">
      <summary>
            QCompositeItems will be layed out in a flow order
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemLayout.Table">
      <summary>
            QCompositeItems will be layed out in a table order
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositePaintStageEventHandler">
      <summary>
            Defines the delegate for painting QCompositeItems.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositePaintStageEventArgs">
      <summary>
            Defines the event args for painting QCompositeItems.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeEventArgs">
      <summary>
            Defines the event arguments for various QComposite events
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeEventArgs.#ctor(Qios.DevSuite.Components.QComposite,Qios.DevSuite.Components.QCompositeItemBase,Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeEventArgs.Item">
      <summary>
            Gets the QCompositeItemBase that is the source of the event
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeEventArgs.OriginalItem">
      <summary>
            Gets a possible Original item. This is set if the item was raised on a Clone of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeEventArgs.ActivationType">
      <summary>
            Gets the activation type of the QCompositeItemBase
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeEventArgs.Composite">
      <summary>
            Gets the QComposite that raised the event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositePaintStageEventArgs.#ctor(Qios.DevSuite.Components.QPartPaintContext,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QComposite,Qios.DevSuite.Components.QCompositeItemBase)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositePaintStageEventArgs.Context">
      <summary>
            Gets the QPartPaintContext
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositePaintStageEventArgs.Stage">
      <summary>
            Gets the stage of the painting process for the item
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeKeyboardCancelEventHandler">
      <summary>
            Defines the delegate for various keyboard events that can be cancelled
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeKeyboardCancelEventArgs">
      <summary>
            Defines the event arguments for various keyboard events that can be cancelled
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeCancelEventArgs">
      <summary>
            Defines the event arguments for various QComposite events that can be cancelled
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeCancelEventArgs.#ctor(Qios.DevSuite.Components.QComposite,Qios.DevSuite.Components.QCompositeItemBase,Qios.DevSuite.Components.QCompositeActivationType,System.Boolean)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeCancelEventArgs.Cancel">
      <summary>
            Gets or sets whether the event should be cancelled
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeKeyboardCancelEventArgs.#ctor(Qios.DevSuite.Components.QComposite,System.Windows.Forms.Keys,System.Boolean)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeKeyboardCancelEventArgs.Keys">
      <summary>
            Gets or sets the keys that will be processed
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeEventHandler">
      <summary>
            Defines the delegate for various QComposite events
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs">
      <summary>
            Defines the event arguments for QComposite expanding events that can be cancelled
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeExpandedEventArgs">
      <summary>
            Defines the event arguments for various QComposite Expanded events 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeExpandedEventArgs.#ctor(Qios.DevSuite.Components.QComposite,Qios.DevSuite.Components.QCompositeItemBase,Qios.DevSuite.Components.QCompositeActivationType,System.Drawing.Rectangle,Qios.DevSuite.Components.QCommandDirections,System.Boolean)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeExpandedEventArgs.AllowAnimation">
      <summary>
            Allows animation of the window as is configured in the QFloatingWindowConfiguration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeExpandedEventArgs.Bounds">
      <summary>
            Gets or sets the bounds the ChildContainer will use.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeExpandedEventArgs.AnimateDirection">
      <summary>
            Gets or sets the direction of the animation
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs.#ctor(Qios.DevSuite.Components.QComposite,Qios.DevSuite.Components.QCompositeItemBase,Qios.DevSuite.Components.QCompositeActivationType,System.Drawing.Rectangle,Qios.DevSuite.Components.QCommandDirections,System.Boolean,System.Boolean)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs.Cancel">
      <summary>
            Gets or sets whether the event should be cancelled
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeExpandedEventHandler">
      <summary>
            Defines the delegate for various QComposite expanded / collapsed events 
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeExpandingCancelEventHandler">
      <summary>
            Defines the delegate for various QComposite expanding / collapsing events that  can be canceled.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeCancelEventHandler">
      <summary>
            Defines the delegate for various QComposite events that can be cancelled
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeExpandBehavior">
      <summary>
            Defines the behaviour of a QComposite. This behavior can be overwritten by any QCompositeItem 
            by setting the 'not' value.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.None">
      <summary>
            No expand behaviour
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.AutoExpand">
      <summary>
            Automatically expand QCompositeItems with child items when mouse pointer hovers above the item, 
            and no other QCompositeItem in the QComposite is currently expanded
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.NotAutoExpand">
      <summary>
            Not the setting
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.AutoChangeExpand">
      <summary>
            Automatically expand QCompositeItems with child items when mouse pointer hovers above the item, 
            and another QCompositeItem in the QComposite is currently expanded
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.NotAutoChangeExpand">
      <summary>
            Not the setting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.PaintExpandedChildWhenHot">
      <summary>
            Paint expanded items when the mouse hovers above the QComposite. For instance: menu's usually do
            not paint the expanded item when another is hot.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.NotPaintExpandedChildWhenHot">
      <summary>
            Not the setting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.ExpandOnNavigationKeys">
      <summary>
            Expands the item when the navigation arrow key is pressed that matches the ExpandDirection.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.NotExpandOnNavigationKeys">
      <summary>
            Not the setting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.CloseOnNavigationKeys">
      <summary>
            Closes the item when the navigation arrow key is pressed that matches the opposite ExpandDirection.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.NotCloseOnNavigationKeys">
      <summary>
            Not the setting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.PositionOutsideComposite">
      <summary>
            Determines that the new window should be positioned outside the area of the QComposite
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.NotPositionOutsideComposite">
      <summary>
            Not the setting.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.CloseExpandedItemOnClick">
      <summary>
            Indicates that the expanded item should be closed when the expanded item is clicked again.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandBehavior.NotCloseExpandedItemOnClick">
      <summary>
            Not the setting.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeActivationTypeHelper">
      <summary>
            Defines a helper class to convert QCompsiteActivationTypes from and to QFloatingWindowCloseTypes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeActivationTypeHelper.FromFloatingWindowCloseType(Qios.DevSuite.Components.QFloatingWindowCloseType)">
      <summary>
            Converts a QFloatinWindowCloseType to a QCompositeActivationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeActivationTypeHelper.ToFloatingWindowCloseType(Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Converts a QCompositeActivationType to a QFloatingWindowCloseType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeActivationType">
      <summary>
            Defines the type of activation of a QCompositeItem
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeActivationType.None">
      <summary>
            No activation
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeActivationType.Shortcut">
      <summary>
            The QCompositeItemBase is activated via the Shortcut.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeActivationType.Hotkey">
      <summary>
            The QCompositeItemBase is activated via the Hotkey.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeActivationType.Keyboard">
      <summary>
            The QCompositeItemBase is activated via a Keyboard event.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeActivationType.Mouse">
      <summary>
            The QCompositeItemBase is activated via a Mouse event.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeActivationType.MouseTimed">
      <summary>
            The QCompositeItemBase is activated via a Mouse event after a timer.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeExpandDirection">
      <summary>
            Defines the direction a QCompositeItem will expand to when it contains child QCompositeItems
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandDirection.Inherited">
      <summary>
            Whatever is set on the parent or the default value.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandDirection.Left">
      <summary>
            The QCompositeItem will expand to the left
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandDirection.Right">
      <summary>
            The QCompositeItem will expand to the right
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandDirection.Up">
      <summary>
            The QCompositeItem will expand above the item
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeExpandDirection.Down">
      <summary>
            The QCompositeItem will expand below the item
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositePressedBehaviour">
      <summary>
            Defines the behaviour for pressing items
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositePressedBehaviour.RememberPressedItem">
      <summary>
            The item that is pressed will be remembered. If the mouse moves to an other item it will become hot, but releasing
            the mouse on that item does not activate the item.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositePressedBehaviour.MovePressedItem">
      <summary>
            The pressed item changes when the user moves the mouse to another pressable item while keeping the button pressed
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandUserRightBehavior">
      <summary>
            Indicates what should happen when a user has no right to execute a <see cref="T:Qios.DevSuite.Components.QCommand" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandUserRightBehavior.HideWhenNoRight">
      <summary>
            The QCommand should be hidden when the user has no right to execute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandUserRightBehavior.DisableWhenNoRight">
      <summary>
            The QCommand should be disabled when the user has no right to execute.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandPaintOptions">
      <summary>
            Contains additional paint flags for the Draw method of a <see cref="T:Qios.DevSuite.Components.QCommand" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandPaintOptions.None">
      <summary>
            No flags specified.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandPaintOptions.Hot">
      <summary>
            QCommand should be drawn hot.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandPaintOptions.Pressed">
      <summary>
            QCommand should be drawn pressed.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandPaintOptions.Expanded">
      <summary>
            QCommand should be drawn expanded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandPaintOptions.Vertical">
      <summary>
            QCommand should be drawn vertical.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandException">
      <summary>
            QCommandException is an exception class for the <see cref="T:Qios.DevSuite.Components.QCommand" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandException.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandException.#ctor(System.String)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandException.#ctor(System.String,System.Exception)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandDirections">
      <summary>
            Contains the the direction in which a <see cref="T:Qios.DevSuite.Components.QCommandContainer" /> should open.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandDirections.None">
      <summary>
            No direction specified.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandDirections.Up">
      <summary>
            The Command should open up.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandDirections.Down">
      <summary>
            The Command should open down.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandDirections.Right">
      <summary>
            The Command should open in the right direction.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandDirections.Left">
      <summary>
            The Command should open in the left direction.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandOrientation">
      <summary>
            This enumeration is used to indicate the orientation of a <see cref="T:Qios.DevSuite.Components.QCommand" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandOrientation.Horizontal">
      <summary>
            The Container is oriented horizontally.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandOrientation.Vertical">
      <summary>
            The Container is oriented vertically.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandPropertyKey">
      <summary>
            Defines keys used by QIOS to identify AdditionalProperties of a <see cref="T:Qios.DevSuite.Components.QCommand" />.
            You can use your own keys. Be sure that the index starts on 1024.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandPropertyKey.None">
      <summary>
            No commandPropertyKey.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandPropertyKey.ReferringObject">
      <summary>
            When a command refers to an object. This object can be stored as Additional Property.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandPropertyKey.OriginalCommand">
      <summary>
            When a command is a copy of an other command. The original command can be stored here.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandPropertyKey.CopyType">
      <summary>
            When a command is a copy, then CopyType indicates why the copy is made. it references a
            <see cref="T:Qios.DevSuite.Components.QCommandCopyType" /> value.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandCopyType">
      <summary>
            Defines what kind of copy a QCommand is from its original. This is used with the <see cref="M:Qios.DevSuite.Components.QCommand.SetAdditionalProperty(System.Int32,System.Object)" />
            and the <see cref="T:Qios.DevSuite.Components.QCommandPropertyKey" /> objects.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandCopyType.None">
      <summary>
            No copy type.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandCopyType.CustomizeOriginal">
      <summary>
            The Copy is used to customize the Original command.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandCopyType.ExecuteOriginal">
      <summary>
            The Copy is used to execute the original command.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandUIRequest">
      <summary>
            Defines a UI request used by <see cref="M:Qios.DevSuite.Components.QCommand.HandleChildCommandChanged" /> and <see cref="M:Qios.DevSuite.Components.QCommandContainer.HandleCommandChanged(Qios.DevSuite.Components.QCommandUIRequest)" />
            to identify what kind of action should be done by the change.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandUIRequest.None">
      <summary>
            No action.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandUIRequest.PerformLayout">
      <summary>
            Complete recalculation of the layout.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCommandUIRequest.Redraw">
      <summary>
            A redraw.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandUIRequestEventHandler">
      <summary>
            Defines the delegate used for QCommandUIRequest events.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandUIRequestEventArgs">
      <summary>
            Defines the EventArgs used for QCommandUIRequest events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandUIRequestEventArgs.#ctor(Qios.DevSuite.Components.QCommandUIRequest,System.Drawing.Rectangle)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandUIRequestEventArgs.Request">
      <summary>
            Contains the type of request.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandUIRequestEventArgs.UpdateBounds">
      <summary>
            Contains the bounds that should be invalidated.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QSpacing">
      <summary>
            The QSpacing class can be used to manage spacing values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QSpacing.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructor. Creates a new QSpacing instance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QSpacing.InflateRectangleWithSpacing(System.Drawing.Rectangle,System.Boolean,Qios.DevSuite.Components.QContentOrientation)">
      <summary>
            Returns a new rectangle that is inflated by this QSpacing.
            </summary>
      <param name="rectangle">The rectangle to inflate.</param>
      <param name="inflate">Indicates if the rectangle must be inflated or deflated.</param>
      <param name="orientation">Defines whether the calculation must be for the horizontal, verticalUp or verticalDown orientation.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QSpacing.InflateSizeWithSpacing(System.Drawing.Size,System.Boolean,Qios.DevSuite.Components.QContentOrientation)">
      <summary>
            Returns a new size that is inflated by this QSpacing.
            </summary>
      <param name="size">The size to inflate.</param>
      <param name="inflate">Indicates if the size must be inflated or deflated.</param>
      <param name="orientation">Defines whether the calculation must be for the horizontal, verticalUp or verticalDown orientation.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QSpacing.Equals(System.Object)">
      <summary>
            Overridden. Returns whether this QSpacing is equal to obj.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QSpacing.GetHashCode">
      <summary>
            Overridden. Returns a hashcode for this QSpacing.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QSpacing.Empty">
      <summary>
            Gets the empty QSpacing.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QSpacing.Before">
      <summary>
            Gets or sets the spacing before an element.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QSpacing.After">
      <summary>
            Gets or sets the spacing after an element.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QSpacing.All">
      <summary>
            Gets the complete spacing of the <see cref="P:Qios.DevSuite.Components.QSpacing.Before" /> and <see cref="P:Qios.DevSuite.Components.QSpacing.After" /> properties.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QRegion">
      <summary>
            This class encapsulates a Region and keeps track of whether it is disposed. You can implicit cast a QRegion to a Region.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRegion.#ctor(System.Drawing.Region)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRegion.Dispose">
      <summary>
            Disposes the region
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRegion.Dispose(System.Boolean)">
      <summary>
            Disposes the region.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QRegion.Finalize">
      <summary>
            Finalizer
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRegion.IsDisposed">
      <summary>
            Gets whether this is disposed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QRegion.Region">
      <summary>
            Gets the region
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QProductInfo">
      <summary>
            Is used to identify information about a product.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QProductInfo.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductNamePublic">
      <summary>
            Gets or sets the property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductNameInternal">
      <summary>
            Gets or sets the property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductGuid">
      <summary>
            Gets or sets the property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductVersion">
      <summary>
            Gets or sets the property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductWebsiteUrl">
      <summary>
            Gets or sets the property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductWebsiteTitle">
      <summary>
            Gets or sets the property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductVersionInfoWebsiteUrl">
      <summary>
            Gets or sets the property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductVersionInfoWebsiteTitle">
      <summary>
            Gets or sets the property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductPublicBuyNowUrl">
      <summary>
            Gets or sets the public buy now url.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductPrivateBuyNowUrl">
      <summary>
            Gets or sets the public buy now url.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QProductInfo.ProductAssembly">
      <summary>
            Gets or sets the product assembly.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartMarkupTextLayoutEngine">
      <summary>
            Defines the layout engine used for markup texts
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartMarkupTextLayoutEngine.ApplyConstraintsToCustomContent(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Overridden. Applys constraints to custom content. This applies the wrapping.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartMarkupTextLayoutEngine.Default">
      <summary>
            Gets the default static engine.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartApplyConstraintProperties">
      <summary>
            Defines a class to  give additional properties to <see cref="M:Qios.DevSuite.Components.IQPartLayoutEngine.ApplyConstraints(System.Drawing.Size,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartApplyConstraintProperties.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartApplyConstraintProperties.#ctor(System.Boolean)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartApplyConstraintProperties.#ctor(System.Boolean,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.QPartOptions)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartApplyConstraintProperties.ShouldStretch(System.Boolean)">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartApplyConstraintProperties.ShouldStretch(Qios.DevSuite.Components.QPartDirection)">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartApplyConstraintProperties.ShouldShrink(System.Boolean)">
      <summary>
            Returns whether the part should shrink.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartApplyConstraintProperties.ShouldShrink(Qios.DevSuite.Components.QPartDirection)">
      <summary>
            Returns whether the part should shrink.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.DoOneLoopSimple">
      <summary>
            Indicates that only one loop, without saving sizes before, and without returning a size after the call should occur.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.CalledFromRoot">
      <summary>
            Gets whether this call is from the root or the first ApplyConstraints.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.Options">
      <summary>
            Gets the options
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.ShouldStretchHorizontal">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.ShouldStretchVertical">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.ShouldShrinkHorizontal">
      <summary>
            Returns whether the part should shrink.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.ShouldShrinkVertical">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.CollectionDirection">
      <summary>
            Gets the collection direction. This is only usefull when not called from the root.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.NewSize">
      <summary>
            Gets or sets the new size of the parts the ApplyConstraints or ApplyConstraintsToCollection is called for.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartApplyConstraintProperties.NewUnstretchedSize">
      <summary>
            Gets or sets the new unstretched size of the parts the ApplyConstraints or ApplyConstraintsToCollection is called for.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartIconPainter">
      <summary>
            QPartIconPainter defines the object used by <see cref="T:Qios.DevSuite.Components.IQPart" /> to draw an icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartIconPainter.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartIconPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartIconPainter.ColorToReplace">
      <summary>
            Gets or sets the ColorToReplace
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartIconPainter.ColorToReplaceWith">
      <summary>
            Gets or sets the ColorToReplaceWith;
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartIconPainter.DrawDisabled">
      <summary>
            Gets or sets whether the Icon must be drawn disabled.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QContentOrder">
      <summary>
            Defines the Content order for several Qios.DevSuite items.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentOrder.None">
      <summary>
            No content order.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentOrder.ImageText">
      <summary>
            The image is placed before the text.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentOrder.TextImage">
      <summary>
            The text is placed before the image.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QToolItemDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QToolItem" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QStatusBarPanelCollectionEditor">
      <summary>
            Defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.QStatusBarPanelCollection" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStatusBarPanelCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor.
            </summary>
      <param name="type">The Type to create this editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStatusBarPanelCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStatusBarPanelCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QShapedWindowDesigner">
      <summary>
            Designer class for the QShapedWindows
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapedWindowDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the designer
            </summary>
      <param name="component">Component to design</param>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapedWindowDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QRibbonPageItemCollectionEditor">
      <summary>
            Defines a CollectionEditor for the items on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonPageItemCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor
            </summary>
      <param name="type">The Type to create this Editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonPageItemCollectionEditor.CreateChildCollectionEditor">
      <summary>
            Overridden. Creates a new QRibbonItemCollectionEditor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonPageItemCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonPageItemCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QColorCodeSerializer">
      <summary>
            Defines the CodeDomSerializer for the <see cref="T:Qios.DevSuite.Components.QColor" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorCodeSerializer.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorCodeSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Serializes the <see cref="T:Qios.DevSuite.Components.QColor" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorCodeSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Deserializes the <see cref="T:Qios.DevSuite.Components.QColor" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration">
      <summary>
            this class implements the configuration for the QQTabButtons on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.QTabButton" />. This can be used via <see cref="T:Qios.DevSuite.Components.QTabControl" /> or <see cref="T:Qios.DevSuite.Components.QTabPage" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropAlignment">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropSpacing">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropIconSpacing">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropIconSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropTextSpacing">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropOrientation">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropContentOrder">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropTextAlignment">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropIconAlignment">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropGrayscaleDisabledIcon">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropMinimumSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropMaximumSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropBackgroundImageAlign">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropBackgroundImageClip">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropAppearanceHot">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.PropAppearanceActive">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonConfiguration.CreateAppearance">
      <summary>
            Creates the TabButtonAppearance
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonConfiguration.CreateAppearanceHot">
      <summary>
            Creates the Hot TabButtonAppearance
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonConfiguration.CreateAppearanceActive">
      <summary>
            Creates the Active TabButtonAppearance
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonConfiguration.CalculateBiggestShape(System.Boolean)">
      <summary>
            Returns the size of the several appearance shapes that has the biggest <see cref="P:Qios.DevSuite.Components.QShape.MinimumSize" />
            If horizontal is not set the width and height are inverted.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTabButtonConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QTabButtonConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.Appearance">
      <summary>
            Gets or sets the appearance of a regular button. 
            For the configuration on a QTabButton or QTabPage, this property inherits its default values from the Appeareance property from a parenting QTabStripConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.AppearanceHot">
      <summary>
            Gets the appearance of a hot button. For the configuration on the TabStrip,
            this AppearanceHot inherits its default values from the Appearance property. For the configuration
            on a QTabButton or QTabPage, this property inherits its default values from the AppeareanceHot property
            from a parenting QTabStripConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.AppearanceActive">
      <summary>
            Gets the appearance of an active button. For the configuration on the TabStrip,
            this AppearanceActive inherits its default values from the Appearance property. For the configuration
            on a QTabButton or QTabPage, this property inherits its default values from the AppearanceActive property
            from a parenting QTabStripConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.Padding">
      <summary>
            Contains the padding between the edge of a button and its contents.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.Spacing">
      <summary>
            Contains the spacing that must be used before and after the button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.IconSpacing">
      <summary>
            Contains the spacing before and after the icon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.IconSize">
      <summary>
            Contains the size of the icons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.TextSpacing">
      <summary>
            Contains the spacing before and after the text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.Orientation">
      <summary>
            Gets or sets the Orientation of a QTabButton. When changing the orientation to VerticalDown or VerticalUp,
            then the spacings, paddings, sizes, contentOrder and contentAlignments change with it.
            For example, setting the orientation to VerticalDown then the top padding is displayed on the right (the top of the text).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.MinimumSize">
      <summary>
            Gets or sets the minimumSize of a button. A value of -1 means it depends on the MinimumSize that is needed to render the <see cref="T:Qios.DevSuite.Components.QShape" />
            associated with the button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.MaximumSize">
      <summary>
            Gets or sets the maximumSize of a button. A value of -1 means no maximum.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.BackgroundImageAlign">
      <summary>
            Gets or sets the alignment of the background image. The alignment rotates on the <see cref="P:Qios.DevSuite.Components.QTabButtonConfiguration.Orientation" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.BackgroundImageClip">
      <summary>
            Gets or sets the whether the backgroundImage must be clipped on the Shape.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.Alignment">
      <summary>
            Gets or sets the Alignment of a QTabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.IconAlignment">
      <summary>
            Gets or sets the Alignment of the Icon.
            The actual order of the Text and Icon depend on <see cref="P:Qios.DevSuite.Components.QTabButtonConfiguration.ContentOrder" />. So if you want to inverse the order you have to set that property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.TextAlignment">
      <summary>
            Gets or sets the Alignment of the Text.
            The actual order of the Text and Icon depend on <see cref="P:Qios.DevSuite.Components.QTabButtonConfiguration.ContentOrder" />. So if you want to inverse the order you have to set that property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.GrayscaleDisabledIcon">
      <summary>
            Gets or sets whether the disabled icon must be grayscaled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonConfiguration.ContentOrder">
      <summary>
            Gets or sets the order of the icon and text of a QTabButton.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.PropHotkeyWindowRelativeOffset">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.PropHotkeyWindowAlignment">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.CreateAppearance">
      <summary>
            Overridden. Creates the TabButtonAppearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.CreateAppearanceHot">
      <summary>
            Overridden. Creates the hot TabButtonAppearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.CreateAppearanceActive">
      <summary>
            Overridden. Creates the active TabButtonAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.HotkeyWindowRelativeOffset">
      <summary>
            Gets or set the relative offset of the HotkeyWindow. This offset is added after the alignment.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.HotkeyWindowAlignment">
      <summary>
            Gets or set the alignment of the hotkeyWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.Appearance">
      <summary>
            New. Gets or sets the appearance of a regular button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.AppearanceHot">
      <summary>
            New. Gets the appearance of a hot button. For the configuration on the TabStrip,
            this AppearanceHot inherits its default values from the Appearance property. For the configuration
            on a QTabButton or QTabPage, this property inherits its default values from the AppeareanceHot property
            from a parenting QTabStripConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonConfiguration.AppearanceActive">
      <summary>
            New. Gets the appearance of an active button. For the configuration on the TabStrip,
            this AppearanceActive inherits its default values from the Appearance property. For the configuration
            on a QTabButton or QTabPage, this property inherits its default values from the AppearanceActive property
            from a parenting QTabStripConfiguration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonAppearance">
      <summary>
            Defines the Appearance for the QTabButtons
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonAppearance">
      <summary>
            Defines the Appearance for the <see cref="T:Qios.DevSuite.Components.QTabButton" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonAppearance.PropUseControlBackgroundForTabButton">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonAppearance.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonAppearance.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonAppearance.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this appearance.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonAppearance.UseControlBackgroundForTabButton">
      <summary>
            Gets or sets whether the TabButton must extend the backgroundColor of the TabPage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonAppearance.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonAppearanceActive">
      <summary>
            Defines the Appearance for the Active QRibbonTabButton
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabButtonAppearanceActive.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonSeparator">
      <summary>
            Defines a separator item on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the ItemColorSet for this QRibbonItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.ClearCachedParents">
      <summary>
            Clears the cached parents
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.SetDisplayParent(Qios.DevSuite.Components.IQManagedLayoutParent)">
      <summary>
            Overridden. Sets the DisplayParent
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.SetConfigurationBaseProperties(System.Boolean)">
      <summary>
            Sets the configuraton base properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.RibbonItemBar">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" /> if this item is on a RibbonItemBar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.LaunchBar">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" /> if this item is on a RibbonLaunchBar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.RibbonPanel">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" /> if it is there.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.RibbonPageComposite">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite" /> if it is there.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSeparator.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite">
      <summary>
            Defines the QComposite used on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite.CreateChildCompositeColorScheme">
      <summary>
            Overridden.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite.CreateChildCompositeConfiguration">
      <summary>
            Overridden.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite.CreateChildWindowConfiguration">
      <summary>
            Overridden.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite.CreateColorScheme">
      <summary>
            Overridden. Returns null. ColorScheme of the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" /> is used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite.UnfocusCurrentChildControl">
      <summary>
            Overridden. Unfocusses the current child control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Overridden. Handles the layout stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite.RibbonPage">
      <summary>
            Gets the ribbonPage this composite belongs to
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite.Ribbon">
      <summary>
            Gets the ribbon this composite belongs to
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite.Configuration">
      <summary>
            New. Gets the configuration as a QRibbonPageConfiguration
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonInputBox">
      <summary>
            Defines the <see cref="T:Qios.DevSuite.Components.QInputBox" /> used with <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonInputBox.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonInputBox.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonInputBox.BackColorPropertyName">
      <summary>
            Overridden. Gets the BackColor property name.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonInputBox.OuterBackColor1PropertyName">
      <summary>
            Overridden. Gets the OuterBackColor1 property name.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonInputBox.OuterBackColor2PropertyName">
      <summary>
            Overridden. Gets the OuterBackColor2 property name.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration">
      <summary>
            Defines the configuration class for a QRibbon.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration.PropHotkeyWindowConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration.PropHotkeyWindowShowBehavior">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration.CreateContentApperearance">
      <summary>
            Overridden. Creates the QRibbonContentAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration.HotkeyWindowShowBehavior">
      <summary>
            Gets or sets the show behavior of the QHotkeyWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonConfiguration.HotkeyWindowConfiguration">
      <summary>
            Gets the configuration for the HotkeyWindow. This window is displayed when ALT is pressed
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonContentAppearance">
      <summary>
            Defines the appearance for the QRibbonContent
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonContentAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButton">
      <summary>
            Defines a button on the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButton.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the colorSet for the QRibbonCaptionButton
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButton.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Overridden. Handles a layout stage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButton.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Handles a paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButton.Configuration">
      <summary>
            New. gets or sets the configuration as a QRibbonCaptionConfiguration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTextBox">
      <summary>
            An advanced textual input control with the option to create a single- or multiline textbox
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTextBox.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTextBox.CreateConfigurationInstance">
      <summary>
            Creates the configuration instance for this QTextBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.Accelerations">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.NumericValue">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.Increment">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.MaximumValue">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.MinimumValue">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.FormatString">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.CustomDropDownWindow">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.DataSource">
      <summary>
            Gets or sets the datasource that contains the items for auto completion
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.DisplayMember">
      <summary>
            Gets or sets the display member of the datasource that contains the items for auto completion
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.ValueMember">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.Items">
      <summary>
            Contains the items that are used for auto completion.
            When the QTextBox is databound the Items collection is locked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.Sorted">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.SelectedIndex">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.SelectedValue">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.SelectedItem">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.ChildWindowConfiguration">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.ChildCompositeColorScheme">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.ChildCompositeConfiguration">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBox.ItemConfiguration">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTextBoxConfiguration">
      <summary>
            Defines configuration properties for a QTextBox.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTextBoxConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTextBoxConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTextBoxConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTextBoxConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.ButtonAppearance">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.ButtonAppearanceHot">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.ButtonAppearancePressed">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.ButtonAlign">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.InputBoxButtonDrawFocused">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.InputBoxButtonDrawHot">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.InputBoxButtonDrawNormal">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.ButtonPadding">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.ButtonMargin">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.ButtonMask">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.ButtonMaskAlign">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTextBoxConfiguration.InputStyle">
      <summary>
            Overridden. A QTextBox does not use this property.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabStripPaintParams">
      <summary>
            Contains additional parameters for drawing a <see cref="T:Qios.DevSuite.Components.QTabStrip" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.Border">
      <summary>
            Gets or sets the border color. This is the color that is drawn over the tabButtons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.Background1">
      <summary>
            Gets or sets the first background color of the complete strip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.Background2">
      <summary>
            Gets or sets the second background color of the complete strip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonBackground1">
      <summary>
            Gets or sets the first background color of a custom button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonBackground1Hot">
      <summary>
            Gets or sets the first background color of a hot custom button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonBackground1Active">
      <summary>
            Gets or sets the first background color of an active custom button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonBackground2">
      <summary>
            Gets or sets the second background color of a custom button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonBackground2Hot">
      <summary>
            Gets or sets the second background color of a hot custom button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonBackground2Active">
      <summary>
            Gets or sets the second background color of an active custom button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonBorder">
      <summary>
            Gets or sets the border color of a custom button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonBorderHot">
      <summary>
            Gets or sets the border color of a hot custom button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonBorderActive">
      <summary>
            Gets or sets the border color of an active custom button
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonReplace">
      <summary>
            Gets or sets the replace color of a NavigationButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonReplaceWith">
      <summary>
            Gets or sets the color to replace the ReplaceColorWith a NavigationButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonReplaceWithHot">
      <summary>
            Gets or sets the color to replace the ReplaceColorWith when it is a hot NavigationButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonReplaceWithActive">
      <summary>
            Gets or sets the color to replace the ReplaceColorWith when it is an active NavigationButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationButtonReplaceWithDisabled">
      <summary>
            Gets or sets the color to replace the ReplaceColorWith when it is an Disabled NavigationButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationAreaBackground1">
      <summary>
            Gets or sets the first backgroundColor of the NavigationArea
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationAreaBackground2">
      <summary>
            Gets or sets the second backgroundColor of the NavigationArea
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.NavigationAreaBorder">
      <summary>
            Gets or sets the border color of the NavigationArea
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.DropIndicatorBorder">
      <summary>
            Gets or sets the border color of the drop indicator
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabStripPaintParams.DropIndicatorBackground">
      <summary>
            Gets or sets the background color of the drop indicator
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButton">
      <summary>
            A QTabButton defines one button on a <see cref="T:Qios.DevSuite.Components.QTabStrip" />. It is used by <see cref="T:Qios.DevSuite.Components.QTabPage" /> to show its tabbutton.
            </summary>
      <remarks>
            It is not possible to create QTabButtons manually, this is done automatically while creating a <see cref="T:Qios.DevSuite.Components.QTabPage" />.
            <br />
            A QTabButton can be located top / left / bottom or right. The content can be drawn horizontal, verticalUp or verticalDown.
            To configure the appearance of a QTabButton, use <see cref="P:Qios.DevSuite.Components.QTabButton.Configuration" />. This can also be accessed via <see cref="T:Qios.DevSuite.Components.QTabPage" />
            or <see cref="T:Qios.DevSuite.Components.QTabStripConfiguration" />.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.CreateTabButtonConfiguration">
      <summary>
            Creates the Configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.ShouldSerializeBackgroundImage">
      <summary>
            Returns whether the BackgroundImage must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.ResetBackgroundImage">
      <summary>
            Resets the BackgroundImage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.ShouldSerializeIcon">
      <summary>
            Returns whether the Icon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.ResetIcon">
      <summary>
            Resets the Icon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.ShouldSerializeDisabledIcon">
      <summary>
            Returns whether the DisabledIcon must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.ResetDisabledIcon">
      <summary>
            Resets the DisabledIcon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.RetrieveIcon(System.Drawing.Size,System.Boolean)">
      <summary>
            Gets the correct Icon based on enabled and in the requested Size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.RetrievePaintParams">
      <summary>
            Retrieves the paint params that should be used to draw this QTabButton with.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.MatchesSelection(Qios.DevSuite.Components.QTabButtonSelectionTypes,Qios.DevSuite.Components.QTabButtonRow)">
      <summary>
            Returns whether this button matches the specified selection. row Identifies the row the button must
            be in when MustBeInRow is set as selection. You can specify null as row so that the button must not have a row. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.ContainsControlPoint(System.Drawing.Point)">
      <summary>
            Returns whether this button contains the specified controlPoint. the point must be in the control coordinates.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.PerformLayout">
      <summary>
            When a property of a source changes that needes the QTabButton to perform layout, then this method should be called.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.Dispose">
      <summary>
            Cleans up used resources
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButton.Finalize">
      <summary>
            Destructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.TabStrip">
      <summary>
            Gets the QTabStrip this QTabButton belongs to
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.TabButtonCollection">
      <summary>
            Gets the TabButtonCollection this QTabButton belongs to
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.AdditionalData">
      <summary>
            Gets or sets additional data. This can be used to store additional data for a QTabButton.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.TabButtonRow">
      <summary>
            Gets the TabButtonRow this QTabButton belongs to
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Enabled">
      <summary>
            Gets or sets whether this button is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.CanClose">
      <summary>
            Gets or sets whether this button can be closed. To see a Close button on the strip
            <see cref="P:Qios.DevSuite.Components.QTabStripConfiguration.CloseButtonVisible" /> must be set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Visible">
      <summary>
            Gets or sets whether this button is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Focused">
      <summary>
            Gets whether this QTabButton is focused.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Configuration">
      <summary>
            Gets or sets the configuration of the QTabButton.
            The configuration uses the values of a parenting <see cref="T:Qios.DevSuite.Components.QTabStrip" />.
            You can override these values by setting values for this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Control">
      <summary>
            Gets the Control that this QTabButton is used for. This is usually a <see cref="T:Qios.DevSuite.Components.QTabPage" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.ButtonOrder">
      <summary>
            Gets or sets the order of this button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Text">
      <summary>
            Gets or sets the Text of the TabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.ToolTipText">
      <summary>
            Gets or sets the ToolTipText on the TabButton. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.UsedToolTipText">
      <summary>
            Gets the actual used ToolTipText. This depends on the <see cref="P:Qios.DevSuite.Components.QTabButton.ToolTipText" /> property and the Text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.BackgroundImage">
      <summary>
            Gets or sets the BackgroundImage of the QTabButotn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.BackgroundImageResourceName">
      <summary>
            Gets or sets a possible resource name to load the BackgroundImage from. This must be in the format 'NameSpace.ImageName.extension, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Icon">
      <summary>
            Gets or sets the Icon of the QTabButotn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.IconResourceName">
      <summary>
            Gets or sets a possible resource name to load the Icon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.IconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.DisabledIcon">
      <summary>
            Gets or sets the Disabled Icon of the QTabButton. When this is not set the default Icon is used for painting.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.DisabledIconResourceName">
      <summary>
            Gets or sets a possible resource name to load the DisabledIcon from. This must be in the format 'NameSpace.IconName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.DisabledIconLoadedFromResource">
      <summary>
            Gets whether the Icon is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Bounds">
      <summary>
            Gets or sets the Bounds of the Button relative to the TabStrip.
            This should only be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.CalculateStripLayout(Qios.DevSuite.Components.QTabStrip,System.Drawing.Size,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.LastDrawnGraphicsPath">
      <summary>
            Gets or sets the LastDrawn GraphicsPath, this is used to determine whether the mouse
            is over this button. This should be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.DrawTabButtonBackground(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButtonConfiguration,Qios.DevSuite.Components.QTabStripConfiguration,Qios.DevSuite.Components.QTabButtonAppearance,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DockStyle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Location">
      <summary>
            Gets or sets the location of the button
            This should only be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.CalculateStripLayout(Qios.DevSuite.Components.QTabStrip,System.Drawing.Size,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Size">
      <summary>
            Gets or sets the size of the button
            This should only be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.CalculateStripLayout(Qios.DevSuite.Components.QTabStrip,System.Drawing.Size,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Left">
      <summary>
            Gets or sets the left of the button
            This should only be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.CalculateStripLayout(Qios.DevSuite.Components.QTabStrip,System.Drawing.Size,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Top">
      <summary>		
            Gets or sets the top of the button
            This should only be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.CalculateStripLayout(Qios.DevSuite.Components.QTabStrip,System.Drawing.Size,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Width">
      <summary>
            Gets or sets the width of the button
            This should only be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.CalculateStripLayout(Qios.DevSuite.Components.QTabStrip,System.Drawing.Size,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.Height">
      <summary>
            Gets or sets the height of the button
            This should only be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.CalculateStripLayout(Qios.DevSuite.Components.QTabStrip,System.Drawing.Size,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.CalculatedMinimumSize">
      <summary>
            Gets or sets the actual minimumSize of the button
            This should only be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.CalculateButtonSize(Qios.DevSuite.Components.QTabButton,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.CalculatedMaximumSize">
      <summary>
            Gets or sets the actual MaximumSize of the button
            This should only be set during <see cref="M:Qios.DevSuite.Components.QTabStripPainter.CalculateButtonSize(Qios.DevSuite.Components.QTabButton,System.Drawing.Graphics)" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.IsActivated">
      <summary>
            Gets whether this button is activated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.IsHot">
      <summary>
            Gets whether this button is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.IsAccessible">
      <summary>
            Gets whether this button is accessible. That means enabled and visisble.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.CurrentAppearance">
      <summary>
            Gets the current appeareance. This depends on the state of the QTabButton (hot / activated, etc).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.BoundsToControl">
      <summary>
            Gets the bounds of the TabButton relative to the Control that hosts the TabStrip. It uses
            the Range of the TabButtonRow when it has a TabButtonRow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButton.IsDisposed">
      <summary>
            Returns whether this TabButton is Disposed
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonSelectionTypes">
      <summary>
            Defines selectionTypes to retrieve TabButtons.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonSelectionTypes.None">
      <summary>
            No selectionTypes, this means all buttons.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonSelectionTypes.MustBeVisible">
      <summary>
            The button must be visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonSelectionTypes.MustBeEnabled">
      <summary>
            The button must be enabled.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonSelectionTypes.MustBeNearAligned">
      <summary>
            The button must be near aligned.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonSelectionTypes.MustBeFarAligned">
      <summary>
            The button must be far aligned.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonSelectionTypes.MustBeInRow">
      <summary>
            The button must be in the specified row
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonDockStyle">
      <summary>
            Defines the dock style of a QTabButton relative to the QTabPage.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonDockStyle.Top">
      <summary>
            TabButton appears at top of the QTabPage.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonDockStyle.Right">
      <summary>
            TabButton appears right of the QTabPage
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonDockStyle.Bottom">
      <summary>
            TabButton appears at the bottom of the QTabPage.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonDockStyle.Left">
      <summary>
            TabButton appears left of the QTabPage.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonAlignment">
      <summary>
            Defines the alignment of a QTabButton (left or right, top or bottom).
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonAlignment.Near">
      <summary>
            The QTabButton will be near aligned (left or top).
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonAlignment.Far">
      <summary>
            The QTabButton will be far aligned (right or bottom).
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonContentOrder">
      <summary>
            Defines how the Content of a QTabButton must be ordered
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonContentOrder.IconText">
      <summary>
            The Icon is displayed before the Text.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonContentOrder.TextIcon">
      <summary>
            The Text is displayed before the Icon
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTabButtonContentOrder.None">
      <summary>
            No order takes place, it depends on the ContentAlignment of the elements of the QTabButton
            how the elements are drawn.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPersistenceManager">
      <summary>
            Manages the persistableObject configuration of <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /> instances like QDockingWindows,
            QMenu's and QToolBars to and from files.
            </summary>
      <remarks>
            Because some Controls like QToolBars can be moved and docked by the user,
            you can persist that information to a file or database via the QPersistenceManager.
            This enables the the user to open the Application the same way as they have closed it.
            The QPersistenceManager works with two types of objects:
            The ones that implement <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /> and the ones that 
            implement <see cref="T:Qios.DevSuite.Components.IQPersistableHost" />.
            Instances of IQPersistableObject are the objects that contain information that needs to 
            be persisted like position, size, etc.
            IQPersistableHosts are Controls that are solid in the application.
            PersistableObjects can refer to those hosts to define where they are located in the application.
            Examples of IQPersistableHosts are <see cref="T:Qios.DevSuite.Components.QToolBarHost" /> and <see cref="T:Qios.DevSuite.Components.QDockBar" />.<br /><br />
            
            The QPersistenceManager contains two collections: <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> and <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableHosts" />.
            When you call <see cref="M:Qios.DevSuite.Components.QPersistenceManager.Save(System.String)" /> all the persistableObjects in the PersistableObjects collection will be saved.
            If a PersistableObject needs a host to refer to then it tries to find that host
            in the PersistableHosts collection.<br /><br />
            
            PersistableObjects and PersistableHosts are identified by their 
            <see cref="P:Qios.DevSuite.Components.IQPersistableObject.PersistGuid" /> and <see cref="P:Qios.DevSuite.Components.IQPersistableHost.PersistGuid" />. 
            When a persistableObject is saved the persistGuid of that persistableObject is written to the file.
            When the file is loaded again via the <see cref="M:Qios.DevSuite.Components.QPersistenceManager.Load(System.String)" /> method then the PersistGuid
            of the persistableObjects in the file are matched to ones in the PersistableObjects collection.
            When a match is found that specific persistableObject gets loaded.
            Because of this it is important that the PersistGuids of specific persistableObjects and hosts are always 
            the same in every run of the application.<br /><br />
            
            Because the QPersistenceManager saves the persistableObjects from its PersistableObjects collection
            and uses that same collection to match the objects during a load,
            the PersistableObjects and PersistableHosts collections must be initialized before Load or Save is called.
            You can do this 2 ways: Call <see cref="M:Qios.DevSuite.Components.QPersistenceManager.InitializeFromOwner" />, 
            this clears the collections and iterates through every Control on the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.OwnerControl" />. If the
            Control implements IQpersistableObject or IQPersistableHost, it gets added to one of the collections.
            You can also choose not to call InitializeFromOwner and maintain the collections yourself.<br /><br />
            
            Next to the possibility to match the Perstables by their PersistGuid, you can also let a persistableObject
            be created from scratch when it gets loaded. This is done by setting the <see cref="P:Qios.DevSuite.Components.IQPersistableObject.CreateNew" />.
            When this is set and the PersistableObject gets loaded, a new instance of the type of the PersistableObject is created.
            This can be usefull when you do not have one or a static number of instances of a specified persistableObject,
            but a variable number of instances.<br /><br />
            
            To influence the load and save of persistableObjects, the QPersistenceManager has a set of events.
            If for example a persistableObject from the file is not supposed to be created and it is not in the 
            <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection, the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectRequested" /> is called.
            During this event you can manually provide the QPersistenceManager with the persistableObject by setting
            <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObject" />. This can be usefull if you do not want
            to create all the persistableObjects prior calling <see cref="M:Qios.DevSuite.Components.QPersistenceManager.Load(System.String)" />. The same thing can be done for
            PersistableHosts via <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableHostRequested" />.<br /><br />
            
            When a PersistableObject has <see cref="P:Qios.DevSuite.Components.IQPersistableObject.CreateNew" /> set to true, and it gets created, the
            <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectCreated" /> event is called. During this event you can set additional properties
            or attach eventhandlers to the PersistableObject.<br /><br />
            
            After a PersistableObject is loaded, the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectLoaded" /> event is called. This event
            comes with a <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectElement" />. This contains the actual XML element
            the persistableObject is loaded from. You can use this event to load additional properties that you have
            saved with the persistableObject during the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectSaved" /> event.<br /><br />
            
            As mentioned, when a PersistableObject gets saved, the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectSaved" /> event is called.
            This event can be used to save additional properties with the specified PersistableObject.
            The <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectElement" /> is set to the created XML Element 
            during this event. You can add additional XML to this element during this event.<br /><br />
            
            If you want, you can create your own persistableObjects by implementing the <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /> interface. This way
            This way you can persist and load your own objects the same way as the various Qios.DevSuite Controls.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Constructor. Creates a QPersitanceManager and adds it to the specified container.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.#ctor">
      <summary>
            Constructor. Creates a QPersitanceManager.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.InitializeFromOwner">
      <summary>
            Initializes this QPersistenceManager from the specified <see cref="P:Qios.DevSuite.Components.QPersistenceManager.OwnerControl" /> and all its child Controls.
            Use this method to automatically add all the QDockBars, QToolBarHosts, QDockingWindows and QToolBars, etc.
            to this manager before persisting it to file or loading it from file.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.InitializeFromOwner(System.Boolean,System.Boolean)">
      <summary>
            Initializes this QPersistenceManager from the specified <see cref="P:Qios.DevSuite.Components.QPersistenceManager.OwnerControl" />.
            Use this method to automatically add all the QDockBars, QToolBarHosts, QDockingWindows and QToolBars, etc.
            to this manager before persisting it to file or loading it from file.
            </summary>
      <param name="childControls">Indicates if the child Controls of the owner must also be searched for objects.</param>
      <param name="ownedForms">Indicates if the OwnedForms collection (when the owner is a Form) must be searched</param>
      <remarks>
            It is not necessary to call this method. You can also manage the collections yourself.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.BeginInitializeHosts">
      <summary>
            Calls the BeginInit method from every <see cref="T:Qios.DevSuite.Components.IQPersistableHost" /> in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableHosts" />
            collection that implements <see cref="T:System.ComponentModel.ISupportInitialize" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.EndInitializeHosts">
      <summary>
            Calls the EndInit method from every <see cref="T:Qios.DevSuite.Components.IQPersistableHost" /> in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableHosts" />
            collection that implements <see cref="T:System.ComponentModel.ISupportInitialize" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.BeginInitializePersistableObjects">
      <summary>
            Calls the BeginInit method from every <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /> in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" />
            collection that implements <see cref="T:System.ComponentModel.ISupportInitialize" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.EndInitializePersistableObjects">
      <summary>
            Calls the EndInit method from every <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /> in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" />
            collection that implements <see cref="T:System.ComponentModel.ISupportInitialize" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.ResetIsPersisted">
      <summary>
            Resets the IsPersisted property from all the persistableObjects
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.AddObjectsFromControl(System.Windows.Forms.Control,System.Boolean)">
      <summary>
            Adds all the PersistableObjects and PersistableHosts from the specified control.
            </summary>
      <param name="control">The control to search  for PersistableObjects and PersistableHosts</param>
      <param name="childControls">Indicates if the child Controls of the specified control must be searched for objects</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.Save(System.String)">
      <summary>
            Saves the persistableObjects from the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection to the specified file.
            </summary>
      <param name="fileName">The filename of the file to save it to.</param>
      <returns>Whether the Persistence is fully saved if ThrowException is false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.Save(System.Xml.XPath.IXPathNavigable)">
      <summary>
            Saves the persistableObjects from the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection to the specified parentElement. This can be an XmlElement or an XmlDocument.
            </summary>
      <param name="parentElement">The XmlElement to save its contents to</param>
      <returns>Whether the Persistence is fully loaded if ThrowException is false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.UnloadAllPersistableObjects">
      <summary>
            Unloads all the persistableObjects. This can be usefull when reloading 
            the Persistence state while the persistableObjects are already loaded.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.UnloadDefaultPersistableObjects">
      <summary>
            Unloads the default persistable objects. This are the objects that should persist and requires
            an unload.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.UnloadPersistableObjects(Qios.DevSuite.Components.QPersistenceUnloadType)">
      <summary>
            Obsolete since 1.0.5.30, use the overload with QPersistenceUnloadOptions
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.UnloadPersistableObjects(Qios.DevSuite.Components.QPersistenceUnloadOptions)">
      <summary>
            Unloads the persitables that match the specified options.
            This can be usefull when reloading the Persistence state while the persistableObjects are already loaded.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.Load(System.String)">
      <summary>
            Loads the persistableObjects from the specified file.
            </summary>
      <param name="fileName">The filename of the file to load it from.</param>
      <returns>Whether the Persistence is fully loaded if ThrowException is false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>
            Loads the persistableObjects from the specified navigable. This can be an XmlDocument or XmlElement.
            </summary>
      <param name="parentElement">The element to load it from.</param>
      <returns>Whether the Persistence is fully loaded if ThrowException is false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.CreatePersistableObjectElement(Qios.DevSuite.Components.IQPersistableObject,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Makes sure the persistableObject XML element exists under the specified parent Element and it is initialized.
            </summary>
      <param name="persistableObject">The persistableObject to create the element for.</param>
      <param name="parentElement">The XML Element where the persistableObject element will be created under</param>
      <returns>The created persistableObjectElement</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.InitializePersistableObjectElement(Qios.DevSuite.Components.IQPersistableObject,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Sets the attributes of the specified XmlElement to the specified persistableObject. This method is called
            when <see cref="M:Qios.DevSuite.Components.QPersistenceManager.CreatePersistableObjectElement(Qios.DevSuite.Components.IQPersistableObject,System.Xml.XPath.IXPathNavigable)" /> is called. So only use this method when you don't call CreatePersistableObjectElement.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.GetPersistableHost(System.Guid,Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Tries to find the persistableHost based on the persistableHostGuid.
            </summary>
      <param name="persistableHostGuid">Contains the Guid of the host requested.</param>
      <param name="requestingPersistableObject">Specified information of the persistableObject that is requesting the host. This information is used during the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableHostRequested" /> event. Can be null.</param>
      <returns>A persistableHost based on the guid when createNew is not set.</returns>
      <remarks>
            It tries to find the persistableHost in the
            <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableHosts" /> collection by its Guid. When it is not there it fires the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableHostRequested" />
            event.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.GetPersistableObject(System.Xml.XPath.IXPathNavigable)">
      <summary>
            Tries to create or find the persistableObject based on the persistableObjectElement.
            </summary>
      <param name="persistableObjectElement">
            An XML Element that specifies that contains whether it must be created, the guid, name and type of the persistableObject.
            The format of the XML Element must be the same as returned by <see cref="M:Qios.DevSuite.Components.QPersistenceManager.CreatePersistableObjectElement(Qios.DevSuite.Components.IQPersistableObject,System.Xml.XPath.IXPathNavigable)" />.
            </param>
      <returns>A new created persistableObject (if createNew is true) or a persistableObject based on the guid when createNew is not set.</returns>
      <remarks>
            When the persistableObject is specified by its Guid and must not be created, it tries to find the persistableObject in the
            <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection by its Guid. When it is not there it fires the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectRequested" />
            event. On a succesfull creation of a new persistableObject it raises the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectCreated" /> event.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.TriggerPersistableObjectLoaded(Qios.DevSuite.Components.IQPersistableObject,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Triggers the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectLoaded" /> event. This can be called when a persistableObject is loaded manually
            via an other persistableObject.
            </summary>
      <param name="persistableObject">The instance that is loaded.</param>
      <param name="persistableObjectElement">A possible persistableObjectElement that the persistableObject is loaded from.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.TriggerPersistableObjectUnloaded(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Trigger the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectUnloaded" /> event. This can be called when a persistableObject is unloaded manually.
            </summary>
      <param name="persistableObject">The instance that is loaded.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.OnPersistableObjectRequested(Qios.DevSuite.Components.QPersistenceEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectRequested" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.OnPersistableHostRequested(Qios.DevSuite.Components.QPersistenceEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableHostRequested" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.OnPersistableObjectCreated(Qios.DevSuite.Components.QPersistenceEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectCreated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.OnPersistableObjectLoaded(Qios.DevSuite.Components.QPersistenceEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectLoaded" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.OnPersistableObjectUnloaded(Qios.DevSuite.Components.QPersistenceEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectUnloaded" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.OnPersistableObjectSaved(Qios.DevSuite.Components.QPersistenceEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectSaved" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceManager.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectRequested">
      <summary>
            This event is raised when the Persistence is loaded and a persistableObject cannot be found in the
            <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection.
            </summary>
      <remarks>
            It is your responsibility to set the <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObject" />
            property during this event. Else the loading of the persistence fails for the specified persistableObject.
            </remarks>
    </member>
    <member name="E:Qios.DevSuite.Components.QPersistenceManager.PersistableHostRequested">
      <summary>
            This event is raised when the Persistence is loaded, and a persistableHost cannot be found in the
            <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableHosts" /> collection.
            </summary>
      <remarks>
            It is your responsibility to set the <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableHost" />
            property during this event. Else the loading of the persistence fails for the specified persistableObject.
            </remarks>
    </member>
    <member name="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectCreated">
      <summary>
            This event is raised when a new PersistableObject is created based on the PersistableObjectElement
            </summary>
      <remarks>
            This event can be used to adjust the created persistableObject. The <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectElement" /> can be used to read additional persistableObject properties that you have
            saved during the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectSaved" /> event.
            </remarks>
    </member>
    <member name="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectLoaded">
      <summary>
            This event is raised when a persistableObject is loaded based on the PersistableObjectElement
            </summary>
      <remarks>
            This event can be used to adjust the loaded persistableObject. The <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectElement" /> can be used to read additional persistableObject properties that you have
            saved during the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectSaved" /> event.
            </remarks>
    </member>
    <member name="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectUnloaded">
      <summary>
            This event is raised when a persistableObject is unloaded via the QPersistenceManager.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectSaved">
      <summary>
            This event is raised when a persistableObject is saved to Xml. 
            </summary>
      <remarks>
            This event can be used to alter the <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectElement" /> before writing it to a file.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceManager.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceManager.OwnerControl">
      <summary>
            Gets or sets the OwnerControl. This Control can be used by persistableObjects to add themselves
            to the owner and is used during the InitializeFromOwner.
            </summary>
      <remarks>
            If you can use have a Form, then use <see cref="P:Qios.DevSuite.Components.QPersistenceManager.OwnerForm" />,
            else use the OwnerControl.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceManager.OwnerForm">
      <summary>
            Gets or sets the OwnerControl as a Form. This Form can be used by persistableObjects to add themselves
            to the owner and is used during the InitializeFromOwner.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceManager.PersistGuid">
      <summary>
            Gets or sets the guid that identifies this object in the persistence file.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects">
      <summary>
            Gets the objects that gets persisted by this manager.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceManager.PersistableHosts">
      <summary>
            Gets the hosts that can host persistableObjects.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceManager.ThrowException">
      <summary>
            Gets or sets if an exception must be thrown when an error occurs.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPersistenceException">
      <summary>
            The Exception class for persistence exceptions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceException.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceException.#ctor(System.String)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceException.#ctor(System.String,System.Exception)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPersistenceEventHandler">
      <summary>
            Defines the delegate that is used with the events of the <see cref="T:Qios.DevSuite.Components.QPersistenceManager" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPersistenceEventArgs">
      <summary>
            Is used wit the events of the <see cref="T:Qios.DevSuite.Components.QPersistenceManager" />.
            </summary>
      <remarks>
            Which properties are set in this EventArgs is based on the event that is raised. For example, when
            <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectRequested" /> is raised the <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectType" />, <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectName" />,
            and <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectGuid" /> are set. It is your responsibility to set the <see cref="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObject" /> in the handler of the event.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QPersistenceEventArgs.#ctor(System.String,System.Type,System.Guid,System.Guid)">
      <summary>
            Creates an instance of QPersistenceEventArgs with the specified parameters.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableHostGuid">
      <summary>
            Gets the Guid of the persistable host
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectName">
      <summary>
            Gets the name of the persistableObject.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectType">
      <summary>
            Gets the type of the persistableObject.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectGuid">
      <summary>
            Gets the Guid of the persistableObject.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObject">
      <summary>
            Gets or sets the persistableObject.
            </summary>
      <remarks>
            During the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectRequested" /> event,
            make sure you set this property to a valid PersistableObject, else the loading of the persistence
            fails for the specified persistableObject.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableHost">
      <summary>
            Gets or sets the PersistableHost.
            </summary>
      <remarks>
            During the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableHostRequested" /> event,
            make sure you set this property to a valid PersistableHost, else the loading of the persistence
            fails for the specified persistableObject.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QPersistenceEventArgs.PersistableObjectElement">
      <summary>
            Gets the PersistableObjectElement. This can be used during the <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectLoaded" /> and <see cref="E:Qios.DevSuite.Components.QPersistenceManager.PersistableObjectSaved" /> events
            to add or read additional properties.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPersistenceUnloadType">
      <summary>
            Obsolete since 1.0.5.30, use QPersistenceUnloadOptions and the methods that use that enum.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersistenceUnloadType.WhereNotPersistObject">
      <summary>
            Only the persistableObjects that have PersistObject set to false get unloaded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersistenceUnloadType.WherePersistObject">
      <summary>
            Only persistableObjects that have PersistObject set to true get unloaded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersistenceUnloadType.All">
      <summary>
            Indicates that all the persistableObjects get unloaded.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPersistenceUnloadOptions">
      <summary>
            Defines which persistables should be unloaded via <see cref="M:Qios.DevSuite.Components.QPersistenceManager.UnloadPersistableObjects(Qios.DevSuite.Components.QPersistenceUnloadType)" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersistenceUnloadOptions.WhereNotPersistObject">
      <summary>
            Only the persistableObjects that have PersistObject set to false get unloaded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersistenceUnloadOptions.WherePersistObject">
      <summary>
            Only persistableObjects that have PersistObject set to true get unloaded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersistenceUnloadOptions.WhereRequiresUnload">
      <summary>
            Only persistableObjects that have RequiresUnload set to true get unloaded.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersistenceUnloadOptions.Default">
      <summary>
            Only the persistableObject that have PersistObject set to true and that requires an unload
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPersistenceUnloadOptions.All">
      <summary>
            Indicates that all the persistableObjects get unloaded.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPanel">
      <summary>
            The QPanel class implements the <see cref="T:Qios.DevSuite.Components.QContainerControl" />.
            Use the <see cref="P:Qios.DevSuite.Components.QContainerControl.ColorScheme" /> and <see cref="P:Qios.DevSuite.Components.QContainerControl.Appearance" /> properties to customize the QPanel.
            It also contains the possibility to inherit the default Windows font by specifying the <see cref="P:Qios.DevSuite.Components.QContainerControl.FontScope" />. You can define
            the position of the background image by setting <see cref="P:Qios.DevSuite.Components.QContainerControl.BackgroundImageAlign" /> property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanel.#ctor">
      <summary>
            Default Constructor. Creates a new QPanel instance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanel.CreateAppearanceInstance">
      <summary>
            Overridden. Creates a new <see cref="T:Qios.DevSuite.Components.QAppearance" />.
            </summary>
      <returns>a new <see cref="T:Qios.DevSuite.Components.QAppearance" /></returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanel.ShouldSerializeConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanel.ResetConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanel.CreateConfigurationInstance">
      <summary>
            Creates the configuration instance for this QPanel
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanel.OnTextChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the TextChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Handles the Layout event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanel.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the NonClientArea of the QPanel.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanel.Dispose(System.Boolean)">
      <summary> 
            Overridden. Clean up any resources being used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.BorderWidth">
      <summary>
            Obsolete since 1.0.7.20, use <see cref="P:Qios.DevSuite.Components.QAppearance.BorderWidth" /> instead
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.Configuration">
      <summary>
            Gets or sets the QPanelConfiguration for this panel
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.ClientAreaMarginTop">
      <summary>
            Overridden. Gets the topmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.ClientAreaMarginLeft">
      <summary>
            Overridden. Gets the leftmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.ClientAreaMarginRight">
      <summary>
            Overridden. Gets the rightmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.ClientAreaMarginBottom">
      <summary>
            Overridden. Gets the bottommargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.ClientAreaPaddingTop">
      <summary>
            Overridden. Gets the top padding of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.ClientAreaPaddingBottom">
      <summary>
            Overridden. Gets the bottom padding of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.ClientAreaPaddingLeft">
      <summary>
            Overridden. Gets the left padding of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.ClientAreaPaddingRight">
      <summary>
            Overridden. Gets the right padding of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.BackColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of first background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.BackColor2PropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of second background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanel.BorderColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of border color.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPanelConfiguration">
      <summary>
            Defines configuration properties for a QTranslucentWindowComponent.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPanelConfiguration.PropShowText">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPanelConfiguration.PropTextDock">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPanelConfiguration.PropTextAlignment">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPanelConfiguration.PropTextSpacing">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPanelConfiguration.PropTextPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPanelConfiguration.PropVerticalTextOrientation">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPanelConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPanelConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanelConfiguration.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanelConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanelConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QPanelConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanelConfiguration.Dispose">
      <summary>
            Disposes the Configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPanelConfiguration.Dispose(System.Boolean)">
      <summary>
            Disposes this Configuration.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QPanelConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of this configuration changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanelConfiguration.VerticalTextOrientation">
      <summary>
            Gets or sets the orientation of the text when its docked left or right
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanelConfiguration.TextSpacing">
      <summary>
            Gets or sets the spacing in pixels from the closest side
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanelConfiguration.TextPadding">
      <summary>
            Gets or sets the padding of the text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanelConfiguration.ShowText">
      <summary>
            Gets or sets if the text must be visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanelConfiguration.TextAlignment">
      <summary>
            Gets or sets the alignment of the text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPanelConfiguration.TextDock">
      <summary>
            Gets or sets the dockstyle of the text
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QVerticalTextOrientation">
      <summary>
            Determines how vertical text will be rendered
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QVerticalTextOrientation.VerticalDown">
      <summary>
            The content will be displayed vertical with the from top to bottom.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QVerticalTextOrientation.VerticalUp">
      <summary>
            The content will be displayed vertical with the from bottom to top.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPaintMenuItemEventHandler">
      <summary>
            Defines the delegate to use with the PaintMenuItem event on a <see cref="T:Qios.DevSuite.Components.QMenu" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPaintMenuItemEventArgs">
      <summary>
            EventArgs used with the PaintMenuItem event of a <see cref="T:Qios.DevSuite.Components.QMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPaintMenuItemEventArgs.#ctor(Qios.DevSuite.Components.QMenuItem,Qios.DevSuite.Components.QCommandPaintOptions,System.Drawing.StringFormat,System.Drawing.Graphics)">
      <summary>
            Constructor, creates a new QPaintMenuItemEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPaintMenuItemEventArgs.MenuItem">
      <summary>
            Gets the MenuItem to draw.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPaintMenuItemEventArgs.Flags">
      <summary>
            Gets the Flags to use when painting.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPaintMenuItemEventArgs.StringFormat">
      <summary>
            Gets the StringFormat to use.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPaintMenuItemEventArgs.Graphics">
      <summary>
            Gets the Graphics to draw on.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuAnimationType">
      <summary>
            Indicates the type of animation used on a <see cref="T:Qios.DevSuite.Components.QMenu" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuAnimationType.None">
      <summary>
            No animation is used.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuAnimationType.Fade">
      <summary>
            The menu fades in.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuAnimationType.Slide">
      <summary>
            The Menu slides out.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuMouseEventHandler">
      <summary>
            Defines the delegate for the events on a <see cref="T:Qios.DevSuite.Components.QMenuMouseEventArgs" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuEventHandler">
      <summary>
            Defines the delegate for the events on a <see cref="T:Qios.DevSuite.Components.QMenu" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuCancelEventHandler">
      <summary>
            Defines the delegate for events on a <see cref="T:Qios.DevSuite.Components.QMenu" /> that can be canceled.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuMouseEventArgs">
      <summary>
            Contains the EventArgs for the <see cref="T:Qios.DevSuite.Components.QMenu" /> mouse events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuMouseEventArgs.#ctor(Qios.DevSuite.Components.QMenuItem)">
      <summary>
            Constructor. Creates an instance of QMenuEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuMouseEventArgs.MenuItem">
      <summary>
            Gets the MenuItem the event took place on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuMouseEventArgs.Button">
      <summary>
            Gets the mouse button that was pressed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuMouseEventArgs.Clicks">
      <summary>
            Gets the number of times the button was clicked
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuMouseEventArgs.Delta">
      <summary>
            Gets a signed count of the number of detents the mouse wheel has rotated. A detent is one notch of the mouse wheel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuMouseEventArgs.X">
      <summary>
            Gets the X-coordinate of the mouse
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuMouseEventArgs.Y">
      <summary>
            Gets the Y-coordinate of the mouse
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuEventArgs">
      <summary>
            Contains the EventArgs for the <see cref="T:Qios.DevSuite.Components.QMenu" /> events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuEventArgs.#ctor(Qios.DevSuite.Components.QMenuItem,Qios.DevSuite.Components.QMenuItemActivationType,System.Boolean)">
      <summary>
            Constructor. Creates an instance of QMenuEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuEventArgs.MenuItem">
      <summary>
            Gets the MenuItem the event took place on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuEventArgs.ActivationType">
      <summary>
            Gets the type of activation that activated the MenuItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuEventArgs.Expanded">
      <summary>
            Gets whether the MenuItem is or will be expanded. If it has ChildItems it probably is expanded. If it is a QToolItem
            and has ChildItems the Expanded property is set to true when the Arrow is clicked, else it is false.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuCancelEventArgs">
      <summary>
            Contains the EventArgs for <see cref="T:Qios.DevSuite.Components.QMenu" /> events that can be canceled.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuCancelEventArgs.#ctor(Qios.DevSuite.Components.QMenuItem,Qios.DevSuite.Components.QMenuItemActivationType,System.Boolean,System.Boolean)">
      <summary>
            Constructor. Creates a new instance of QMenuCancelEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuCancelEventArgs.Cancel">
      <summary>
            Gets or sets whether the event should be canceled.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuItemActivationType">
      <summary>
            Is used to indicate the type of activation of a <see cref="T:Qios.DevSuite.Components.QMenuItem" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuItemActivationType.None">
      <summary>
            No activation
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuItemActivationType.Shortcut">
      <summary>
            The MenuItem is activated via the Shortcut
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuItemActivationType.Hotkey">
      <summary>
            The MenuItem is activated via the Hotkey
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuItemActivationType.Keyboard">
      <summary>
            The MenuItem is activated via Keyboard navigation.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuItemActivationType.Mouse">
      <summary>
            The MenuItem is activated via a Mouse Click.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration">
      <summary>
            Contains configuration properties for instances of <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.Finalize">
      <summary>
            Destructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.Dispose">
      <summary>
            Disposes the group configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.Dispose(System.Boolean)">
      <summary>
            Disposes the group configuration
            </summary>
      <param name="disposing">Disposing</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ResetPanelAppearance">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ShouldSerializePanelAppearance">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.PutFont(System.Drawing.Font)">
      <summary>
            Sets the Font of this configuration.
            This does not raise any events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.CreateCommandAppearance">
      <summary>
            Overridden. Creates the appearance for the ActivatedItemAppearance. Can be overridden
            to return a custom appearance.
            </summary>
      <returns>The new created appearance.</returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ExpandingDelay">
      <summary>
            Overridden. Is not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.UseExpandingDelay">
      <summary>
            Overridden. Is not used on this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ShadeVisible">
      <summary>
            Gets or sets if the group items have shading.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ShadePosition">
      <summary>
            Gets or sets the position of the group item shade.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ShadeGradientSize">
      <summary>
            Contains the size in pixels of the gradient (edges) of the shade.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemOrientation">
      <summary>
            Gets or sets the Orientation of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.IconOverlaps">
      <summary>
            Gets or sets whether the icon should overlap.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.IconSize">
      <summary>
            Gets or sets the prefered IconSize.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemWrapText">
      <summary>
            Gets or sets whether the text of group items should be wrapped
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemStretched">
      <summary>
            Gets or sets whether group items should be stretched
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.CanExpandMultiple">
      <summary>
            Gets or sets whether multiple group items may be expanded simultaneously
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.AnimateGroupItem">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QExplorerItem" /> group items should use animation, this is ignored when the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.AnimateTime">
      <summary>
            Gets or sets the time that is used for animation (in milliseconds)
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.AnimationType">
      <summary>
            Gets or sets the type of animation to use. This is ignored when the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.UsedAnimationType">
      <summary>
            Gets the type of animation that is used based on several settings like <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> and <see cref="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.AnimationType" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.Font">
      <summary>
            Gets the Font that is used
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.FontHot">
      <summary>
            Gets the Font that is used for hot items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.FontPressed">
      <summary>
            Gets the Font that is used for pressed items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.FontExpanded">
      <summary>
            Gets the Font that is used for expanded items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.FontStyle">
      <summary>
            Gets or sets the style of the font
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.FontStyleHot">
      <summary>
            Gets or sets the style of the font for hot items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.FontStylePressed">
      <summary>
            Gets or sets the style of the font for pressed items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.FontStyleExpanded">
      <summary>
            Gets or sets the style of the font for expanded items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemSpacing">
      <summary>
            Gets or sets the spacing between group items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemRoundedCornerSize">
      <summary>
            Gets or sets the size of the group items rounded corners.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemRoundedCornerTopLeft">
      <summary>
            Gets or sets if the top left corner should be rounded
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemRoundedCornerTopRight">
      <summary>
            Gets or sets if the top right corner should be rounded
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemRoundedCornerBottomLeft">
      <summary>
            Gets or sets if the bottom left corner should be rounded
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemRoundedCornerBottomRight">
      <summary>
            Gets or sets if the bottom right corner should be rounded
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.PanelRoundedCornerSize">
      <summary>
            Gets or sets the size of the group panels rounded corners.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.PanelRoundedCornerTopLeft">
      <summary>
            Gets or sets if the top left corner should be rounded
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.PanelRoundedCornerTopRight">
      <summary>
            Gets or sets if the top right corner should be rounded
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.PanelRoundedCornerBottomLeft">
      <summary>
            Gets or sets if the bottom left corner should be rounded
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.PanelRoundedCornerBottomRight">
      <summary>
            Gets or sets if the bottom right corner should be rounded
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.PanelPadding">
      <summary>
            Gets or sets the padding of the group panel
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.PanelMargin">
      <summary>
            Gets or sets the margin of the group panel
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.PanelAppearance">
      <summary>
            Gets the appearance for the group panels.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.ItemAppearance">
      <summary>
            Gets the appearance for the group items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.UsedDepersonalizeMenuMask">
      <summary>
            Gets the used DepersonalizeMenuMask. This depends on whether the <see cref="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.DepersonalizeMenuMask" /> is set.
            If it is not set the default one is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.DepersonalizeMenuMask">
      <summary>
            Contains the base image that is used to show at the bottom of a <see cref="T:Qios.DevSuite.Components.QExplorerItem" /> group when it has MenuItems that have VisibleWhenPersonalized set to false.
             In the Mask the Color Red is replaced by the TextColor and Black till white are replaced by the DepersonalizeColors Color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.UsedHasChildItemsMaskReverse">
      <summary>
            Gets the actual used HasChildItemsMaskReverse. This is based on whether the HasChildItemsMaskReverse
            is set. If it is not set the default HasChildItemsMaskReverse is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.UsedHasChildItemsMask">
      <summary>
            Gets the actual used HasChildItemsMaskReverse. This is based on whether the HasChildItemsMaskReverse
            is set. If it is not set the default HasChildItemsMaskReverse is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.HasChildItemsMaskReverse">
      <summary>
            Gets or sets the base image that is used when a QExplorerBar has more items then visible.
            In the Mask the Color Red is replaced by the ExplorerBarHasMoreChildItemsColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarGroupItemConfiguration.HasChildItemsMask">
      <summary>
            Gets or sets the base image that is used when a QExplorerBar has more items then visible.
            In the Mask the Color Red is replaced by the ExplorerBarHasMoreChildItemsColor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeText">
      <summary>
            Defines one item in a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeText.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeText.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeText.#ctor(Qios.DevSuite.Components.QCompositeItemCreationOptions)">
      <summary>
            Constructor.
            </summary>
      <param name="options">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeText.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeText
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeText.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeText.SetTitle(System.String,System.Boolean)">
      <summary>
            Sets the title and lets you specify whether the parent must be notified.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeText.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeText.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Handles a paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeText.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeText.LayoutEngine">
      <summary>
            Overridden. Gets the part layout engine. Returns the QPartTextLayoutEngine when the engine is default.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeText.UsedFontDefinition">
      <summary>
            Gets the FontDefinition based on the state of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeText.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeText.Title">
      <summary>
            Gets or sets the title of the QRibbonItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeText.DisplayedTitle">
      <summary>
            Gets the DisplayedTitle. This is the Title without a possible ampesant character.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeScrollButtonAppearance">
      <summary>
            Contains the appearance for the scroll buttons on a QComposite.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeScrollButtonAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeScrollButtonAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeScrollBarAppearance">
      <summary>
            Contains the appearance for the scroll bar on a QComposite
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeScrollBarAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeScrollBarAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeResizeItem">
      <summary>
            Defines an item that can be used to resize a QCompositeWindow or QCompositeControl
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeResizeItem.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeResizeItem.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeResizeItem.CloseMenuOnActivate">
      <summary>
            Gets or sets whether the Menu must be closed when the Item is activated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeResizeItem.Cursor">
      <summary>
            Gets or sets the mouse cursor for this QCompositeItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeResizeItem.ChildItems">
      <summary>
            Overridden. Not used on this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeResizeItem.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeResizeBorder">
      <summary>
            Defines the borders that a QCompositeResizeItem can represent
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeBorder.None">
      <summary>
            No border
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeBorder.Left">
      <summary>
            Left border
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeBorder.Right">
      <summary>
            Right border
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeBorder.Top">
      <summary>
            Top border
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeBorder.TopLeft">
      <summary>
            Top left border
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeBorder.TopRight">
      <summary>
            Top right border
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeBorder.Bottom">
      <summary>
            Bottom border
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeBorder.BottomLeft">
      <summary>
            Bottom left border
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeResizeBorder.BottomRight">
      <summary>
            Border right border
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemInputBox">
      <summary>
            Defines one item in a <see cref="T:Qios.DevSuite.Components.QComposite" /> that displays a <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemInputBox.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemInputBox.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeItemInputBox.CreateInputBox">
      <summary>
            Creates the InputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemInputBox.Control">
      <summary>
            Overridden. Gets the control
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeItemInputBox.InputBox">
      <summary>
            Contains the <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeGroup">
      <summary>
            Defines a grouping item in a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.#ctor(Qios.DevSuite.Components.QCompositeItemCreationOptions)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.CreateScrollData">
      <summary>
            Creates the ScrollData.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.SynchronizeScrollData">
      <summary>
            Creates or destroys scroll data when needed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeItem
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the item color set for this button.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Overridden. Handles the layoutStage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Handles a paint stage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.HandleMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles a mouse move
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.HandleMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles a mouse down.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeGroup.HandleMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles a mouse up
            </summary>
      <param name="e">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroup.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroup.ScrollData">
      <summary>
            Gets possible scroll data for this QCompositeGroup
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroup.LayoutEngine">
      <summary>
            Gets or sets the LayoutEngine
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroup.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroup.Items">
      <summary>
            Gets the collection of CompositeItems of this QCompositeGroup. These are the items that are displayed in this QCompositeGroup.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeGroup.DesignablePartsCollection">
      <summary>
            Overridden. A QCompositeItem can host other parts. This returns this item.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandCollection">
      <summary>
            Is a base class to hold QCommand objects.
            Is used by a <see cref="T:Qios.DevSuite.Components.IQCommandContainer" /> to maintain  the collection of <see cref="T:Qios.DevSuite.Components.QCommand" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.#ctor">
      <summary>
            Default Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.#ctor(Qios.DevSuite.Components.IQCommandContainer,Qios.DevSuite.Components.QCommand)">
      <summary>
            Constructor. Creates a new QCommandContainer for the container.
            </summary>
      <param name="container">The container that this collection belongs to.</param>
      <param name="parentCommand">The command this QCommandCollection belongs to.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.AddCommand(Qios.DevSuite.Components.QCommand)">
      <summary>
            Adds <see cref="T:Qios.DevSuite.Components.QCommand" /> to this collection.
            </summary>
      <param name="command">The command to add.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.RemoveCommand(Qios.DevSuite.Components.QCommand)">
      <summary>
            Removes a <see cref="T:Qios.DevSuite.Components.QCommand" /> from this collection.
            </summary>
      <param name="command">The command to remove.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.RemoveCommandAt(System.Int32)">
      <summary>
            Removes the <see cref="T:Qios.DevSuite.Components.QCommand" /> at position index from this collection.
            </summary>
      <param name="index">The index of the command to remove.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.InsertCommand(System.Int32,Qios.DevSuite.Components.QCommand)">
      <summary>
            Inserts a <see cref="T:Qios.DevSuite.Components.QCommand" /> at the specified index.
            </summary>
      <param name="index">The index to insert the command.</param>
      <param name="command">The command to insert.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.OnClear">
      <summary>
            Resets every parent before the clear is executed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.OnClearComplete">
      <summary>
            Handles the collection changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.GetCommand(System.Int32)">
      <summary>
            Returns the <see cref="T:Qios.DevSuite.Components.QCommand" /> at index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.GetCommand(System.String)">
      <summary>
            Returns the <see cref="T:Qios.DevSuite.Components.QCommand" /> that has name as its name. Returns null if not found.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.CopyTo(Qios.DevSuite.Components.QCommand[],System.Int32)">
      <summary>
            Copies this collection to the commands array.
            </summary>
      <param name="commands">The array to copy to.</param>
      <param name="index">The index to start at.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.IndexOfCommand(Qios.DevSuite.Components.QCommand)">
      <summary>
            Returns the Index of command in this collection. Returns -1 if not found.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.IndexOfCommand(System.String)">
      <summary>
            Returns index of the <see cref="T:Qios.DevSuite.Components.QCommand" /> that has name as its Name. Returns -1 if not found.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.ContainsCommand(Qios.DevSuite.Components.QCommand)">
      <summary>
            Returns whether this collection contains command.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.SetCommandAtIndex(System.Int32,Qios.DevSuite.Components.QCommand)">
      <summary>
            Sets a <see cref="T:Qios.DevSuite.Components.QCommand" /> at index. The QCommand gets added when index is bigger than the count
            else the command gets inserted.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.FindCommandWithRelativeName(System.String)">
      <summary>
            Finds the <see cref="T:Qios.DevSuite.Components.QCommand" /> in the complete collection that has relativeName as its name.
            The relativeName is the name of the parenting QCommands, separated by the <see cref="P:Qios.DevSuite.Components.QCommand.NameSeparator" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.GetCommandAtPosition(System.Drawing.Point)">
      <summary>
            Returns the <see cref="T:Qios.DevSuite.Components.QCommand" /> which has its Bounds on position. Returns null if there is no QCommand at position.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.HandleCollectionChanged(System.Int32,System.Int32)">
      <summary>
            Handles a change of the collection. It calls
            the <see cref="M:Qios.DevSuite.Components.QCommandCollection.OnCollectionChanged(Qios.DevSuite.Components.QCommandCollectionChangedEventArgs)" /> method and notifies the the Container and ParentCommand
            of the change.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollection.OnCollectionChanged(Qios.DevSuite.Components.QCommandCollectionChangedEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCommandCollection.CollectionChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCommandCollection.CollectionChanged">
      <summary>
            Gets raised when a command is added or removed from the collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandCollection.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandCollectionChangedEventHandler">
      <summary>
            Defines the delegate for the <see cref="E:Qios.DevSuite.Components.QCommandCollection.CollectionChanged" /> event.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandCollectionChangedEventArgs">
      <summary>
            Defines the eventArgs for the <see cref="E:Qios.DevSuite.Components.QCommandCollection.CollectionChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandCollectionChangedEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandCollectionChangedEventArgs.FromCount">
      <summary>
            Gets the count before the change.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandCollectionChangedEventArgs.ToCount">
      <summary>
            Gets the count after the change.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QBaseShapeCollection">
      <summary>
            Defines a collection of base shapes for <see cref="T:Qios.DevSuite.Components.QShape" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeCollection">
      <summary>
            Defines the collection for <see cref="T:Qios.DevSuite.Components.QShape" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.#ctor">
      <summary>
            Creates a QShapeCollection that does not belong to a shape
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.Add(Qios.DevSuite.Components.QShape)">
      <summary>
            Adds a shape to the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.Remove(Qios.DevSuite.Components.QShape)">
      <summary>
            Removes a shape from the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.Insert(System.Int32,Qios.DevSuite.Components.QShape)">
      <summary>
            Inserts a shape in the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.IndexOf(System.String)">
      <summary>
            Gets the index of the shape with the specified shapeName
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.IndexOf(Qios.DevSuite.Components.QShape)">
      <summary>
            Gets the index of the specified shape in this collection. Returns -1 when it does not exists
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.Contains(Qios.DevSuite.Components.QShape)">
      <summary>
            Returns whether this collection contains the specified shape.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.Contains(System.String)">
      <summary>
            Returns whether this collection contains the specified shape
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.CopyTo(Qios.DevSuite.Components.QShape[],System.Int32)">
      <summary>
            Copies this collection to specified collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.OnClearComplete">
      <summary>
            Handles the action that must be executed after a clear is completed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeCollection.OnCollectionChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QShapeCollection.CollectionChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QShapeCollection.CollectionChanged">
      <summary>
            Gets raised when this collection is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeCollection.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeCollection.Item(System.Int32)">
      <summary>
            Gets the item on the specified index.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeCollection.Item(System.String)">
      <summary>
            Gets the shape with the specified shapeName
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBaseShapeCollection.#ctor">
      <summary>
            Constructor, creates the base shapes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBaseShapeCollection.IndexOf(Qios.DevSuite.Components.QBaseShapeType)">
      <summary>
            Gets the index of the shape with the specified QBaseShapeType
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBaseShapeCollection.Contains(Qios.DevSuite.Components.QBaseShapeType)">
      <summary>
            Returns whether this collection contains the specified an item with QBaseShapeType
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBaseShapeCollection.Item(Qios.DevSuite.Components.QBaseShapeType)">
      <summary>
            Gets the shape with the specified QBaseShapeType
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QBaseShapeType">
      <summary>
            Contains all base shape types
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RectangleShape">
      <summary>
            Defines a default rectangle shape
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.SquareTabStrip">
      <summary>
            Defines the shape name of the Default Square TabStrip.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedTabStrip">
      <summary>
            Defines the shape name of the Rounded TabStrip.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.SquareTabStripNavigationArea">
      <summary>
            Defines the shape name of the SquareTabStripNavigationArea.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedTabStripNavigationArea">
      <summary>
            Defines the shape name of the RoundedTabStripNavigationArea.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.LeftCurvedTabStripNavigationArea">
      <summary>
            Defines the shape name of the LeftCurvedTabStripNavigationArea.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.SquareTab">
      <summary>
            Defines the shape name of the SquareTab.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedTab">
      <summary>
            Defines the shape name of the RoundedTab.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.MSOneNoteTab">
      <summary>
            Defines the shape name of the MSOneNoteTab.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.MSVisualStudio2005Tab">
      <summary>
            Defines the shape name of the MSVisualStudio2005Tab.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RectangleShapedWindow">
      <summary>
            Defines the shape name of a rectangle
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedRectangleShapedWindow">
      <summary>
            Defines the shape name of a rounded rectangle
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.BalloonShapedWindow">
      <summary>
            Defines the shape name of a balloon
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.ArrowBalloonShapedWindow">
      <summary>
            Defines the shape name of a balloon with an arrow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RibbonForm">
      <summary>
            Defines the shape name of a RibbonForm
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.TabControlContent">
      <summary>
            Defines the DefaultTabControlContent
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RibbonContent">
      <summary>
            Defines the default shape for RibbonContent
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RibbonPanel">
      <summary>
            Defines the default shape for RibbonPanelContent.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RibbonCaption">
      <summary>
            Defines the default shape for RibbonCaption.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RibbonItemBar">
      <summary>
            Defines the default shape for the RibbonItemBar.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RibbonLaunchBar">
      <summary>
            Defines the default shape for the RibbonLaunchBar
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RibbonLaunchBarHost">
      <summary>
            Defines the default shape for the RibbonLaunchBarHost
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RibbonTabButton">
      <summary>
            Defines the TabButton for the Ribbon.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.SquareInputBox">
      <summary>
            Defines a square InputBox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedInputBox">
      <summary>
            Defines an InputBox with rounded corners
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedInputBox2">
      <summary>
            Defines an InputBox with smaller rounded corners.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.SquareButton">
      <summary>
            Defines a square button
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedButton">
      <summary>
            Defines a rounded button
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedButton2">
      <summary>
            Defines an other rounded button
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.SquareContent">
      <summary>
            Defines a plain square content
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedContent">
      <summary>
            Defines a rounded content
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RoundedContent2">
      <summary>
            Defines an alternative rounded content;
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.InputBoxRoundedDropDownButton">
      <summary>
            Defines a drop down button for the rounded input box
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.InputBoxRoundedDropDownButtonLeft">
      <summary>
            Defines a drop down button for the rounded input box
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.InputBoxRoundedDropDownButton2">
      <summary>
            Defines a drop down button for the rounded input box with smaller corners.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.InputBoxRoundedDropDownButtonLeft2">
      <summary>
            Defines a drop down button for the rounded input box with smaller corners that is left aligned.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QBaseShapeType.RibbonShowDialogButton">
      <summary>
            Defines the button for the RibbonShowDialog
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeType">
      <summary>
            Determines the type of the <see cref="T:Qios.DevSuite.Components.QShape" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeType.Generic">
      <summary>
            Generic shapes
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeType.TabButton">
      <summary>
            Shape is used for TabButtons
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeType.TabStrip">
      <summary>
            Shape is used for TabStrip
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeType.Content">
      <summary>
            Shape is used for several Content Items
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeType.TabStripNavigationArea">
      <summary>
            Shape is used in the navigation area of the TabStrip
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeType.ShapedWindow">
      <summary>
            Shape is used in QShapedWindows and QBalloonWindows
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeType.InputBox">
      <summary>
            Shape is used in QInputBox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeType.Button">
      <summary>
            Shape is used for buttons
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QSolidAppearanceFiller">
      <summary>
            Defines the appearance Filler for solid appearances.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QSolidAppearanceFiller.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QSolidAppearanceFiller.FillRectangleBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the background (usually filling the bounds) with the specified appearance properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QSolidAppearanceFiller.FillRectangleForeground(System.Drawing.Rectangle,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the foreground (usually drawing the borders) with the specified appearance properties
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QSolidAppearanceFiller.FillPathBackground(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the background (usually filling the path) with the specified appearance properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QSolidAppearanceFiller.FillPathForeground(System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QAppearanceFillerProperties,System.Drawing.Graphics)">
      <summary>
            Fills the foreground (usually drawing the borders) with the specified appearance properties
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppearanceFillerProperties">
      <summary>
            Contains additional properties to Fill with <see cref="T:Qios.DevSuite.Components.QAppearanceFiller" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QAppearanceFillerProperties.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceFillerProperties.AlternativeShineColor">
      <summary>
            Gets or sets the alternative shine color for metallic looks
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceFillerProperties.UseAlternativeShineColor">
      <summary>
            Determines if the alternative shine color will be used
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceFillerProperties.AlternativeBoundsForBrushCreation">
      <summary>
            Contains a possible alternative bounds that must be used to create the brush etc. To paint on.
            This can be usefull for drawing for example a QTabButton in the same style as its QTabPage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceFillerProperties.UseAlternativeBoundsForBrushCreation">
      <summary>
            Indicates if the <see cref="P:Qios.DevSuite.Components.QAppearanceFillerProperties.AlternativeBoundsForBrushCreation" /> must be used to create the brushes etc.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceFillerProperties.DockStyle">
      <summary>
            Gets or sets the DockStyle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceFillerProperties.BackgroundOptions">
      <summary>
            Gets or sets the appearance background options
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QAppearanceFillerProperties.Default">
      <summary>
            Contains the default QAppearanceFillerProperties
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartTableRowLayoutEngine">
      <summary>
            Defines the class that lays-out <see cref="T:Qios.DevSuite.Components.IQPart" /> objects in a table-row order.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableRowLayoutEngine.GetPartDirection(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the direction of the part
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableRowLayoutEngine.ApplyConstraints(System.Drawing.Size,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Overridden. Applies constraints.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartTableRowLayoutEngine.LayoutPart(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Overridden. Lays out the part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartTableRowLayoutEngine.Default">
      <summary>
            Gets the default static engine.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QSmoothingMode">
      <summary>
            Defines several smoothing modes.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSmoothingMode.None">
      <summary>
            Does not anti-alias the shapes to draw.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSmoothingMode.AntiAlias">
      <summary>
            Anti Aliases the shapes to draw.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QToolBarHostDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QToolBarHost" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QToolBarHostDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QToolBarHostDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QToolBarHostDesigner.SelectionRules">
      <summary>
            Overridden. Returns the SelectionRules.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QToolBarHostDesigner.DrawGrid">
      <summary>
            Overridden. Gets or sets whether the Grid should be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QToolBarHostDesigner.AssociatedComponents">
      <summary>
            Overridden. Gets the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QToolBarHost" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QToolBarHostDesigner.Verbs">
      <summary>
            Gets the designer verbs.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QStatusBarPanelConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStatusBarPanelConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" /> to a given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStatusBarPanelConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" /> to the given destinationType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QShapeCodeSerializer">
      <summary>
            Defines the CodeDomSerializer for the <see cref="T:Qios.DevSuite.Components.QShape" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeCodeSerializer.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeCodeSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Serializes the <see cref="T:Qios.DevSuite.Components.QShape" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeCodeSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Deserializes the <see cref="T:Qios.DevSuite.Components.QShape" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QPaddingConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QPadding" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPaddingConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QPadding" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPaddingConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Overridden. Converts an object to a <see cref="T:Qios.DevSuite.Components.QPadding" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPaddingConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QPadding" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPaddingConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this Typeconvert can convert a <see cref="T:Qios.DevSuite.Components.QPadding" /> from the given SourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPaddingConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because this type has properties, GetPropertiesSupported returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPaddingConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            Overridden. returns the properties of a <see cref="T:Qios.DevSuite.Components.QPadding" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPaddingConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because a <see cref="T:Qios.DevSuite.Components.QPadding" /> is a value type, it must create a new instance when a property changes.
            This method returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPaddingConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Returns a new instance of a <see cref="T:Qios.DevSuite.Components.QPadding" /> with the specified properties.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QMenuConfigurationTypeConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QMenuConfiguration" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCommandConfigurationTypeConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QCommandConfiguration" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCommandConfigurationTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QCommandConfiguration" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCommandConfigurationTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QCommandConfiguration" /> instance to the given destinationType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QContextMenuExtender">
      <summary>
            Is used by the <see cref="T:Qios.DevSuite.Components.Design.QContextMenuDesigner" /> to show the QContextMenu property in the properties list for all the other Controls and NotifyIcons on the site.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuExtender.#ctor">
      <summary>
            DefaultConstructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuExtender.CanExtend(System.Object)">
      <summary>
            Implements the IExtenderProvider.CanExtend method, indicates which object it can extend
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuExtender.Merge(Qios.DevSuite.Components.Design.QContextMenuExtender)">
      <summary>
            Merges this extender with the provided extender.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuExtender.GetComponents(Qios.DevSuite.Components.QContextMenu)">
      <summary>
            Returns the components that are attached to the QContextMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuExtender.GetQContextMenu(System.ComponentModel.IComponent)">
      <summary>
            Provides the QContextMenu getter for the extended QContextMenu property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuExtender.SetQContextMenu(System.ComponentModel.IComponent,Qios.DevSuite.Components.QContextMenu)">
      <summary>
            Provides the QContextMenu setter for the extended QContextMenu property.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QContextMenuCodeSerializer">
      <summary>
            Defines the CodeDomSerializer for the <see cref="T:Qios.DevSuite.Components.QContextMenu" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuCodeSerializer.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuCodeSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Serializes the <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QContextMenuCodeSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Overridden. Deserializes the <see cref="T:Qios.DevSuite.Components.QContextMenu" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QColorHslTypeConverter">
      <summary>
            Defines the TypeConverter for a QColorHsl
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorHslTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this Typeconvert can convert from the given SourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorHslTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorHslTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorHslTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Overridden. Converts an object to a QColorHsl object.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel">
      <summary>
            Defines the Panel containing <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /><see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup" /> and <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" /> items. This panel is usually placed on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.CreateConfiguration">
      <summary>
            Overridden. Creates the configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.Clone">
      <summary>
            Overridden clones the object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.SetDisplayParent(Qios.DevSuite.Components.IQManagedLayoutParent)">
      <summary>
            Overridden. Sets the display parent
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.SetConfigurationBaseProperties(System.Boolean)">
      <summary>
            Sets the configuraton base properties
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.FindRibbonPanel(Qios.DevSuite.Components.IQPart)">
      <summary>
            Tries to find the QRibbonPanel from the specified fromPart.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.ReapplyCurrentResizeBehavior">
      <summary>
            Reapply the current resize behavior properties because the collection might be changed..
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.Collapse(System.Boolean)">
      <summary>
            Collapses this composite. MeasureMent only indicaties whether the displayParent of the child items must be changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.Uncollapse(System.Boolean)">
      <summary>
            Uncollapses this composite. MeasureMent only indicaties whether the displayParent of the child items must be changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.GetObjectPainter(Qios.DevSuite.Components.QPartPaintLayer,System.Type)">
      <summary>
            Overridden. Gets the objectPainter. Returns null when this is collapsed, because then the composite shouldn't be drawn.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Gets the colorSet for the specified item in the specified state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Overridden. Handles the layout stage
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Handles the paint stages on a part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.OnItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Overridden. Handles the ItemActivated event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanel.OnCaptionShowDialogItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbonPanel.CaptionShowDialogItemActivated" /> event.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.Configuration">
      <summary>
            Contains the Configuration for the QRibbonPanel. DefaultValues are inherited from <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonPageCompositeConfiguration.DefaultPanelConfiguration" /></summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPanel.CaptionShowDialogItemActivated">
      <summary>
            Gets raised when the ShowDialogItem is activated
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.Title">
      <summary>
            Gets or Sets the Title.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.HotkeyTextCollapsed">
      <summary>
            Gets or sets the HotkeyText for the item when this panel is collapsed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.HotkeyTextShowDialog">
      <summary>
            Gets or sets the HotkeyText for the show dialog item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.Icon">
      <summary>
            Gets or sets the Icon. This Icon is displayed when the panel is collapsed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.Items">
      <summary>
            Gets the collection of QRibbonItems of this QRibbon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.HasHotState">
      <summary>
            Overridden. Gets whether this panel has a hot state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.IsCollapsed">
      <summary>
            Gets whether this QRibbonPanel is collapsed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.RibbonPage">
      <summary>
            Gets the RibbonPage if there is one.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.RibbonPageComposite">
      <summary>
            Gets the Composite as a QRibbonPageComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.Ribbon">
      <summary>
            Gets the Ribbon this QRibbonPanel is on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.CaptionPart">
      <summary>
            Gets the part that displays the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.CaptionTitlePart">
      <summary>
            Gets the part that displays the title on the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.CaptionShowDialogPart">
      <summary>
            Gets the part that displays the show dialog item on the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.ItemAreaPart">
      <summary>
            Gets the part that displays the items
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.AssociatedComponents">
      <summary>
            Gets the associated components.
            </summary>
      <remarks>
            The list instance shouldn't be the same as the the Items instance, because overrides may add new designable items
            to the list.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.ContentObject">
      <summary>
            Overridden. Gets the contentObject. this is based on whether it is collapsed or not.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPanel.Parts">
      <summary>
            Overridden. Gets the parts. this is based on whether it is collapsed or not.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem">
      <summary>
            Defines the item that shows more items on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem.ConfigureChildWindow">
      <summary>
            Overridden. Configures the child window.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem.OnItemCollapsed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Overridden. Handles the collapse of an item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem.Configuration">
      <summary>
            New. gets or sets the configuration as a QRibbonLaunchBarShowMoreItemConfiguration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem.CanExpand">
      <summary>
            Overridden. Returns whether this can expand.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem.CustomChildWindow">
      <summary>
            Overridden. Cannot be used on a QRibbonLaunchBarShowMoreItem.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem.QRibbonLaunchBarMoreItemCompositeColorHost">
      <summary>
            Defines an intermediate ItemColorHost for the child composite of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem.QRibbonLaunchBarMoreItemCompositeColorHost.#ctor(Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar,Qios.DevSuite.Components.QComposite)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarShowMoreItem.QRibbonLaunchBarMoreItemCompositeColorHost.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Gets the item color set.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration.PropDefaultItemConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration.CreateAppearance">
      <summary>
            Creates the GroupAppearance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested property count.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration.CreateItemConfiguration">
      <summary>
            Creates the GroupAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration.ContentLayoutOrder">
      <summary>
            Overridden. Does nothing on a QRibbonGroup
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemBarConfiguration.DefaultItemConfiguration">
      <summary>
            Gets the configuration for <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> used on this bar.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBarAppearance">
      <summary>
            Contains the appearance for <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBarAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemBarAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTranslucentWindowComponent">
      <summary>
            A component to configure and create QTranslucentWindows in the designer.
            Use the Configuration property to configure the QTranslucentWindow and call the Show or ShowCenteredOnScreen
            method to create and show the QTranslucentWindow. It is also possible to use the QTranslucentWindow without
            this component.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.ShouldSerializeConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.ResetConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.Show">
      <summary>
            Shows the QTranslucentWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.ShowCenteredOnScreen">
      <summary>
            Shows the QTranslucentWindow centered on the screen
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.OnTranslucentWindowCreated(Qios.DevSuite.Components.QTranslucentWindowEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QTranslucentWindowComponent.TranslucentWindowCreated" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.CreateConfigurationInstance">
      <summary>
            Creates the configuration instance for this QTranslucentWindowComponent
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowComponent.CreateTranslucentWindowInstance">
      <summary>
            Creates the QTranslucentWindow based on the configuration settings of this component.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="E:Qios.DevSuite.Components.QTranslucentWindowComponent.TranslucentWindowCreated">
      <summary>
            Gets raised when the QShapedWindow is created
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindowComponent.Configuration">
      <summary>
            Gets or sets the QTranslucentWindowComponentConfiguration for the component.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTranslucentWindowEventHandler">
      <summary>
            Defines the delegate to use with the TranslucentWindowCreated event.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTranslucentWindowEventArgs">
      <summary>
            Contains the EventArgs for QShapedWindowComponent events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTranslucentWindowEventArgs.#ctor(Qios.DevSuite.Components.QTranslucentWindow)">
      <summary>
            Constructor. Creates a new instance of QTranslucentWindowEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTranslucentWindowEventArgs.TranslucentWindow">
      <summary>
            Gets or sets the QTranslucentWindow.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabControlPaintParams">
      <summary>
            Contains additional parameters for drawing a <see cref="T:Qios.DevSuite.Components.QTabControl" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlPaintParams.ContentBorder">
      <summary>
            Gets or sets the content border color. This is the border color of the ContentShape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlPaintParams.ContentBackground1">
      <summary>
            Gets or sets the first background color of the ContentShape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlPaintParams.ContentBackground2">
      <summary>
            Gets or sets the second background color of the ContentShape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabControlPaintParams.ContentShade">
      <summary>
            Gets or sets the shade color of the ContentShape
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextRenderedText">
      <summary>
            Implements the <see cref="T:Qios.DevSuite.Components.QMarkupTextRenderedPart" /> that can hold text. A <see cref="T:Qios.DevSuite.Components.QMarkupTextElement" /> that exists of text and covers multiple lines
            is divided in several <see cref="T:Qios.DevSuite.Components.QMarkupTextRenderedText" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedText.#ctor(System.Single,System.Drawing.SizeF,System.String,System.Int32[])">
      <summary>
            Constructor, creates a QMarkupTextRenderedPart
            </summary>
      <param name="baseLine">Contais the baseLine of the text relative to the top of this part. All the parts on one line are drawn on the same baseLine.</param>
      <param name="size">The size of the textPart</param>
      <param name="text">Contains the text of this part</param>
      <param name="stringWidths">
            Contains the individual string widths. So when the text contains 'QIOS' this stringWidths array contains 4 ints:
            One with the width of 'Q', One with the width of 'QI', one with the width of 'QIO' and finally one with the width of 'QIOS'.
            This is used when spacings are trimmed.
            </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedText.TrimLeft">
      <summary>
            Trims the left of this part
            </summary>
      <returns>
            True if there are visible characters left, else false.
            </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedText.TrimRight">
      <summary>
            Trims the right of this part.
            </summary>
      <returns>
            True if there are visible characters left, else false.
            </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedText.Draw(System.Drawing.Graphics)">
      <summary>
            Draws the part on the graphics.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextRenderedText.Dispose(System.Boolean)">
      <summary>
            Disposes this part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedText.Text">
      <summary>
            Gets the Text
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedText.VisibleText">
      <summary>
            Gets the visible Text. You should always draw the visibleText because this is usually trimmed when needed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedText.FirstVisibleCharacter">
      <summary>
            Gets or sets the index of the first visible character
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedText.LastVisibleCharacter">
      <summary>
            Gets or sets the index of the Last Visible Character.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextRenderedText.StringWidths">
      <summary>
            Contains the individual string widths. So when the text contains 'QIOS' this stringWidths array contains 4 ints:
            One with the width of 'Q', One with the width of 'QI', one with the width of 'QIO' and finally one with the width of 'QIOS'.
            This is used when spacings are trimmed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockContainer">
      <summary>
            The QDockContainer makes it possible to dock several <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> objects. next to each other or
            on each other with a tabstrip. When a QDockingWindow gets docked, it will always be docked
            on a QDockContainer. When an other QDockingWindow docks on the QDockingWindow it will be
            docked on the same QDockContainer if the orientation is the same, else a new QDockContainer will
            be created.
            <br /><br /><b>Normally you don't have to wonder about QDockContainer, those objects are managed automatically.
            use <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> instead.</b></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockControl">
      <summary>
            QDockControl is the base class for <see cref="T:Qios.DevSuite.Components.QDockContainer" /> and <see cref="T:Qios.DevSuite.Components.QDockingWindow" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.CreateAppearanceInstance">
      <summary>
            Overridden, creates a new QDockAppearance.
            </summary>
      <returns>a new QDockAppearance</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.CreateDockContainerInstance(Qios.DevSuite.Components.QDockControl,System.Drawing.Size,System.Int32,Qios.DevSuite.Components.QDockPosition,System.Windows.Forms.Control,Qios.DevSuite.Components.QDockOrientation,System.Boolean)">
      <summary>
            Creates a new instance of a QDockContainer and positions it on the given parameters.
            </summary>
      <param name="creatingControl">The Control whoe created this QDockContainer</param>
      <param name="size">The Size this QDockContaine should get</param>
      <param name="controlIndex">The Index to Place this QDockContainer on</param>
      <param name="dockPosition">The dockPosition</param>
      <param name="parent">The Parent of this QDockContainer</param>
      <param name="orientation">The Orientation of this QDockContainer</param>
      <param name="doLayout">Indicates if Layout must be performed</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.MustBePersistedAfter(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Indicates if this persistableObject must be saved after an other persistableObject.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.SavePersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Saves this Control to the parentElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.LoadPersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable,System.Object)">
      <summary>
            Loads this Control from the specified persistableObjectElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.UnloadPersistableObject">
      <summary>
            Unloads the persistableObject.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.SetCanSizePropertiesOnOrientation">
      <summary>
            Sets the CanSizeProperties based on the Parent, Orientation and ControlIndex.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.OnSizeChanged(System.EventArgs)">
      <summary>
            Overridden. Caches the current size into the DockedSize based on its orientation. It also
            synchronizes the RequestedSize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Handles the invisibilty of the parent DockContainer and DockBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.Dispose(System.Boolean)">
      <summary>
            Disposes the Control.
            </summary>
      <param name="disposing">Is True when the user disposes the Control, it is False
            if the Dispose is called via the finalizer</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden, handles the dragging process when the control is dragging.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseUp event. It checks if the mouse is on an interesting position
            and does the appropiate action.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.OnIconChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QDockControl.IconChanged" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.OnChildControlsChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QDockControl.ChildControlsChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QDockControl.Closing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.OnClosed(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QDockControl.Closed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.OnVisibleChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the VisibleChanged.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockControl.OnEnabledChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the TabButtonSourcePropertyChanged event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockControl.IconChanged">
      <summary>
            Gets raised when the Icon changes.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockControl.Closed">
      <summary>
            Gets raised when the form gets closed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockControl.Closing">
      <summary>
            Gets raised before the Form gets closed. This event can be canceled.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockControl.ChildControlsChanged">
      <summary>
            Gets raised when child controls are added or removed from this QDockControl or a child QDockControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.PersistGuid">
      <summary>
            Gets or sets the PersistGuid. With this Guid the control is identified in the persistence files.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.PersistObject">
      <summary>
            Gets or sets whether this object must be persisted.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IsPersisted">
      <summary>
            Gets or sets whether this control is already persisted to a file.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.RequiresUnload">
      <summary>
            Gets or sets whether this control requires an unload before loading from a persistableObjectElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CreateNew">
      <summary>
            Gets or sets whether a new instance of this PersistableObject must be created when it is loaded from file.
            If this is false the persistableObject must match an existing persistableObject in the <see cref="P:Qios.DevSuite.Components.QPersistenceManager.PersistableObjects" /> collection.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.Name">
      <summary>
            New, gets or sets the name.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanClose">
      <summary>
            Gets or sets whether this control can close.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockTop">
      <summary>
            Indicates if this control can dock on the topside of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockLeft">
      <summary>
            Indicates if this control can dock on the leftside of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockRight">
      <summary>
            Indicates if this control can dock on the rightside of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockBottom">
      <summary>
            Indicates if this control can dock on the bottomside of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockOnFormBorder">
      <summary>
            Indicates if this control can dock on border of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockOnlyNearDockBar">
      <summary>
            Indicates that a this control can only dock near other QDockControls and the QDockBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockOnOtherControlLeft">
      <summary>
            Indicates if this control can dock on the leftside of another control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockOnOtherControlRight">
      <summary>
            Indicates if this control can dock on the rightside of another control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockOnOtherControlTop">
      <summary>
            Indicates if this control can dock on the topside of another control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockOnOtherControlBottom">
      <summary>
            Indicates if this control can dock on the bottomside of another control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CanDockOnOtherControlTabbed">
      <summary>
            Indicates if this control can dock in a tabbed way on another control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.DragRectangleType">
      <summary>
            Gets or sets the type of DragRectangle that is drawn when the control is dragged.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.Icon">
      <summary>
            Is used by inherited controls to get or set an icon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.UseControlBackgroundForTabButton">
      <summary>
            Indicates if the background of this control should be used as background for the TabButton when the TabButton is painted.
            This makes sure the TabButton seems part of the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IconSize">
      <summary>
            Gets or sets the size of the Icon
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.Appearance">
      <summary>
            Overridden. Gets the QDockAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.Text">
      <summary>
            Overridden. Makes sure the text gets written when changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.Owner">
      <summary>
            Gets or sets the owning form of this QDockingWindow. If no owner is set the control cannot
            be docked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.WindowDockStyle">
      <summary>
            Gets the WindowDockStyle of this window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.DockPosition">
      <summary>
            Indicates the DockPosition on the form. This is different from the Dock property
            because this QDockPosition is still set when the parent control is, for example, a <see cref="T:Qios.DevSuite.Components.QDockContainer" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.VisibleWhenParentVisible">
      <summary>
            When a control is set to visible, the visible property is still set to false
            when the control's parent is not visible. Therefore a VisibleWhenParentVisible property
            is maintained to indicate if the control should be visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IsIdle">
      <summary>
            Gets whether the user is not dragging or sizing the form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IsDocked">
      <summary>
            Gets whether this window is docked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IsDockedOnDockBar">
      <summary>
            Gets whether the control is hooked to a <see cref="T:Qios.DevSuite.Components.QDockBar" /> and the style is docked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IsInSlideMode">
      <summary>
            Gets whether the control is docked and slided.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IsUndocked">
      <summary>
            Gets whether the control is undocked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IsDragging">
      <summary>
            Gets whether the user is dragging the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IsPreparingForDragging">
      <summary>
            Gets whether the user has pressed the mouse on the caption but didn't move the mouse enough.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.IsActivated">
      <summary>
            Returns whether this control or one of its child controls has the focus
            and the form that the control belongs to is the foreground window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.CurrentWindow">
      <summary>
            In an overloaded property, returns the Current QDockingWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.DockContainer">
      <summary>
            Gets the QDockContainer for this control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.DockBar">
      <summary>
            Gets the QDockBar for this control. To set the QDockBar, use <see cref="M:Qios.DevSuite.Components.QDockingWindow.DockWindow(Qios.DevSuite.Components.QDockBar)" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.ClientAreaMarginLeft">
      <summary>
            Overridden. Gets the ClientAreaMarginLeft of the QDockControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.ClientAreaMarginTop">
      <summary>
            Overridden. Gets the ClientAreaMarginTop of the QDockContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.ClientAreaMarginRight">
      <summary>
            Overridden. Gets the ClientAreaMarginRight of the QDockControl. This depends on how the control
            is oriented on the parent.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.ClientAreaMarginBottom">
      <summary>
            Overridden. Gets the ClientAreaMarginBottom of the QDockContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.ResizeBorderWidth">
      <summary>
            Overridden. Gets the size of the ResizeBorder.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockControl.BorderColorPropertyName">
      <summary>
            Overridden. Is not used on a QDockControl, returns null.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockControl.QWindowDockStyle">
      <summary>
            Is used to present the DockStyle of a Window
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockControl.QWindowDockStyle.None">
      <summary>
            No dock is specified
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockControl.QWindowDockStyle.Docked">
      <summary>
            The window is docked
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockControl.QWindowDockStyle.SlideMode">
      <summary>
            The window is on a QDockBar and Slided
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockControl.QWindowDockStyle.Undocked">
      <summary>
            The window is Undocked and on the QDockForm
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.#ctor">
      <summary>
            Do not use this constructor. it is for internally use only
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.#ctor(Qios.DevSuite.Components.QDockControl,System.Drawing.Size,System.Int32,Qios.DevSuite.Components.QDockPosition,System.Windows.Forms.Control,Qios.DevSuite.Components.QDockOrientation,System.Boolean)">
      <summary>
            Constructor creates a QDockContainer and positions it on the given parameters.
            </summary>
      <param name="creatingControl">The Control whoe created this QDockContainer</param>
      <param name="size">The Size this QDockContaine should get</param>
      <param name="controlIndex">The Index to Place this QDockContainer on</param>
      <param name="dockPosition">The dockPosition</param>
      <param name="parent">The Parent of this QDockContainer</param>
      <param name="orientation">The Orientation of this QDockContainer</param>
      <param name="doLayout">Indicates if Layout must be performed</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.CreateControlsInstance">
      <summary>
            Overridden. Creates the ControlCollection.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.MustBePersistedAfter(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Indicates if this QDockContainer must be saved after an other persistableObject.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.SavePersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Saves this Control to the parentElement. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.LoadPersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable,System.Object)">
      <summary>
            Loads this Control from the specified persistableObjectElement. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden Handles the MouseDown event of the QDockContainer.
            Checks if the mouse is on a QTabButton and activates the button if it is.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Checks if the user is dragging a button and handles the drag.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseUp event on the control. Checks if the user is dragging a button,
            If he is, it stops the button dragging process.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the QTabBar if this is tabbed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnUserSizing(Qios.DevSuite.Components.QUserSizingEventArgs)">
      <summary>
            Overridden. Handles the user sizing.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnUserSized(Qios.DevSuite.Components.QUserSizedEventArgs)">
      <summary>
            Overridden. Handles the User sized event, Lays out the child controls and refreshes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnUserEndsSizing(System.EventArgs)">
      <summary>
            Overridden, refreshes the parent when the user is done sizing.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Handles the OnLayout event of this QDockContainer.
            </summary>
      <param name="levent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnActiveControlChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QDockContainer.ActiveControlChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnTabStripHostPropertyChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QDockContainer.TabStripHostPropertyChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes this QDockContainer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainer.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the Background on the NonClientArea
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockContainer.ActiveControlChanged">
      <summary>
            Event that gets raised when the ActiveControl changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockContainer.TabStripHostPropertyChanged">
      <summary>
            Gets raised when a property changes that influences the TabStrip. This is mostly for internal usage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.Font">
      <summary>
            Overridden. Gets or sets the Font
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.PersistObject">
      <summary>
            Overridden. Gets whether this QDockContainer must be persisted. This depends on the child objects. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.PersistChildControlsCount">
      <summary>
            Gets the amount of child controls that must be persisted.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CreateNew">
      <summary>
            Overridden.
            Indicates that a new instance of this PersistableObject must be created when it is loaded from file.
            This is always true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockTop">
      <summary>
            Overridden. Indicates if this control can dock on the topside of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockLeft">
      <summary>
            Overridden. Indicates if this control can dock on the leftside of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockRight">
      <summary>
            Overridden. Indicates if this control can dock on the rightside of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockBottom">
      <summary>
            Overridden. Indicates if this control can dock on the bottomside of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockOnFormBorder">
      <summary>
            Indicates if this control can docked on the border of the owner Form.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockOnlyNearDockBar">
      <summary>
            Indicates that this control can only dock near other QDockingWindows and the QDockBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockOnOtherControlLeft">
      <summary>
            Overridden. Indicates if this control can dock on the leftside of an other Control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockOnOtherControlRight">
      <summary>
            Overridden. Indicates if this control can dock on the rightside of an other Control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockOnOtherControlTop">
      <summary>
            Overridden. Indicates if this control can dock on the topside of an other control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockOnOtherControlBottom">
      <summary>
            Overridden. Indicates if this control can dock on the bottomside of an other control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CanDockOnOtherControlTabbed">
      <summary>
            Overridden. Indicates if this control can dock in a tabbed way on an other control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.DragRectangleType">
      <summary>
            Overridden. Gets or sets the type of DragRectangle when this container is dragged.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.ColorScheme">
      <summary>
            Overridden. Gets or sets the QColorScheme of the <see cref="P:Qios.DevSuite.Components.QDockContainer.CurrentWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.Appearance">
      <summary>
            Overridden. Gets the QDockAppearance of the <see cref="P:Qios.DevSuite.Components.QDockContainer.CurrentWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.Text">
      <summary>
            Overridden. Gets or sets the text of the <see cref="P:Qios.DevSuite.Components.QDockContainer.CurrentWindow" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.MinimumClientSize">
      <summary>
            Overridden. Makes sure the MinimumClientSize is never smaller then
            the minimumsize of all the child controls.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.DockPosition">
      <summary>
            Overridden. Indicates the DockPosition on the form. This is different then the <see cref="P:Qios.DevSuite.Components.QDockContainer.Dock" /> property
            because this QDockPosition is still set when the parent Control is for example a <see cref="T:Qios.DevSuite.Components.QDockContainer" />.
            It sets all the DockPositions of the child controls.
            </summary>
      <remarks>
            This does not change the physical position of the QDockContainer.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.CurrentWindow">
      <summary>
            Overridden. Returns the CurrentWindow. This is the active QDockingWinow
            or the first QDockingWindow when found.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.UserIsSizingChildControl">
      <summary>
            Returns whether the user is sizing a child control on the QDockContainer
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.UserIsDraggingTabButton">
      <summary>
            Returns whether the user is dragging a button of the QTabStrip
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.Orientation">
      <summary>
            Gets or sets the Orientation of this QDockContainer, that can be Horizontal or Vertical.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.IsTabbed">
      <summary>
            Gets if this QDockContainer is tabbed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.Dock">
      <summary>
            Overridden. Sets the correct DockStyle of the QDockContainer. Sets the sizing properties
            of the QDockContainer based on the DockStyle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.BackColorPropertyName">
      <summary>
            Overridden. Returns the DockContainerBackground1 color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.BackColor2PropertyName">
      <summary>
            Overridden. Returns the DockContainerBackground2 color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockContainer.ActiveControl">
      <summary>
            Gets or sets the ActiveControl.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockContainerControlCollection">
      <summary>
            Defines the ControlCollection that will contain the child controls of a QDockContainer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainerControlCollection.#ctor(Qios.DevSuite.Components.QDockContainer)">
      <summary>
            Contrustor.
            </summary>
      <param name="owner">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainerControlCollection.Add(System.Windows.Forms.Control)">
      <summary>
            Overridden. Adds a control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainerControlCollection.Remove(System.Windows.Forms.Control)">
      <summary>
            Overridden. Removes a control.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockContainerAppearance">
      <summary>
            QDockContainerAppearance is an QAppearanceBase implementation for a <see cref="T:Qios.DevSuite.Components.QDockContainer" />.
            A QDockContainer is the parent control when multiple QDockingWindows are docked next to each other or in a tabbed form.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockAppearance">
      <summary>
            QDockContainerAppearance is an QAppearanceBase implementation for a <see cref="T:Qios.DevSuite.Components.QDockControl" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockContainerAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockOrientation">
      <summary>
            This enumeration is used to indicate the orientation of a <see cref="T:Qios.DevSuite.Components.QDockContainer" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockOrientation.None">
      <summary>
            No orientation (just one control)
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockOrientation.Tabbed">
      <summary>
            The QDockContainer is tabbed.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockOrientation.Vertical">
      <summary>
            The control is oriented vertically.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockOrientation.Horizontal">
      <summary>
            The control is oriented horizontally.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMenu">
      <summary>
            This class defines a menu that can be attached to controls (it contains the same functionality as <see cref="T:Qios.DevSuite.Components.QContextMenu" />), The menu that is used is a <see cref="T:Qios.DevSuite.Components.QCompositeWindow" />. Therefore it can be configured with <see cref="T:Qios.DevSuite.Components.QCompositeItem" /> instances.
            It is also possible to attach a custom <see cref="T:Qios.DevSuite.Components.QCompositeWindow" /> via the <see cref="P:Qios.DevSuite.Components.QCompositeMenu.CustomWindow" /> property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.CreateWindow">
      <summary>
            Creates the window.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.CreateToolTipConfiguration">
      <summary>
            Creates the ToolTipConfiguration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.CreateCompositeConfiguration">
      <summary>
            Creates the configuration for the composite.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ShouldSerializeToolTipConfiguration">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QCompositeMenu.ToolTipConfiguration" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ResetToolTipConfiguration">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QCompositeMenu.ToolTipConfiguration" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.CreateWindowConfiguration">
      <summary>
            Creates the configuration for the window.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ShouldSerializeCompositeConfiguration">
      <summary>
            Gets whether the property should be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ResetCompositeConfiguration">
      <summary>
            Resets the property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ShouldSerializeWindowConfiguration">
      <summary>
            Gets whether the property should be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ResetWindowConfiguration">
      <summary>
            Resets the property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ConfigureWindow">
      <summary>
            Configures the window before it is shown.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ShowMenu(System.Drawing.Point)">
      <summary>
            Shows the menu at the specified location.
            </summary>
      <param name="location">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ShowMenu(System.Drawing.Point,System.Windows.Forms.IWin32Window)">
      <summary>
            Shows the menu on the specified location with the specified owner.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ShowMenu(System.Drawing.Point,System.Windows.Forms.IWin32Window,Qios.DevSuite.Components.QCompositeActivationType)">
      <summary>
            Shows the menu on the specified location with the specified owner.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.HideMenu">
      <summary>
            Hides the menu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.ShowMenuOnNotifyIcon(System.Windows.Forms.NotifyIcon,System.Drawing.Point)">
      <summary>
            Shows the ContextMenu on a NotifyIcon.
            </summary>
      <param name="location">Contains the location (in screen coordinates).</param>
      <param name="notifyIcon">Contains the notifyIcon to show it on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message,System.Boolean)">
      <summary>
            Handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <param name="isGlobalFilter">Indicates whether this method was called from the global message filter.</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message,System.Boolean)">
      <summary>
            Handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <param name="isGlobalFilter">Indicates whether this method was called from the global message filter.</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.HasListenerForControl(System.Windows.Forms.Control)">
      <summary>
            Returns whether there already is a listener for a specified control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.AddListener(System.Windows.Forms.Control)">
      <summary>
            Adds control to the array of listeners and makes sure this QCompositeMenu gets visible when
            the user pressed the right mouse button on the control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.RemoveListener(System.Windows.Forms.Control)">
      <summary>
            Removes the control from the listeners array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.HasListenerForNotifyIcon(System.Windows.Forms.NotifyIcon)">
      <summary>
            Returns whether this QCompositeMenu has a listener for the specified NotifyIcon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.AddListener(System.Windows.Forms.NotifyIcon)">
      <summary>
            Adds a listener for the specified notifyIcon
            </summary>
      <param name="notifyIcon">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.RemoveListener(System.Windows.Forms.NotifyIcon)">
      <summary>
            Removes a listener for the specified notifyIcon.
            </summary>
      <param name="notifyIcon">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnItemSelected(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMenu.ItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnItemExpanded(Qios.DevSuite.Components.QCompositeExpandedEventArgs)">
      <summary>
            Raises the ItemExpanded event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnItemExpanding(Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs)">
      <summary>
            Raises the ItemExpanding event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnItemCollapsed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the ItemCollapsed event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnItemCollapsing(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the ItemCollapsing event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnPaintItem(Qios.DevSuite.Components.QCompositePaintStageEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMenu.PaintItem" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnItemActivating(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMenu.ItemActivating" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMenu.ItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnMenuShowing(Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMenu.MenuShowing" /> event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnMenuShowed(Qios.DevSuite.Components.QCompositeExpandedEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMenu.MenuShowed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnMenuClosing(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMenu.MenuClosing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.OnMenuClosed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMenu.MenuClosed" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenu.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes this menu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.CanExpand">
      <summary>
            Gets whether this window can be expanded.
            The default implementation returns only true when it has Items or a custom child window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.ToolTipConfiguration">
      <summary>
            Gets the QToolTipConfiguration for this QCompositeMenu
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.OwnerWindow">
      <summary>
            Gets or sets the OwnerWindow. The Window will be owned by this window if no owner is specified during show
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.OwnerForm">
      <summary>
            Gets or sets the OwnerForm. The Window be owned by the OwnerForm if no owner is specified during show.
            This must be set when the owning window has TopMost set to true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.SuppressDefaultContextMenu">
      <summary>
            Gets or sets whether the default Windows ContextMenu must be suppressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.Items">
      <summary>
            Gets the collection of QCompositeItems of this menu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.CompositeConfiguration">
      <summary>
            Gets the configuration used for the composite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.WindowConfiguration">
      <summary>
            Gets the configuration used for the window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.HandleShortcutKeys">
      <summary>
            Gets or sets whether shortcuts must be handled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.ShortcutScope">
      <summary>
            Gets or sets the ShortcutScope. This indicates when shorcuts should react.
            </summary>
      <remarks>
            When setting this value to Global, be carefull of the Shortcuts you chose. They get handled even when 
            an other application has an implementation for this shortcut.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.IsWindowCreated">
      <summary>
            Gets whether the window is created.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.IsWindowVisible">
      <summary>
            Gets whether the window is visible
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.Window">
      <summary>
            Gets the window. This property creates the window if it is not created yet.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMenu.CustomWindow">
      <summary>
            Gets or sets a custom window.
            When this is set, the items, colorscheme and configuration of the custom window are used instead of the items and this configuration.
            </summary>
      <remarks>
            A custom QCompositeWindow can only be used on ONE item. It cannot be assigned to multiple items.
            </remarks>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.ItemSelected">
      <summary>
            Gets raised when the QCompositeItemBase is selected
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.ItemExpanded">
      <summary>
            Gets raised when the item is expanded
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.ItemExpanding">
      <summary>
            Gets raised when the child container is expanding
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.ItemCollapsing">
      <summary>
            Gets raised when the item is collapsing
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.ItemCollapsed">
      <summary>
            Gets raised when the item is collapsed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.PaintItem">
      <summary>
            Gets raised when a layer of the QCompositeItem is painted
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.ItemActivating">
      <summary>
            Gets raised when the QCompositeItemBase is activating
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.ItemActivated">
      <summary>
            Gets raised when the QCompositeItemBase is activated
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.MenuShowing">
      <summary>
            Gets raised when the menu is about to show
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.MenuShowed">
      <summary>
            Gets raised when the menu is shown.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.MenuClosing">
      <summary>
            Gets raised when the menu is about to close.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMenu.MenuClosed">
      <summary>
            Gets raised when the menu is closed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeNavigationFilter">
      <summary>
            Defines a filter for QComposite items for navigation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeNavigationFilter.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeNavigationFilter.#ctor(Qios.DevSuite.Components.QCompositeNavigationFilterOptions)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeNavigationFilter.#ctor(Qios.DevSuite.Components.QCompositeNavigationFilterOptions,System.Windows.Forms.Keys)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeNavigationFilter.Options">
      <summary>
            Gets or sets the options.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeNavigationFilter.PartVisibilitySelection">
      <summary>
            Gets the visibility selection for the parts.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeNavigationFilter.MustBeEnabled">
      <summary>
            Gets wether the item must be enabled
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeNavigationFilter.MustHavePressedState">
      <summary>
            Gets wether the item must be enabled
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeNavigationFilter.MustBeVisible">
      <summary>
            Gets whether the item must be visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeNavigationFilter.MustMatchShortcut">
      <summary>
            Gets whether the item must match the specified hotkey.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeNavigationFilter.Shortcut">
      <summary>
            Gets or sets the Shortcut keys.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeNavigationFilterOptions">
      <summary>
            Defines options for the QCompositeNavigationFilter.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeNavigationFilterOptions.None">
      <summary>
            No options.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeNavigationFilterOptions.Visible">
      <summary>
            Items must be visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeNavigationFilterOptions.VisibleForShortcut">
      <summary>
            Items must be visible for shortcut. Hidden items because of phyiscal constraints are included.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeNavigationFilterOptions.Enabled">
      <summary>
            Items must be enabled.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeNavigationFilterOptions.HasPressedState">
      <summary>
            Items must have a pressed state.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeNavigationFilterOptions.MatchShortcut">
      <summary>
            Must match the shortcut.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QWin32Window">
      <summary>
            Is an IWin32Window implementation of a NativeWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWin32Window.#ctor(System.Windows.Forms.NativeWindow)">
      <summary>
            Creates a new QWin32Window
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QWin32Window.Handle">
      <summary>
            Gets the Handle
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QWin32WindowWrapper">
      <summary>
            Wraps a handle into a IWin32Window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QWin32WindowWrapper.#ctor(System.IntPtr)">
      <summary>
            Constructor creates the wrapper with the specified handle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QWin32WindowWrapper.Handle">
      <summary>
            Gets the handle
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QImageCache">
      <summary>
            The QImageCache is used to cache converted images, like bitmaps of icons, or grayscaled bitmaps.
            This is mainly used by methods of <see cref="T:Qios.DevSuite.Components.QControlPaint" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCache.ExcludeFromCleanup(System.Drawing.Image)">
      <summary>
            Excludes an image from cleanup. This can be usefull when an instance from the image in a cache
            is saved and needed several times. Use <see cref="M:Qios.DevSuite.Components.QImageCache.IncludeInCleanup(System.Drawing.Image)" /> to include the image
            in the cleanup again.
            </summary>
      <param name="image">The cached image in the cache</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCache.IncludeInCleanup(System.Drawing.Image)">
      <summary>
            Includes the image in the cleanup when it was excluded by <see cref="M:Qios.DevSuite.Components.QImageCache.ExcludeFromCleanup(System.Drawing.Image)" />
            in the cleanup again.
            </summary>
      <param name="image">The cached image in the cache</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCache.StoreImage(Qios.DevSuite.Components.QImageCacheKey,System.Drawing.Image)">
      <summary>
            Stores an Image in the cache under the specified key.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCache.FindImage(Qios.DevSuite.Components.QImageCacheKey)">
      <summary>
            Tries to find an image in the ImageCache.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCache.ClearCache(System.Boolean)">
      <summary>
            Clears all the entries in the cache. if ignoreExclusions is true 
            the images excluded via <see cref="M:Qios.DevSuite.Components.QImageCache.ExcludeFromCleanup(System.Drawing.Image)" /> are also removed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCache.Enabled">
      <summary>
            Gets or sets whether the QImageCache is enabled. When this is disabled it is not used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCache.DisposeImagesWhenClearingCache">
      <summary>
            Obsolete. Not used anymore. Ignore this property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCache.MaximumSize">
      <summary>
            Gets or sets the maximum count of images the cache is allowed to contain.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCache.CurrentSize">
      <summary>
            Gets the current size.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QImageCacheKey">
      <summary>
            Defines the keys used by <see cref="T:Qios.DevSuite.Components.QImageCache" /> to store images
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCacheKey.#ctor(Qios.DevSuite.Components.QImageCacheType,System.Drawing.Icon,System.Object[])">
      <summary>
            Creates a key from the specified sourceIcon and conversionType
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCacheKey.#ctor(Qios.DevSuite.Components.QImageCacheType,System.Drawing.Image,System.Object[])">
      <summary>
            Creates a key from the specified sourceBitmap and conversionType
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCacheKey.#ctor(Qios.DevSuite.Components.QImageCacheType,System.Int32,System.Object[])">
      <summary>
            Creates a key from the specified sourceImageHash and conversionType
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCacheKey.GetHashCode">
      <summary>
            Returns the hashCode of this QImageCacheKey.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QImageCacheKey.Equals(System.Object)">
      <summary>
            Gets whether this QImageCacheKey equals the specified object. This is more accurate then
            comparing hashkeys because 2 different keys can generate the same hash. This is used by the
            Hashtable.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCacheKey.SourceImageHash">
      <summary>
            Gets the hashcode of the source image
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCacheKey.SourceImage">
      <summary>
            Gets the SourceImage
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCacheKey.SourceIcon">
      <summary>
            Gets the SourceIcon
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCacheKey.ConversionType">
      <summary>
            Gets the ConversionType of the source image
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCacheKey.ParametersHashes">
      <summary>
            Gets the Hashes of the parameters
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QImageCacheKey.Empty">
      <summary>
            Returns the Empty QImageCachekey
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QImageCacheType">
      <summary>
            Defines the type of image that is stored in a <see cref="T:Qios.DevSuite.Components.QImageCache" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageCacheType.None">
      <summary>
            No image is stored;
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageCacheType.BitmapOfIcon">
      <summary>
            The stored image is a bitmap converted from an icon.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageCacheType.RotatedBitmapOfBitmap">
      <summary>
            The stored image is a rotated bitmap of a bitmap.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageCacheType.ColorizedBitmapOfBitmap">
      <summary>
            The stored image is a colorized bitmap of a bitmap.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageCacheType.ShadedBitmapOfBitmap">
      <summary>
            The stored image is a shaded bitmap of a bitmap
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorSchemeScope">
      <summary>
            Determines the scope of the QColorScheme
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeScope.Control">
      <summary>
            Only show the colors of the control
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeScope.ControlAndRelated">
      <summary>
            Show the colors of the control and related controls (QBalloon for example)
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSchemeScope.All">
      <summary>
            Show all colors
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorSaveType">
      <summary>
            Defines the save type for the <see cref="M:Qios.DevSuite.Components.QColorSchemeBase.SaveToXml(System.String,Qios.DevSuite.Components.QColorSaveType)" /> method.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSaveType.AllColors">
      <summary>
            All colors are saved.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSaveType.ChangedColors">
      <summary>
            All changed colors are saved.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorSaveType.ChangedThemeColors">
      <summary>
            All changed themecolors are saved.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartLayoutContext">
      <summary>
            Defines a context to layout parts in
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutContext.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutContext.CreateFromControl(System.Windows.Forms.Control)">
      <summary>
            Creates a QPartLayoutContext from the specified control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutContext.Push">
      <summary>
            Pushes the current context to make room for new properties.
            Note: you don't need to set all the properties again, only the one that differs from the 
            previous value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutContext.Pull">
      <summary>
            Pulls the previos context so that it is the current context.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutContext.Dispose(System.Boolean)">
      <summary>
            Disposes the object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutContext.Dispose">
      <summary>
            Disposes the object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutContext.Finalize">
      <summary>
            Finalizer
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutContext.PreviousContext">
      <summary>
            Gets the previous context
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutContext.AdditonalProperties">
      <summary>
            Gets or sets any additional properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutContext.Graphics">
      <summary>
            Gets or sets the Graphics to calculate on
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutContext.Font">
      <summary>
            Gets or sets the Font that is used to measure strings with.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutContext.StringFormat">
      <summary>
            Gets or sets the StringFormat to measure strings with.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutContext.VisibilitySelection">
      <summary>
            Gets or sets the visibility selection that should be used on the layout.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutContext.CalculatePartSizeOptions">
      <summary>
            Gets or sets additional CalculatePartSize options. Don't specify PeekOnly when performing a complete layout.
            This is only intended for peeking with <see cref="M:Qios.DevSuite.Components.IQPartLayoutEngine.CalculatePartSize(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutContext)" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMouseAction">
      <summary>
            Defines various mouse actions.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMouseAction.None">
      <summary>
            Defines no mouse action.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMouseAction.Down">
      <summary>
            The mouse button was pressed.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMouseAction.DoubleClick">
      <summary>
            The mousebutton was pressed twice.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMouseAction.Up">
      <summary>
            The mouse button was released.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMouseAction.Move">
      <summary>
            The mouse was moved.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QTabPageTypeConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QTabPage" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabPageTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QTabPage" /> to a given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabPageTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QTabPage" /> to the given destinationType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QShapeDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QShape" /> component.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
            Add additional design properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesigner.BackgroundImage">
      <summary>
            Gets or sets the design backgroundImage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesigner.BackgroundImageScale">
      <summary>
            Gets or sets the design background image scale.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesigner.BackgroundImageOpacity">
      <summary>
            Gets or sets the design background image opacity.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesigner.BackgroundImagePosition">
      <summary>
            Gets or sets the design background image position.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesigner.SmoothingMode">
      <summary>
            Gets or sets the design background image position.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesigner.Verbs">
      <summary>
            Overridden. Gets the verbs.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QRibbonPageDesigner">
      <summary>
            Defines the designer for QRibbonPageDesigner.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonPageDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonPageDesigner.GetCreationTypes">
      <summary>
            Overridden. Gets the types this designer can create.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonPageDesigner.SelectionRules">
      <summary>
            Overridden. Returns the SelectionRules.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QRibbonItemDesigner">
      <summary>
            Defines the designer for QRibbonItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonItemDesigner.GetCreationTypes">
      <summary>
            Overridden. Gets the types this designer can create.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QRibbonGroupDesigner">
      <summary>
            Defines the designer for QRibbonGroups.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonGroupDesigner.GetCreationTypes">
      <summary>
            Overridden. Gets the types this designer can create.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QRibbonApplicationButtonDesigner">
      <summary>
            Defines the designer for QRibbonApplicationButton
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonApplicationButtonDesigner.GetCreationTypes">
      <summary>
            Overridden. Gets the types this designer can create.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCustomToolWindowDesigner">
      <summary>
            A Designer for the QCustomToolWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCustomToolWindowDesigner.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCustomToolWindowDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCustomToolWindowDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QControlComponentDesigner">
      <summary>
            A ComponentDesigner for the QControlComponent and derived classes
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QControlComponentDesigner.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QControlComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QControlComponentDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupBase">
      <summary>
            Defines the base class for <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup" /> and <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupBase.ClearCachedParents">
      <summary>
            Overridden. Clears the cached parents.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupBase.SetDisplayParent(Qios.DevSuite.Components.IQManagedLayoutParent)">
      <summary>
            Overridden. Sets the DisplayParent
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupBase.SetConfigurationBaseProperties(System.Boolean)">
      <summary>
            Sets the configuraton base properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupBase.Items">
      <summary>
            Gets the collection of QRibbonItems of this group.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupBase.RibbonPanel">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" /> if it is there.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupBase.RibbonPageComposite">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite" /> if it is there.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemGroupBase.LaunchBar">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" /> if this item is on a RibbonLaunchBar
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem">
      <summary>
            Defines a QRibbonItem that default contains a <see cref="T:Qios.DevSuite.Components.QInputBox" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItem">
      <summary>
            Defines one item on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItem.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItem.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItem.GetDefaultRibbonItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,Qios.DevSuite.Components.QComposite,Qios.DevSuite.Components.IQColorRetriever)">
      <summary>
            Gets the default color set for this type of item based on the state for from the specified retriever.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItem.GetDefaultRibbonItemBarItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,Qios.DevSuite.Components.QComposite,Qios.DevSuite.Components.IQColorRetriever)">
      <summary>
            Gets the default color set for ribbon items on a RibbonItemBar
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItem.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the ItemColorSet for this QRibbonItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItem.ClearCachedParents">
      <summary>
            Clears the cached parents
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItem.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItem.SetDisplayParent(Qios.DevSuite.Components.IQManagedLayoutParent)">
      <summary>
            Overridden. Sets the DisplayParent
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItem.SetConfigurationBaseProperties(System.Boolean)">
      <summary>
            Sets the configuraton base properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItem.RibbonItemBar">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar" /> if this item is on a RibbonItemBar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItem.LaunchBar">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar" /> if this item is on a RibbonLaunchBar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItem.RibbonPanel">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" /> if it is there.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItem.RibbonPageComposite">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPageComposite" /> if it is there.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItem.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem.CreateControl">
      <summary>
            Creatse a new <see cref="T:Qios.DevSuite.Components.QInputBox" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem.DefaultContentType">
      <summary>
            Overridden. Gets the default ContentType
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem.ContentType">
      <summary>
            Overridden. Gets or sets the ContentType. For this item this is control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem.Control">
      <summary>
            Overridden. Cannot set the control on this item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem.InputBox">
      <summary>
            Gets the InputBox
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonInputBoxItem.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QStatusBarPanel">
      <summary>
            The QStatusBarPanel is a panel that is used on a <see cref="T:Qios.DevSuite.Components.QStatusBar" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanel.#ctor">
      <summary>
            Default Constructor. Creates a new QStatusBarPanel.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanel.ShouldSerializeCustomAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QStatusBarPanel.CustomAppearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanel.ResetCustomAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QStatusBarPanel.CustomAppearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanel.Dispose(System.Boolean)">
      <summary>
            Overridden. disposes the QStatusBarPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.IconAlignment">
      <summary>
            Gets or sets the alignment of the icon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.Icon">
      <summary>
            Gets or sets the Icon of the QStatusBarPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.Text">
      <summary>
            Gets or sets the text of the QStatusBarpanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.ToolTipText">
      <summary>
            Gets or sets the ToolTipText of the QStatusBarPanel. This must contain Xml as used with <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.UsedToolTipText">
      <summary>
            Gets the actual used ToolTipText. This depends on the <see cref="P:Qios.DevSuite.Components.QStatusBarPanel.ToolTipText" /> property and the Text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.Alignment">
      <summary>
            Gets or sets the alignment of the text on the QStatusBarPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.AutoSize">
      <summary>
            Gets or sets the type of autosize of the QStatusBarPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.Bounds">
      <summary>
            Gets the bounds of the QStatusBarPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.Parent">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QStatusBar" />  this QStatusBarPanel belongs to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.MinWidth">
      <summary>
            Gets or sets the minimum width of the QStatusBarPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.RequestedWidth">
      <summary>
            Gets or sets the requested width. This width is used when the
            <see cref="P:Qios.DevSuite.Components.QStatusBarPanel.AutoSize" /> property is set to <b>None</b></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.Width">
      <summary>
            Gets or sets the Width of the QStatusBarPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.IsDisposed">
      <summary>
            Gets whether this QStatusBarPanel is disposed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.Enabled">
      <summary>
            Gets or sets whether the text of this QStatusBarPanel is enabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.Padding">
      <summary>
            Gets or sets the padding between the contents and the edge of the QStatusBarPanel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.AppearanceType">
      <summary>
            Gets or sets the AppearanceType of the Panel. If the type is set to <b>Custom</b> the <see cref="P:Qios.DevSuite.Components.QStatusBarPanel.CustomAppearance" /> is used.
            Else the <b>PanelAppearance</b> property of the parent QStatusBar is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.CustomAppearance">
      <summary>
            Gets or sets the custom appearance of this QStatusBarPanel. This property is used when the <see cref="P:Qios.DevSuite.Components.QStatusBarPanel.AppearanceType" /> is set to <b>Custom</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanel.Appearance">
      <summary>
            Gets the used <see cref="T:Qios.DevSuite.Components.QAppearance" />. This depends on the <see cref="P:Qios.DevSuite.Components.QStatusBarPanel.AppearanceType" />.
            If this type is set to <b>Custom</b>, the CustomAppearance returns. When this is set to <b>Inherited</b>,
            The PanelAppearance of the <see cref="T:Qios.DevSuite.Components.QStatusBar" /> is returned.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QButtonAppearance">
      <summary>
            This class is used by controls to define their button appearance. It inherits from <see cref="T:Qios.DevSuite.Components.QAppearanceBase" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QButtonAppearance.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QButtonStyle">
      <summary>
            Is used by <see cref="T:Qios.DevSuite.Components.QShapedWindowConfiguration" /> to indicate what type of MDI buttons are used.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QButtonStyle.Windows">
      <summary>
            Default Windows buttons
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QButtonStyle.Custom">
      <summary>
            Custom buttons
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextConfiguration">
      <summary>
            Contains configuration properties for objects that use a <see cref="T:Qios.DevSuite.Components.QMarkupText" /> object, like <see cref="T:Qios.DevSuite.Components.QMarkupLabel" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.PropMarkupPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.PropBiggerSmallerStep">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.PropTextAlign">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.PropWrapText">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.PropMaximumSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.PropAdjustHeightToTextSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.PropAdjustWidthToTextSize">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.PropDrawTextOptions">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.PropCanFocus">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the ConfigurationChanged event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupTextConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextConfiguration.CanFocus">
      <summary>
            Gets or sets if the user can focus the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextConfiguration.MarkupPadding">
      <summary>
            Gets or sets the padding of the MarkupLabel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextConfiguration.BiggerSmallerStep">
      <summary>
            Gets or sets the step that must be taken when a Bigger or Smaller tag is passed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextConfiguration.TextAlign">
      <summary>
            Gets or sets the alignment of the text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextConfiguration.WrapText">
      <summary>
            Gets or sets whether the text must be wrapped.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextConfiguration.MaximumSize">
      <summary>
            Gets or sets the maximumSize. If this is set to -1 the maximumSize is automatically determined based
            on the Size and the the AdjustHeight and Width properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextConfiguration.AdjustHeightToTextSize">
      <summary>
            Gets or sets whether the height of the QSMartLabel must be adjusted to the size of the text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextConfiguration.AdjustWidthToTextSize">
      <summary>
            Gets or sets whether the width of the QSMartLabel must be adjusted to the size of the text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextConfiguration.DrawTextOptions">
      <summary>
            Gets or sets additional options for drawing text.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingMenuConfiguration">
      <summary>
            Contains configuration properties for instances of <see cref="T:Qios.DevSuite.Components.QFloatingMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenuConfiguration.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFloatingMenuConfiguration.RetrieveDefaultHasChildItemsMask">
      <summary>
            Overridden. Returns the new default child item mask.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.ShowToolTips">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> should display tooltips.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.TopMost">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> should always be on top.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.AnimateMenu">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> should use animation, this is ignored when the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.ShowBackgroundShade">
      <summary>
            Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> should contain a BackgroundShade. This is ignored when the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.UsedShowBackgroundShade">
      <summary>
            Gets  whether the background shade is drawn. This depends on whether <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> is true
            or the <see cref="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.ShowBackgroundShade" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.AnimateTime">
      <summary>
            Gets or sets the time that is used for animation (in milliseconds)
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.AnimationType">
      <summary>
            Gets or sets the type of animation to use. This is ignored when the <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> is true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.UsedAnimationType">
      <summary>
            Gets the type of animation that is used based on several settings like <see cref="P:Qios.DevSuite.Components.QCommandConfiguration.InheritWindowsSettings" /> and <see cref="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.AnimationType" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.IconBackgroundVisible">
      <summary>
            Gets or sets if the icon background should be shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.UsedDepersonalizeMenuMask">
      <summary>
            Gets the used DepersonalizeMenuMask. This depends on whether the <see cref="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.DepersonalizeMenuMask" /> is set.
            If it is not set the default one is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.DepersonalizeMenuMask">
      <summary>
            Contains the base image that is used to show at the bottom of a <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> when it has MenuItems that have VisibleWhenPersonalized set to false.
             In the Mask the Color Red is replaced by the TextColor and Black till white are replaced by the DepersonalizeColors Color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.HasMoreItemsDownMask">
      <summary>
            Gets or sets the base image that is used when there are more menu items than visible. This is the case when the <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> does not fit on the screen vertically.
            In the Mask the Color Red is replaced by the TextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.HasMoreItemsUpMask">
      <summary>
            Gets or sets the base image that is used when there are more menu items than visible. This is the case when the <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> does not fit on the screen vertically.
            In the Mask the Color Red is replaced by the TextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.FloatingMenuPadding">
      <summary>
            Gets or sets the padding for the FloatingMenu. This padding is the space between the items and the edge of the menu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.ShortcutLayout">
      <summary>
            Gets or sets the ShorcutLayout. This defines if the shortcut is right-aligned in the same
            column as the Title or in a separate column.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.UsedHasMoreItemsDownMask">
      <summary>
            Gets the used HasMoreItemsDownMask. This depends on whether the <see cref="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.HasMoreItemsDownMask" /> is set.
            If it is not set the default one is used. 
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.UsedHasMoreItemsUpMask">
      <summary>
            Returns the used HasMoreItemsUpMask. This depends on whether the <see cref="P:Qios.DevSuite.Components.QFloatingMenuConfiguration.HasMoreItemsUpMask" /> is set.
            If it is not set the default one is used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFloatingMenuShortcutLayout">
      <summary>
            Defines the Layout of the shortcut on the FloatingMenu. This can be in a separate column or in the title column.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingMenuShortcutLayout.InSeparateColumn">
      <summary>
            Indicates that the shortcut is written in a separate column. This way the shortcuts and the titles
            will never overlap.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFloatingMenuShortcutLayout.InTitleColumn">
      <summary>
            Indicates that the shortcut is written in the title column. This saves space. When you have for example
            an item with the name <i>Long Text Item</i> and you have an item <i>Short</i> with a shortcut <i>Ctrl+K</i>, the Ctrl+K
            will overlap the text <i>Long Text Item</i></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMarkupText">
      <summary>
            Defines one item in a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.#ctor(Qios.DevSuite.Components.QCompositeItemCreationOptions)">
      <summary>
            Constructor.
            </summary>
      <param name="options">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeMarkupText
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.HitTest(System.Int32,System.Int32)">
      <summary>
            Overridden. Returns the BoundsCustom when it was on the bounds of an element that requires ReapplyAttributesOnStateChange
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.HandleAncestorEnabledChanged">
      <summary>
            Is called when an ancestor is set enabled / disabled. This sets the markup text enabled state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.HandleMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the mouse move.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.HandleMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the mouse down.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.HandleMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the Mouse up
            </summary>
      <param name="e">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Handles a paint stage.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.Clone">
      <summary>
            Handles the cloning.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.OnElementMouseEnter(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseEnter" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.OnElementMouseLeave(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseLeave" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.OnElementMouseDown(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.OnElementMouseUp(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.OnElementMouseClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMarkupText.OnElementLinkClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementLinkClick" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseEnter">
      <summary>
            Occurs when the mouse enters an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseLeave">
      <summary>
            Occurs when the mouse leaves an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseDown">
      <summary>
            Occurs when the user presses the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseUp">
      <summary>
            Occurs when the user releases the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementMouseClick">
      <summary>
            Occurs when the user clicks on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QCompositeMarkupText.ElementLinkClick">
      <summary>
            Occurs when the user clicks on a link.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupText.Cursor">
      <summary>
            Overridden. Gets or sets the cursor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupText.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupText.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupText.MarkupText">
      <summary>
            Gets or sets the Markup text for this QCompositeMarkupText. The formatting happens in XML.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupText.CustomStyles">
      <summary>
            Gets the collection with custom styles. This can be used to handle custom tags or handle default tags
            different than the regular behavior.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupText.MarkupTextObject">
      <summary>
            Contains the inner QMarkupText object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupText.LayoutEngine">
      <summary>
            Overridden. Gets the part layout engine. Returns the QPartMarkupTextLayoutEngine when the engine is default.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeMarkupText.OriginalItem">
      <summary>
            New. If this is a cloned item, this propery contains the original item. You can reset (and thereby unlinking) this
            item by calling RemoveCloneLink on the original item.
            </summary>
      <remarks>
            When this is set, the events on the Original item are also raised.
            </remarks>
    </member>
    <member name="T:Qios.DevSuite.Components.QGlobalFont">
      <summary>
            Defines the Font for all the controls that have their FontScope set to Global. With this class, that is defined in Qios.DevSuite 2.0.0.70,
            It is possible to let all the controls use another font as the Default windows font. Ofcouse this QGlobalFont can also inherit from Windows.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalFont.ShouldSerializeFont">
      <summary>
            Gets whether the font should be serialized
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalFont.ResetFont">
      <summary>
            Resets the font.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalFont.OnSystemFontChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QGlobalFont.SystemFontChanged" /> event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QGlobalFont.OnFontChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QGlobalFont.FontChanged" /> event
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGlobalFont.WeakEventHandlers">
      <summary>
            Gets or sets whether weak event handlers are used. Don't set this to false. Every control registers to this event
            and they won't get cleaned up if this is false.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QGlobalFont.SystemFontChanged">
      <summary>
            Gets raised when the System Font theme is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QGlobalFont.FontChanged">
      <summary>
            Gets raised when the Font is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGlobalFont.Instance">
      <summary>
            Contains the instance of QGlobalFont.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGlobalFont.Font">
      <summary>
            Gets or sets the Font that should be used. When the Font is set, InheritFromWindows is turned off.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QGlobalFont.InheritFromWindows">
      <summary>
            Gets or sets wether the font must inherit from Windows.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartFlowLayoutEngine">
      <summary>
            Defines the class that lays-out <see cref="T:Qios.DevSuite.Components.IQPart" /> objects in a flow order.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartFlowLayoutEngine.ApplyConstraintsToCollection(Qios.DevSuite.Components.IQPart,System.Drawing.Size,System.Drawing.Size,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Overridden. Applies the constraints to the collection for the QPartFlowLayoutEngine.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartFlowLayoutEngine.LayoutPartCollectionHorizontal(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Lays out a part collection in the horizontal direction.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartFlowLayoutEngine.LayoutPartCollectionVertical(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext)">
      <summary>
            Lays out a part collection in the vertical direction.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartFlowLayoutEngine.Default">
      <summary>
            Gets the default static engine.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartFlowLayoutEngine.QPartFlowLayoutStorage">
      <summary>
            A helper class for calculating flow layout
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartFlowLayoutEngine.QPartFlowLayoutStorage.#ctor(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPartCollection,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartDirection,Qios.DevSuite.Components.QPartFlowLayoutEngine)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartFlowLayoutEngine.QPartFlowLayoutStorage.CleanUp">
      <summary>
            When the layout procedure is done, only the results are needed, so clear some variables
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartFlowLayoutEngine.QPartFlowLayoutStorage.PartFitsInRow(Qios.DevSuite.Components.IQPart)">
      <summary>
            Determines if the part fits in the current row
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartFlowLayoutEngine.QPartFlowLayoutStorage.PartAddToRow(Qios.DevSuite.Components.IQPart,System.Int32)">
      <summary>
            Add the part to the row, supplying the part and the index of the part
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartFlowLayoutEngine.QPartFlowLayoutStorage.CloseRow">
      <summary>
            Closes the current row and performs the layout on its parts. It returns the size of the layed out content.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QControlStyles">
      <summary>
            Is used by controls to set additional flags for the behavior of controls. Use
            this enumeration to set appropiate flags for the controls that have the <b>SetQControlStyle</b> method like <see cref="T:Qios.DevSuite.Components.QContainerControlBase" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QControlStyles.None">
      <summary>
            No styles defined.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QControlStyles.DoNotCopyBitsOnUserSize">
      <summary>
            Does not copy the bits when the user sizes. This flag is usefull when you paint right aligned.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QControlStyles.DoNotNotifyChangeOnUserSize">
      <summary>
            Does not notify the other Controls of the userSize. This increases performance. Make sure you repaint
            a possible parent control in the UserSized event.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QControlStyles.DoNotRedrawOnUserSize">
      <summary>
            Does not redraw the control on the UserSize. This increases performance. Make sure you repaint
            the control and the underlying controls in the UserSized event.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QControlStyles.DoNothingOnUserSize">
      <summary>
            Combination of DoNotCopyBitsOnUserSize, DoNotNotifyChangeOnUserSize and DoNotRedrawOnUserSize flag.
            This flag indicates that the control is not redrawn, bits are not copied and other controls are not notified
            when the user sizes the the Control. This can increase performance when you want to recalculate the layout 
            of the ChildControls when the user resizes the control.
            When you set this style be sure to redraw the Control in the <b>UserSized</b> event and repaint
            possible parent controls.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QControlStyles.NeverCopyBitsOnBoundsChange">
      <summary>
            Indicates that bits should never be copied when the bounds change.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QControlStyles.NeverRedrawOnBoundsChange">
      <summary>
            Indicates that there should be never redrawn on a bounds change
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QControlStyles.DoNotInvalidateOnScroll">
      <summary>
            Does not invalidate the control when the user scrolls. 
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QToolBarDesigner">
      <summary>
            Defines a ComponentDesigner for the <see cref="T:Qios.DevSuite.Components.QToolBar" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QStatusBarDesigner">
      <summary>
            Defines a Designer for the <see cref="T:Qios.DevSuite.Components.QStatusBar" /> type.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QNoResizeControlDesigner">
      <summary>
            This class defines a base Designer for controls that cannot be resized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QNoResizeControlDesigner.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QNoResizeControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QNoResizeControlDesigner.SelectionRules">
      <summary>
            Overridden. Returns the SelectionRules.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QNoResizeControlDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStatusBarDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Overridden. Initializes the Designer.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QStatusBarDesigner.Dispose(System.Boolean)">
      <summary>
            Overridden, Disposes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QStatusBarDesigner.AssociatedComponents">
      <summary>
            Overridden. Returns the AssociatedComponents for the <see cref="T:Qios.DevSuite.Components.QStatusBar" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QShapeDesignerForm">
      <summary>
            Defines the editor for for <see cref="T:Qios.DevSuite.Components.QShape" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeDesignerForm.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapeDesignerForm.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesignerForm.BaseShapes">
      <summary>
            Gets the collection with base shapes
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesignerForm.CurrentShape">
      <summary>
            Gets or sets the current shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesignerForm.SelectedShape">
      <summary>
            Gets the shape that is selected in the ComboBox.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapeDesignerForm.SuspendPopulation">
      <summary>
            Suspends the population functions
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeMenuExtender">
      <summary>
            Is used by the <see cref="T:Qios.DevSuite.Components.Design.QCompositeMenuDesigner" /> to show the QCompositeMenu property in the properties list for all the other Controls and NotifyIcons on the site.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuExtender.#ctor">
      <summary>
            DefaultConstructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuExtender.CanExtend(System.Object)">
      <summary>
            Implements the IExtenderProvider.CanExtend method, indicates which object it can extend
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuExtender.Merge(Qios.DevSuite.Components.Design.QCompositeMenuExtender)">
      <summary>
            Merges this extender with the provided extender.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuExtender.GetComponents(Qios.DevSuite.Components.QCompositeMenu)">
      <summary>
            Returns the components that are attached to the QCompositeMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuExtender.GetQCompositeMenu(System.ComponentModel.IComponent)">
      <summary>
            Provides the QCompositeMenu getter for the extended QCompsiteMenu property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeMenuExtender.SetQCompositeMenu(System.ComponentModel.IComponent,Qios.DevSuite.Components.QCompositeMenu)">
      <summary>
            Provides the QCompositeMenu setter for the extended QCompositeMenu property.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost">
      <summary>
            Implements a caption for a Form. This is usually used in combination with a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonForm" /> and a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.CreateComposite">
      <summary>
            Overridden. Creates the Composite.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.OnVisibleChanged(System.EventArgs)">
      <summary>
            Overridden. Handles a visibility change.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Handles layout of the QRibbonCaption.
            </summary>
      <param name="levent">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.LaunchBarComposite">
      <summary>
            Gets the composite as a QRibbonLaunchBarHostComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.Configuration">
      <summary>
            Gets the configuration of this QRibbonLaunchBarHost.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.LaunchBarAreaPart">
      <summary>
            Gets the LaunchBar part of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.ItemAreaPart">
      <summary>
            Gets the ItemArea part of the QRibbonLaunchBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.AutoHide">
      <summary>
            Gets or sets whether this control must be hidden when there are no items on it.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.LaunchBar">
      <summary>
            Gets or sets the LaunchBar that must be hosted on this QRibbonLaunchBarHost.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.PaintTransparentBackground">
      <summary>
            Overridden. Default value is false here.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.Items">
      <summary>
            Overridden. Gets the Items of this QRibbonLaucnBar. Those items are added to the ItemsArea part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.AssociatedComponents">
      <summary>
            Gets the associated components.
            </summary>
      <remarks>
            The list instance shouldn't be the same as the the Items instance, because overrides may add new designable items
            to the list.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.BackColorPropertyName">
      <summary>
            Overridden. Gets the name of the color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.BackColor2PropertyName">
      <summary>
            Overridden. Gets the name of the color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost.BorderColorPropertyName">
      <summary>
            Overridden. Gets the name of the color.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup">
      <summary>
            Defines a group of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" />. This group is just a logical group. It can be oriented Horizontal or vertical.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup.CreateConfiguration">
      <summary>
            Overridden. Creates the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup.SetConfigurationBaseProperties(System.Boolean)">
      <summary>
            Sets the base of the configurationProperties based on whether this group has a RibbonPanel and is drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonForm">
      <summary>
            This <see cref="T:System.Windows.Forms.Form" /> can be used as an applicationForm with shaped edges. It usually is used with a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" />
            and a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.CreateAppearanceInstance">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.ShouldSerializeColorScheme">
      <summary>
            Returns whether the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.ColorScheme" /> changes from its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.ResetColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.ColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.ShouldSerializeAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.Appearance" /> changes from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.ResetAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.Appearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.PointToControl(System.Drawing.Point)">
      <summary>
            Calculates the actual point on the control from the Point in ClientCoordinates.
            Use this method to determine where the Cursor is above the non client areas.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.SetClientSizeCore(System.Int32,System.Int32)">
      <summary>
            Overridden. Sets the clientSizeCore.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.OnSizeChanged(System.EventArgs)">
      <summary>
            Handles a ClientSize changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden. Sets the bounds.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.GetRectangleToUseForRegion(System.Drawing.Size)">
      <summary>
            Gets the rectangle to use for the region and to paint the QShape. This depends on the border.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.GetDefaultFrameBorderMargin">
      <summary>
            Gets the default frame border margin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.RefreshNoClientArea">
      <summary>
            Redraws the NoClientArea.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.RefreshNoClientArea(System.Boolean)">
      <summary>
            Redraws the NoClientArea. children indicates if the NoClientArea 
            of the children should also be refreshed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.SetVisibleCore(System.Boolean)">
      <summary>
            Handles a change of visibility.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles windows messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.GetColorSet">
      <summary>
            Gets the used color set
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Handles the OnPaintBackground.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbonForm.PaintNonClientArea" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonForm.OnWindowsXPThemeChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbonForm.WindowsXPThemeChanged" /> event.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.Appearance">
      <summary>
            Gets or the Apperance that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.AppearanceSimple">
      <summary>
            Gets or sets whether Simple appearance must be used. When this is true,
            no advanced gradients are drawn. Just a plain background color and a plain border.
            Keep this true for increased resizing performance.
            </summary>
      <remarks>
            This property is there because a Form is usually filled with other controls.
            Therefore it is pointless to draw advanced gradients. The resizing features
            of the Form increase significantly when this is true.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.BackgroundImageAlign">
      <summary>
            Gets or sets the alignment of the BackgroundImage for this QContainerControl.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.BackgroundImageOffset">
      <summary>
            Gets or sets a relative offset to add to the BackgroundImage position.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.BackColor">
      <summary>
            Overridden. Gets the BackColor of this Control. Use the <see cref="P:Qios.DevSuite.Components.QColorScheme.RibbonFormBackground1" /> to set it.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.AutoScroll">
      <summary>
            Overridden. Cannot be used on a QRibbonForm. When you want to scroll the content, add an additional container-like Control
            to the Form and set its Dock to Fill.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.AutoScrollMinSize">
      <summary>
            New. Cannot be used on a QRibbonForm. When you want to scroll the content, add an additional container-like Control
            to the Form and set its Dock to Fill.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.AutoScrollMargin">
      <summary>
            New. Cannot be used on a QRibbonForm. When you want to scroll the content, add an additional container-like Control
            to the Form and set its Dock to Fill.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.AutoScrollPosition">
      <summary>
            New. Cannot be used on a QRibbonForm. When you want to scroll the content, add an additional container-like Control
            to the Form and set its Dock to Fill.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.IsActive">
      <summary>
            Gets wether the Form is active.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.CurrentBounds">
      <summary>
            Gets the actual bounds of the Window. Sometimes, when resizing the window the Control. Bounds
            property does not reflect the actual bounds.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonForm.WindowsXPThemeChanged">
      <summary>
            Is raised when the Windows XP theme is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonForm.PaintNonClientArea">
      <summary>
            This event gets raised when the NonClientArea should be drawn.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonForm.CreateParams">
      <summary>
            Overridden. Gets the CreateParams.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonFormAppearance">
      <summary>
            Defines the appearance used by <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonForm" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonFormAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonFormAppearance.Shape">
      <summary>
            Gets or sets the shape of this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonConfiguration">
      <summary>
            Defines the configuration for the buttons on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonConfiguration.PropMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonConfiguration.#ctor(System.Drawing.Image)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonConfiguration.GetRequestedCount">
      <summary>
            Gets the requested propertyCount.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonConfiguration.CreateAppearance">
      <summary>
            Overridden. Gets the appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonConfiguration.ButtonMask">
      <summary>
            Gets or sets the base image that is used to for the button. In the Mask the Color Red is replaced by the MaskColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonConfiguration.UsedButtonMask">
      <summary>
            Gets the actual used Mask. This is based on whether the Mask is set. If it is not set the default is used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAppearance">
      <summary>
            Contains the appearance for the buttons on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaptionButtonAppearance.Shape">
      <summary>
            Gets or sets the shape in this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolItem">
      <summary>
            This class represents one item on a <see cref="T:Qios.DevSuite.Components.QToolBar" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolItem.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolItem.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Constructor. Creates a new QToolItem and adds it to container.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolItem.#ctor(System.Boolean)">
      <summary>
            Constructor. Creates a QToolItem with the specified parameters.
            </summary>
      <param name="separator">Indicates if the QToolItem is a separator.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolItem.#ctor(System.String)">
      <summary>
            Constructor. Creates a QToolItem with the specified parameters.
            </summary>
      <param name="title">Contains the title of the QToolItem</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolItem.#ctor(System.String,System.String)">
      <summary>
            Constructor. Creates a QToolItem with the specified parameters.
            </summary>
      <param name="title">Contains the title of the QToolItem.</param>
      <param name="name">Contains the name of the QToolItem.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QToolItem.#ctor(System.String,System.String,System.Drawing.Icon,System.Windows.Forms.Shortcut)">
      <summary>
            Constructor. Creates a QToolItem with the specified parameters.
            </summary>
      <param name="title">Contains the title of the QToolItem.</param>
      <param name="itemName">Contains the name of the QToolItem.</param>
      <param name="icon">Contains the icon.</param>
      <param name="shortcut">Contains the shortcut.</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolItem.ItemType">
      <summary>
            Gets or sets the ItemType of the QToolItem. This indicates what part of the QToolItem is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QToolItem.HasChildItemsImageVisibility">
      <summary>
            Determines the visibility of the HasChildItems image.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QHasChildItemsImageVisibility">
      <summary>
            This enumerations determines the visibility of the HasChildItemsImage
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHasChildItemsImageVisibility.Default">
      <summary>
            Default visibility. This depends on the HasChildItemsImageVisible property of the configuration class.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHasChildItemsImageVisibility.Always">
      <summary>
            Always show the HasChildItemsImage, even if the item doesn't have any child items.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHasChildItemsImageVisibility.Never">
      <summary>
            Never show the HasChildItemsImage, even if the item has child items.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QToolItemType">
      <summary>
            This enumeration defines flags that indicate which part of a QToolItem is visible
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolItemType.None">
      <summary>
            Nothing is visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolItemType.Title">
      <summary>
            The Title is visible
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolItemType.Icon">
      <summary>
            The Icon is visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolItemType.Shortcut">
      <summary>
            The ShortCut is visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolItemType.Control">
      <summary>
            The Control is Visible.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolItemType.TitleIcon">
      <summary>
            Same as the Title and Icon flag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolItemType.TitleShortcut">
      <summary>
            Same as the Tile and Shortcut flag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolItemType.IconShortcut">
      <summary>
            Same as the Icon and Shortcut flag.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QToolItemType.TitleIconShortcut">
      <summary>
            Same as the Title and Icon and Shortcut flag.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShape">
      <summary>
            The QShape class is used to define custom shapes for controls. It contains lines and beziers.
            This is used for example to draw the <see cref="T:Qios.DevSuite.Components.QTabButton" /> for a <see cref="T:Qios.DevSuite.Components.QTabControl" /></summary>
      <remarks>
            a QShape has several <see cref="T:Qios.DevSuite.Components.QShapeItem" /> instances. Every item is a Point or a Bezier. Combined
            they are the shape. To specify how a point should behave when the QShape is sized, you can set <see cref="P:Qios.DevSuite.Components.QShapeItem.Anchor" />.
            When an anchor for example is set to Top and Left, the Point will always be absolute positioned relative to the top-left corner.
            <br /><br />
            To define where the content of a shape goes, you must use <see cref="P:Qios.DevSuite.Components.QShape.ContentBounds" />. For a <see cref="T:Qios.DevSuite.Components.QTabButton" />
            for example this defines where the text and icon go.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.#ctor">
      <summary>
            Default constructor. Creates an empty shape.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.#ctor(Qios.DevSuite.Components.QBaseShapeType)">
      <summary>
            Constructor to create a shape based on a clone from a base shape
            </summary>
      <param name="shapeType">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializeBaseShapeType">
      <summary>
            Gets whether the BaseShapeType should be serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializeClonedBaseShapeType">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.RoundPoint(System.Single,System.Single)">
      <summary>
            Returns a PointF containing the rounded x and y using <see cref="P:Qios.DevSuite.Components.QShape.Precision" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.RoundPoint(System.Drawing.PointF)">
      <summary>
            Returns a PointF containing the rounded values of the specified point using <see cref="P:Qios.DevSuite.Components.QShape.Precision" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ResetChanged">
      <summary>
            Resets the IsChanged boolean.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.SuspendChange">
      <summary>
            Suspends the <see cref="E:Qios.DevSuite.Components.QShape.ShapeChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ResumeChange(System.Boolean)">
      <summary>
            Resumes the <see cref="E:Qios.DevSuite.Components.QShape.ShapeChanged" /> event.
            </summary>
      <param name="raiseEvent">Indicates if the event must  be raised</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializeShapeType">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ResetShapeType">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializeShapeName">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ResetShapeName">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializeItems">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializePrecision">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ResetPrecision">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializeSize">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ResetSize">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializeFocusPoint">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ResetFocusPoint">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializeFocusPointAnchor">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ResetFocusPointAnchor">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ShouldSerializeContentBounds">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ResetContentBounds">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.CalculateShapeSize(System.Drawing.Size,System.Boolean)">
      <summary>
            Calculates the shape size for that is needed to display content with its size as big as contentSize.
            It uses the <see cref="P:Qios.DevSuite.Components.QShape.ContentBounds" /> as a factor.
            If horizontal is false it calculates the shape size for
            when the shape is drawn vertical (the dockstyle doesn't matter with a size)
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.InflateSize(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>
            Inflates (or deflates) the size with the custom padding created by the size of the shape and its content rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.CalculateContentBounds(System.Drawing.Rectangle,System.Windows.Forms.DockStyle)">
      <summary>
            Calculates the bounds of the contents for when the shape is drawn on the specified shapeBounds.
            it uses the <see cref="P:Qios.DevSuite.Components.QShape.ContentBounds" /> as a factor.
            The dockstyle indicates how the shape will be oriented when drawn.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.InflateNegativeMargins(System.Drawing.Rectangle)">
      <summary>
            Inflates the rectangle with the absolute values of the negative margin
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.InflateRectangle(System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.DockStyle)">
      <summary>
            Inflates (or deflates) the rectangle with the custom padding created by the size of the shape and its content rectangle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ToMargin">
      <summary>
            Converts this QShape to a QMargin.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ToPadding">
      <summary>
            Converts this QShape to a QPadding.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.GetNextItem(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Gets the next item from this item. This method loops around. When there is only one
            item it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.GetPreviousItem(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Gets the previous item from this item. This method loops around. When there is only one
            item it returns null.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.CalculateNormalizedVector(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Gets the vector of an item relative to the next item. The normalized vector means the value
            that the location must move down with Y when moving right with X to travel 1 in length.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.CalculateLineLength(Qios.DevSuite.Components.QShapeItem)">
      <summary>
            Calculates the length of the line between item and its following item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.LineCrossesRectangle(Qios.DevSuite.Components.QShapeItem,System.Drawing.RectangleF)">
      <summary>
            Returns whether the line of the specified item crosses the specified rectangle. If it does
            intersectionPoint contains the cross point.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.LineCrossesPoint(Qios.DevSuite.Components.QShapeItem,System.Drawing.PointF,System.Drawing.Rectangle,System.Single)">
      <summary>
            Returns whether the line of the specified item crosses the specified point within the specified margin. If it does
            intersectionPoint contains the cross point.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.MirrorShape(Qios.DevSuite.Components.QShapeMirrorOption)">
      <summary>
            Mirrors one side of the shape to the other side of the shape
            </summary>
      <param name="options">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.FlipShape(System.Windows.Forms.Orientation)">
      <summary>
            Flipes the complete shape horizontal or vertical.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.AppendToPath(System.Drawing.Rectangle,Qios.DevSuite.Components.QShapePathOptions,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
            Append this shape to the specified path
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.AppendToPath(System.Drawing.Size,Qios.DevSuite.Components.QShapePathOptions,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
            Append this shape to the specified path
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.AppendToPath(System.Drawing.Rectangle,System.Drawing.Rectangle,Qios.DevSuite.Components.QShapePathOptions,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
            Append this shape to the specified path
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.CreateGraphicsPath(System.Drawing.Rectangle,System.Windows.Forms.DockStyle,Qios.DevSuite.Components.QShapePathOptions,System.Drawing.Drawing2D.Matrix)">
      <summary>
            Draws the shape on the specified destinationBounds with the specified linePen and backgroundBrush.
            DockStyle indicates how the shape must be rotated.
            </summary>
      <param name="destinationBounds">Contains the destinationbounds. This must be the bounds as if the rotation was already applied.</param>
      <param name="dockStyle">Contains the dockStyle, when no rotation must be specified this must be Top.</param>
      <param name="options">Contains the options that define what to create.</param>
      <param name="matrix">Matrix to apply to the path</param>
      <returns>The created GraphicsPath. </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.DrawShape(System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Brush,System.Windows.Forms.DockStyle,Qios.DevSuite.Components.QSmoothingMode,Qios.DevSuite.Components.QShapeDrawOptions,System.Drawing.Graphics)">
      <summary>
            Draws the shape on the specified destinationBounds with the specified linePen and backgroundBrush.
            DockStyle indicates how the shape must be rotated.
            </summary>
      <param name="destinationBounds">Contains the destinationbounds. This must be the bounds as if the rotation was already applied.</param>
      <param name="borderPen">Contains the pen for border. Can be null</param>
      <param name="backgroundBrush">Contains the brush for the background, can be null.</param>
      <param name="dockStyle">Contains the dockStyle, when no rotation must be specified this must be Top.</param>
      <param name="smoothingMode">Contains the smoothingMode to use</param>
      <param name="graphics">The graphics to draw on.</param>
      <param name="options">Contains the options that define what to draw.</param>
      <returns>The drawn GraphicsPath. You are responsible for disposing this GraphicsPath.</returns>
      <remarks>This method returns a GraphicsPath when the options contain <see cref="F:Qios.DevSuite.Components.QShapeDrawOptions.ReturnDrawnShape" />, be sure to catch that GraphicsPath and dispose it after you are done. When this option is not defined, it returns null.</remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.DrawShape(System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Brush,System.Windows.Forms.DockStyle,Qios.DevSuite.Components.QSmoothingMode,Qios.DevSuite.Components.QShapeDrawOptions,System.Drawing.Graphics,System.Drawing.Drawing2D.Matrix)">
      <summary>
            Draws the shape on the specified destinationBounds with the specified linePen and backgroundBrush.
            DockStyle indicates how the shape must be rotated.
            </summary>
      <param name="destinationBounds">Contains the destinationbounds. This must be the bounds as if the rotation was already applied.</param>
      <param name="borderPen">Contains the pen for border. Can be null</param>
      <param name="backgroundBrush">Contains the brush for the background, can be null.</param>
      <param name="dockStyle">Contains the dockStyle, when no rotation must be specified this must be Top.</param>
      <param name="smoothingMode">Contains the smoothingMode to use</param>
      <param name="graphics">The graphics to draw on.</param>
      <param name="options">Contains the options that define what to draw.</param>
      <param name="matrix">Matrix to apply to the path</param>
      <returns>The drawn GraphicsPath. You are responsible for disposing this GraphicsPath.</returns>
      <remarks>This method returns a GraphicsPath when the options contain <see cref="F:Qios.DevSuite.Components.QShapeDrawOptions.ReturnDrawnShape" />, be sure to catch that GraphicsPath and dispose it after you are done. When this option is not defined, it returns null.</remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.DrawShapeDesign(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Drawing.Graphics)">
      <summary>
            Draws the shape in designMode
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.IllustratePoint(System.Drawing.PointF,System.Single,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Graphics,System.String,System.Drawing.Font)">
      <summary>
            Illustrates a point by specifing it with a filled circle and (when selected) a rectangle
            </summary>
      <param name="point">the point to draw</param>
      <param name="pointSize">the size of the rectangle</param>
      <param name="circleBrush">When the circle must must be filled, set this brush. This can be null</param>
      <param name="rectanglePen">When the rectangle must be drawn, set this brush. This can be null</param>
      <param name="graphics">The graphics to draw on.</param>
      <param name="text">Text to be draw near the point</param>
      <param name="font">Font of the text</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.IllustratePoint(System.Drawing.PointF,System.Single,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>
            Illustrates a point by specifing it with a filled circle and (when selected) a rectangle
            </summary>
      <param name="point">the point to draw</param>
      <param name="pointSize">the size of the rectangle</param>
      <param name="circleBrush">When the circle must must be filled, set this brush. This can be null</param>
      <param name="rectanglePen">When the rectangle must be drawn, set this brush. This can be null</param>
      <param name="graphics">The graphics to draw on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.TranslatePoint(System.Drawing.PointF,System.Drawing.Rectangle,System.Windows.Forms.AnchorStyles,System.Boolean)">
      <summary>
            Calculates the new point on the destinationBounds, based on the point anchor and whether the anchors must be ignored.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.TranslatePoint(System.Drawing.PointF,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.AnchorStyles,System.Boolean)">
      <summary>
            Calculates the new point on the destinationBounds, based on the point anchor and whether the anchors must be ignored.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.TranslateRectangle(System.Drawing.RectangleF,System.Drawing.Rectangle,System.Windows.Forms.AnchorStyles,System.Boolean)">
      <summary>
            Calculates the specified rectangle to a rectangoe on the destinationBounds
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.ToString">
      <summary>
            Overridden. Returns the name of the shape
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.OnShapeChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QShape.ShapeChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.CopyTo(Qios.DevSuite.Components.QShape,System.Boolean)">
      <summary>
            Copies this shape to the specified shape.
            </summary>
      <param name="shape">The shape to copy to.</param>
      <param name="includeItems">Indicates whether the QShapeItems must be included</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.CopyTo(Qios.DevSuite.Components.QShape)">
      <summary>
            Copies this shape to the specified shape.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShape.Clone">
      <summary>
            Clones this object
            </summary>
      <returns>
      </returns>
    </member>
    <member name="E:Qios.DevSuite.Components.QShape.ShapeChanged">
      <summary>
            Gets raised when an item of the shape o the shape is changed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.WeakEventHandlers">
      <summary>
            Gets or sets whether the EventHandlers must contain a WeakReference to the Target. WeakReferences make sure
            that the Target gets collected by the GC if the refence of the EventHandler is the only reference to the Target.
            Only set this to false when the reference to the Target is the only reference alive and you want to keep the Target
            Alive.
            </summary>
      <remarks>
            You need to re-assign the EventHandlers if you change this property.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.BaseShapes">
      <summary>
            Contains the collection of Base shapes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.BaseShapeType">
      <summary>
            Gets or sets the type of the shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.ClonedBaseShapeType">
      <summary>
            Gets or sets the type of the shape that this shape should be cloned of
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.DesignSmoothingMode">
      <summary>
            Obsolete since Version 1.1.0.0, Use the SmoothingMode from the QShapeDesigner
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.IsChanged">
      <summary>
            Gets whether the shape is changed since the creation or the last
            <see cref="M:Qios.DevSuite.Components.QShape.ResetChanged" /> method.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.ShapeType">
      <summary>
            Gets or sets the type of the shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.ShapeName">
      <summary>
            Gets or sets the name of the shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.Items">
      <summary>
            Gets the collection of <see cref="T:Qios.DevSuite.Components.QShapeItem" /> that define this shape
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.Precision">
      <summary>
            Gets or sets the precision that is used (in decimals) to calculate values in.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.Size">
      <summary>
            Gets or sets the size of the shape.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.FocusPoint">
      <summary>
            Gets or sets the focus point of the shape.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.FocusPointAnchor">
      <summary>
            Gets or sets the focus point anchors of the shape.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.ContentBounds">
      <summary>
            Gets or sets the bounds of the contents. This is used to determine where the contents must be located on the shape.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShape.MinimumSize">
      <summary>
            Gets the MinimumSize of the shape. This is the size that is used to draw
            the shape as designed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeDesignVisibleAttribute">
      <summary>
            Defines which shapetypes can be selected.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeDesignVisibleAttribute.#ctor(Qios.DevSuite.Components.QShapeType)">
      <summary>
            Constructor
            </summary>
      <param name="shapeType">QShapeType to show the shapes of</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeDesignVisibleAttribute.ShouldBeVisibleForShape(Qios.DevSuite.Components.QShape)">
      <summary>
            Determines if the QShape should be visible
            </summary>
      <param name="shape">Shape to determine visibility for</param>
      <returns>True if visible, else false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapeDesignVisibleAttribute.ShouldBeVisibleForShapeType(Qios.DevSuite.Components.QShapeType)">
      <summary>
            Determines if the QShape should be visible
            </summary>
      <param name="shapeType">ShapeType to determine visibility for</param>
      <returns>True if visible, else false</returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapeDesignVisibleAttribute.ShapeType">
      <summary>
            Gets the ShapeType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeMirrorOption">
      <summary>
            Contains mirror options to mirror a QShape
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeMirrorOption.LeftToRight">
      <summary>
            Mirrors the Left Items to the right
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeMirrorOption.RightToLeft">
      <summary>
            Mirrors the Right items to the left.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeMirrorOption.TopToBottom">
      <summary>
            Mirrors the Top items to the bottom.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeMirrorOption.BottomToTop">
      <summary>
            Mirrors the Bottom items to the top.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapePathOptions">
      <summary>
            Contains flags for drawing a QShape
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePathOptions.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePathOptions.VisibleLines">
      <summary>
            The visible lines are added.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePathOptions.InvisibleLines">
      <summary>
            The invisible lines are added.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePathOptions.IgnoreAnchors">
      <summary>
            Indicates that he anchors must be ignored and the shape is default scaled.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePathOptions.AllLines">
      <summary>
            All lines
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePathOptions.DefaultForFill">
      <summary>
            Default Flags for when you want to fill the shape
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePathOptions.DefaultForDraw">
      <summary>
            Default flags for when you want to Draw borders around the shape
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapeDrawOptions">
      <summary>
            Defines options for the <see cref="M:Qios.DevSuite.Components.QShape.DrawShape(System.Drawing.Rectangle,System.Drawing.Pen,System.Drawing.Brush,System.Windows.Forms.DockStyle,Qios.DevSuite.Components.QSmoothingMode,Qios.DevSuite.Components.QShapeDrawOptions,System.Drawing.Graphics)" /> method
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeDrawOptions.None">
      <summary>
            No options
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeDrawOptions.FillBackground">
      <summary>
            Fills the background of the shape.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeDrawOptions.DrawBorder">
      <summary>
            Draws the border of the shape.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeDrawOptions.ExceedBackgroundWithBorder">
      <summary>
            Makes sure the background is painted under the borders. This is usefull for when the shape
            contains invisible lines.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeDrawOptions.ReturnDrawnShape">
      <summary>
            Indicates that the drawn shape must be returned. When this is not specified the drawn shape is disposed
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeDrawOptions.DefaultForFill">
      <summary>
            The default options for a Fill operation.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeDrawOptions.DefaultForDraw">
      <summary>
            The default options for a Draw operation.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapeDrawOptions.Default">
      <summary>
            The default options for a Fill and Draw operation.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextStyleCollection">
      <summary>
            Is used to maintain a collection of <see cref="T:Qios.DevSuite.Components.QMarkupTextStyle" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleCollection.Add(Qios.DevSuite.Components.QMarkupTextStyle)">
      <summary>
            Adds a style to the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleCollection.Insert(System.Int32,Qios.DevSuite.Components.QMarkupTextStyle)">
      <summary>
            Inserts a style to the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the style at the specified index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleCollection.Remove(Qios.DevSuite.Components.QMarkupTextStyle)">
      <summary>
            Removes a style from the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleCollection.OnClear">
      <summary>
            Handles a clear action.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleCollection.OnClearComplete">
      <summary>
            Handles th ClearComplete action.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextStyleCollection.IndexOf(Qios.DevSuite.Components.QMarkupTextStyle)">
      <summary>
            Gets the index of the specified line.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextStyleCollection.Item(System.Int32)">
      <summary>
            Returns the style at index
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerBar">
      <summary>
            A QExplorerBar can be used to present grouped buttons to the user for easy access to the most used functionality.
            The buttons of a QExplorerBar are implemented by <see cref="T:Qios.DevSuite.Components.QExplorerItem" />. The first level of buttons are presented as
            group items that can be expanded or collapsed. In their expanded state they show the second level of buttons. The third
            level of buttons are presented as a floating menu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>
            Is used to PreFilter Application messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.HandleKeyDown(System.Windows.Forms.Keys)">
      <summary>
            Obsolete. Use the overload containing the destinationControl and the message.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.HandleKeyUp(System.Windows.Forms.Keys)">
      <summary>
            Obsolete. Use the overload containing the destinationControl and the message.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Overridden. Handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ResetConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ShouldSerializeConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ResetItemConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ShouldSerializeItemConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ResetGroupItemConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ShouldSerializeGroupItemConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ResetChildMenuConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ShouldSerializeChildMenuConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.SetExpandedItem(Qios.DevSuite.Components.QMenuItem)">
      <summary>
            Overridden. Sets the ExpandedItem property only. Used only for internal purposes.
            Overriden to only set non-groupitems.
            </summary>
      <param name="expandedItem">Item to expand</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ContainsOrIsContainerWithHandle(System.IntPtr)">
      <summary>
            Overridden. Returns whether this QCommandContainer is the container with handle, or contains
            a ChildContainer with handle.
            </summary>
      <returns>true when it is or contains the handle, else false</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.LoadPersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable,System.Object)">
      <summary>
            Loads this Control from the specified persistableObjectElement.
            </summary>
      <remarks>
            This is defined in <see cref="T:Qios.DevSuite.Components.IQPersistableObject" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ShowChildMenu(Qios.DevSuite.Components.QMenuItem,System.Boolean,System.Boolean)">
      <summary>
            Overridden. Shows the ChildMenu of the specified QMenuItem or toggles the ItemState (Expanded/Collapsed)
            of an QExplorerItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.Select(System.Boolean,System.Boolean)">
      <summary>
            Overriden. Selects the control.
            </summary>
      <param name="directed">True to specify the direction of the control to select, otherwise false</param>
      <param name="forward">True to move forward in the tab order, false to move backward in the tab order.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles the NonClient messages, and sets the NonClientArea.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.CreateAppearanceInstance">
      <summary>
            Overridden. Returns a new instance of the <see cref="T:Qios.DevSuite.Components.QExplorerBarAppearance" /></summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Calculates the Layout of the QExplorerBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseWheel event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnGotFocus(System.EventArgs)">
      <summary>
            Overridden. Handles the GotFocus event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnLostFocus(System.EventArgs)">
      <summary>
            Overridden. Handles the LostFocus event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnResize(System.EventArgs)">
      <summary>
            Overridden. Resizes the control
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overriden. Applies the scroll position to the mouse event arguments.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overriden. Applies the scroll position to the mouse event arguments.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overriden. Applies the scroll position to the mouse event arguments.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnCalculatedSizeChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QExplorerBar.CalculatedSizeChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.ResumeLayout(System.Boolean)">
      <summary>
            New implementation for ResumeLayout.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnVisibleChanged(System.EventArgs)">
      <summary>
            Overridden. Fires the VisibleChanged event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Overriden. Handles the TimerElapsed event to toggle QExplorerBarItems with motion
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnSizeChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the SizeChanged event
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the QExplorerBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the background of the QExplorerBar
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBar.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes this control
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QExplorerBar.CalculatedSizeChanged">
      <summary>
            Gets raised when the CalculatedSize property changes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.CalculatedSize">
      <summary>
            Gets the calculated size of the QExplorerBar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.ScrollHorizontalValue">
      <summary>
            Gets the scroll value in pixels of the horizontal scrollbar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.ScrollVerticalValue">
      <summary>
            Gets the scroll value in pixels of the vertical scrollbar
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.Font">
      <summary>
            Overridden. Gets or sets the Font.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.Configuration">
      <summary>
            Gets or sets the Configuration of this QExplorerBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.GroupItemConfiguration">
      <summary>
            Gets or sets the GroupConfiguration of this QExplorerBar. The GroupConfiguration applies to the first level of QExplorerItems.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.ItemConfiguration">
      <summary>
            Gets or sets the ItemConfiguration of this QExplorerBar. The ItemConfiguration applies to the second level of QExplorerItems.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.ChildMenuConfiguration">
      <summary>
            Gets or sets the ChildMenuConfiguration of this QExplorerBar. The ChildMenuConfiguration applies to the third level of QExplorerItems.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.ExplorerItems">
      <summary>
            Gets the collection of QExplorerItems of this QExplorerBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.Personalized">
      <summary>
            Overridden. Gets whether the QExplorerItem the mouse is over is personalized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.BackColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarBackground1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.BackColor2PropertyName">
      <summary>
            Overridden. Returns the ToolBarBackground2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.BorderColorPropertyName">
      <summary>
            Overridden. Returns the ToolBarBorderColor from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.Dock">
      <summary>
            Gets or sets which edge of the parent container this control is docked to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.AutoExpand">
      <summary>
            Overridden. Gets or sets if the childmenu's should expand automatically when the mouse enters a menuitem area.
            Overridden to never allow auto expanding. This is normal behaviour for menu's and toolbars but not for a explorerbar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBar.DrawBorders">
      <summary>
            Overridden. Determines if the borders are drawn.
            This method will return false because the QExplorerBar will paint its own borders in the non-client area
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerBarAppearance">
      <summary>
            Defines the Appearance for the QExplorerBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerBarPanelAppearance">
      <summary>
            Defines the Appearance for the GroupPanels QExplorerBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarPanelAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerBarItemAppearance">
      <summary>
            Defines the Appearance for the items on the QExplorerBar.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarItemAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerBarException">
      <summary>
            QExplorerBarException is an exception class for the <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarException.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarException.#ctor(System.String)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarException.#ctor(System.String,System.Exception)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerItemAnimationType">
      <summary>
            Indicates the type of animation used on a <see cref="T:Qios.DevSuite.Components.QExplorerItem" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QExplorerItemAnimationType.None">
      <summary>
            No animation is used.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QExplorerItemAnimationType.Fade">
      <summary>
            The groupitem fades in/out.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QExplorerItemAnimationType.Slide">
      <summary>
            The groupitem slides in/out.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QExplorerItemAnimationType.Both">
      <summary>
            The groupitem slides in/out and fade in/out.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDragRectangleType">
      <summary>
            Is used with the <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> to indicate what kind of <b>DragRectangle</b> is drawn.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDragRectangleType.TransparentForm">
      <summary>
            Indicates that a transparent window is used.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDragRectangleType.ReversibleRectangle">
      <summary>
            Indicates that a reversible rectangle is used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QControlTimerEventHandler">
      <summary>
            Defines the delegate that is used for TimerElapsed events on <see cref="T:Qios.DevSuite.Components.QControl" /> and <see cref="T:Qios.DevSuite.Components.QContainerControlBase" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QControlTimerEventArgs">
      <summary>
            Defines the EventArgs that is used on TimerElapsed events on <see cref="T:Qios.DevSuite.Components.QControl" /> and <see cref="T:Qios.DevSuite.Components.QContainerControlBase" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlTimerEventArgs.#ctor(System.Int32)">
      <summary>
            Creates new QControlTimerEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlTimerEventArgs.TimerId">
      <summary>
            Gets the TimerId that 
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMenuItemCheckBehaviour">
      <summary>
            Defines the type of activation of a QCompositeItem
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemCheckBehaviour.CheckItem">
      <summary>
            The whole QCompositeMenuItem will be drawn as checked
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemCheckBehaviour.CheckIcon">
      <summary>
            Only the QCompositeIcon will be drawn as checked
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeImage">
      <summary>
            Defines one item in a <see cref="T:Qios.DevSuite.Components.QComposite" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImage.#ctor(System.Object,Qios.DevSuite.Components.QObjectClonerConstructOptions)">
      <summary>
            Protected constructor. Is called by the QObjectCloner. This constructor shouldn't be called manually.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImage.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImage.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Creates the painters for the QCompositeImage
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImage.ShouldSerializeImage">
      <summary>
            Returns whether the Image must be serialized.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImage.ResetImage">
      <summary>
            Resets the Image.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImage.SetImage(System.Drawing.Image,System.Boolean)">
      <summary>
            Sets the image and lets you specify whether to set the parent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImage.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImage.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Listens to the layout stages and takes appropiate actions.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeImage.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Handles a paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeImage.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeImage.Image">
      <summary>
            Gets or sets the Image of the QCompositeImage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeImage.ImageResourceName">
      <summary>
            Gets or sets a possible resource name to load the Image from. This must be in the format 'NameSpace.ImageName.ico, AssemblyName'.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeImage.ImageLoadedFromResource">
      <summary>
            Gets whether the Image is loaded from a resource.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeImage.UsedImage">
      <summary>
            Gets the Image that is used. This is determined by whether the item is checked.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QBalloonWindow">
      <summary>
            QBalloonWindow is a QShapedWindow used for showing descriptive text for controls or areas of an application.
            Use the QBalloon component to show and hide the QBalloonWindow. Use the QBalloon component to configure a default
            QBalloonWindow or inherit from QBalloonWindow to create your custom window.
            </summary>
      <remarks>
            The QBalloonWindow is managed by a <see cref="T:Qios.DevSuite.Components.QBalloon" /> component. The QBalloon will keep track of the text you want to display for your controls 
            and when the QBalloonWindow is displayed its <see cref="P:Qios.DevSuite.Components.QBalloonWindow.MarkupText" /> property will be set. 
            To see the tags that can be used for this formatting, see the <a href="088eec04-2535-4aeb-9092-638574e8a38b.htm">QMarkupText XML Reference</a>.<br /><br />
            To handle mouse events, implement an event handler for the several events like <see cref="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseEnter" /> or <see cref="E:Qios.DevSuite.Components.QBalloonWindow.ElementLinkClick" />.
            <seealso cref="T:Qios.DevSuite.Components.QMarkupText" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseDown event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseUp event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnMouseLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the MouseLeave event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseMove event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnColorsChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the ColorsChanged event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnFontChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the FontChanged event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the foreground.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnSizeChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the SizeChanged event
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles window messages.
            </summary>
      <param name="m">Message info</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.HandleConfigurationChanged(System.Boolean)">
      <summary>
            Overridden, handles the configuration changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnLostFocus(System.EventArgs)">
      <summary>
            Overridden. Handles the LostFocus event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnElementMouseEnter(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseEnter" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnElementMouseLeave(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseLeave" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnElementMouseDown(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnElementMouseUp(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnElementMouseClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.OnElementLinkClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QBalloonWindow.ElementLinkClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Sets the visibility.
            </summary>
      <param name="value">True if visible, else false</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.Initialize">
      <summary>
            Initializes the QBalloonWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QBalloonWindow.CreateShapedWindowConfigurationInstance">
      <summary>
            Can be used by subclasses to implement an other QBalloonWindowConfiguration.
            </summary>
      <returns>A new QBalloonWindowConfiguration Instance</returns>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseEnter">
      <summary>
            Occurs when the mouse enters an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseLeave">
      <summary>
            Occurs when the mouse leaves an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseDown">
      <summary>
            Occurs when the user presses the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseUp">
      <summary>
            Occurs when the user releases the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonWindow.ElementMouseClick">
      <summary>
            Occurs when the user clicks on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QBalloonWindow.ElementLinkClick">
      <summary>
            Occurs when the user clicks on a link.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.ContentRectangle">
      <summary>
            Gets or sets the content rectangle
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.Opacity">
      <summary>
            Overridden. Gets or sets the Opacity property. This is used for animation, so this can be used on a QBalloonWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.Configuration">
      <summary>
            Gets the QBalloonWindowConfiguration for this QBalloonWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.MarkupTextObject">
      <summary>
            Gets the MarkupText object that is used for the rendering and drawing of the custom text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.MarkupText">
      <summary>
            Gets or sets the Markup text for this QMarkupLabel. The formatting happens in XML.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.Text">
      <summary>
            Overridden. Gets or sets the Text. This property does not apply any formatting. To format the text, use <see cref="P:Qios.DevSuite.Components.QBalloonWindow.MarkupText" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.BorderColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of the border color
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.ShadeColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of the shade color
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.BackColor2PropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of second background color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QBalloonWindow.BackColorPropertyName">
      <summary>
            Gets the <see cref="T:Qios.DevSuite.Components.QColorScheme" /> property name of first background color.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPainterOptions">
      <summary>
            Defines drawOptions for the various painters.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPainterOptions.None">
      <summary>
            No options
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPainterOptions.FillBackground">
      <summary>
            The background must be Filled.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPainterOptions.FillForeground">
      <summary>
            The foreground must be Filled.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPainterOptions.Default">
      <summary>
            The default options. The background must be filled and the foreground must be drawn.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppearanceBackgroundOptions">
      <summary>
            Contains the options to draw the background of an appearance.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBackgroundOptions.None">
      <summary>
            No flags defined.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBackgroundOptions.InsetDoesNotDependOnBorder">
      <summary>
            Indicates that the inset must not depend on the size of the border. This should only be set by Controls
            that draw the border separatly and on an other bounds than the background (like in the NonClientArea).
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBackgroundOptions.DontExtendPathBackgroundWithBorder">
      <summary>
            If this is set, it does not draw the background under the border of paths. Normally this should happen.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceBackgroundOptions.Default">
      <summary>
            Contains the default options.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPadding">
      <summary>
            Is used by controls to maintain padding values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructor. Creates a QPadding instance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.ToPadding">
      <summary>
            Converts this to a QPadding
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.InflateRectangleWithPadding(System.Drawing.Rectangle,System.Boolean,Qios.DevSuite.Components.QContentOrientation)">
      <summary>
            Returns a new rectangle that is inflated by this QPadding.
            </summary>
      <param name="rectangle">The rectangle to inflate.</param>
      <param name="inflate">Indicates if the rectangle must be inflated or deflated.</param>
      <param name="orientation">Indicates for which orientation it must be inflated
            When Horizontal the Left is added by the Left, Top by Top. When VerticalDown the Bottom is Added by the Left
            and the Left is added by the top (like rotated 90 degrees), etc</param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.InflateRectangleWithPadding(System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.DockStyle)">
      <summary>
            Returns a new rectangle that is inflated by this QPadding.
            </summary>
      <param name="rectangle">The rectangle to inflate.</param>
      <param name="inflate">Indicates if the rectangle must be inflated or deflated.</param>
      <param name="dockStyle">Indicates the dockStyle to inflate this padding for.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.InflateRectangleWithPadding(System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>
            Returns a new rectangle that is inflated by this QPadding.
            </summary>
      <param name="rectangle">The rectangle to inflate.</param>
      <param name="inflate">Indicates if the rectangle must be inflated or deflated.</param>
      <param name="horizontal">Defines whether the calculation must be for the horizontal orientation.
            When true the Left is added by the Left, Top by Top. When false the Bottom is Added by the Left
            and the Left is added by the top (like rotated 90 degrees)</param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.InflateSizeWithPadding(System.Drawing.Size,System.Boolean,Qios.DevSuite.Components.QContentOrientation)">
      <summary>
            Returns a new size that is inflated by this QPadding.
            </summary>
      <param name="size">The size to inflate.</param>
      <param name="inflate">Indicates if the size must be inflated or deflated.</param>
      <param name="orientation">Indicates for which orientation it must be inflated
            When Horizontal the Horizontal is added by the Width, Vertical by Height. When VerticalDown or VerticalUp
            the Width is added bij Vertical, etc.
            </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.InflateSizeWithPadding(System.Drawing.Size,System.Boolean,System.Boolean)">
      <summary>
            Returns a new size that is inflated by this QPadding.
            </summary>
      <param name="size">The size to inflate.</param>
      <param name="inflate">Indicates if the size must be inflated or deflated.</param>
      <param name="horizontal">Defines whether the calculation must be for the horizontal orientation.
            When true the Horizontal is added by the Width. When false Vertical is added by the Width
            (like rotated 90 degrees)</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.InflateSize(System.Drawing.Size,Qios.DevSuite.Components.IQPadding[],System.Boolean,System.Boolean)">
      <summary>
            Inflates (or deflates) a size with a list of IQPadding implementations.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.InflateRectangle(System.Drawing.Rectangle,Qios.DevSuite.Components.IQPadding[],System.Boolean,System.Windows.Forms.DockStyle)">
      <summary>
            Inflates (or deflates) a rectangle with a list of IQPadding implementations.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.SumPaddings(Qios.DevSuite.Components.IQPadding[])">
      <summary>
            Sums the paddings and returns one total padding.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.MaxPaddings(Qios.DevSuite.Components.QPadding[])">
      <summary>
            Gets  the maximum left, right, bottom and top of the specified paddings.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.Equals(System.Object)">
      <summary>
            Overridden. Return whether this QPadding is equal to obj.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPadding.GetHashCode">
      <summary>
            Overridden. Returns a hashcode for this QPadding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPadding.Empty">
      <summary>
            Gets the empty QPadding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPadding.Left">
      <summary>
            Gets or sets the Left padding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPadding.Top">
      <summary>
            Gets or sets the Top padding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPadding.Right">
      <summary>
            Gets or sets the Right padding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPadding.Bottom">
      <summary>
            Gets or sets the Bottom padding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPadding.Vertical">
      <summary>
            Gets the Bottom and Top padding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPadding.Horizontal">
      <summary>
            Gets the Left and Right padding.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMessagesListener.WindowsXPThemeChanged">
      <summary>
            Gets raised when the WindowsXP theme or any part of it like colors or fonts are changed. This event is NOT a good event to check for Font changes, because they haven't been changed then.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMessagesListener.SystemColorsChanged">
      <summary>
            Gets raised when the system colors changed or any other part of the theme is changed. This event is also good even't to check for Font changes.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorCategoryVisibleAttribute">
      <summary>
            Attribute for giving a QColor a QColorCategory
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QColorCategoryVisibleAttribute.#ctor(Qios.DevSuite.Components.QColorCategory)">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QColorCategoryVisibleAttribute.Category">
      <summary>
            Gets the category
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QColorCategory">
      <summary>
            Enumeration that defines a category of colors
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.Composite">
      <summary>
            Color category for the QComposite, QCompositeControl and QCompositeWindow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.CompositeItem">
      <summary>
            Color category for the QCompositeItem
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.CompositeGroup">
      <summary>
            Color category for the QCompositeGroup
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.CompositeButton">
      <summary>
            Color category for the QCompositeButton
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.CompositeText">
      <summary>
            Color category for the QCompositeText, QCompositeIcon, QCompositeMenuItem
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.CompositeSeparator">
      <summary>
            Color category for the QCompositeSeperator
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.CompositeScroll">
      <summary>
            Color category for QComposite parts that can scroll
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.CompositeBalloon">
      <summary>
            Color categorie for QComposite parts that can display a balloon
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.Ribbon">
      <summary>
            Color category for the QRibbon
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonPage">
      <summary>
            Color category for the QRibbonPage
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonPanel">
      <summary>
            Color category for the QRibbonPanel
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonInputBox">
      <summary>
            Color category for the QRibbonInputBox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonCaption">
      <summary>
            Color category for the QRibbonCaption
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonLaunchBar">
      <summary>
            Color category for the QRibbonLaunchBar
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonLaunchBarHost">
      <summary>
            Color category for the QRibbonLaunchBarHost
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonForm">
      <summary>
            Color category for the QRibbonForm
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonMenuWindow">
      <summary>
            Color category for the QRibbonMenuWindow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonItem">
      <summary>
            Color category for the QRibbonItem
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonSeparator">
      <summary>
            Color category for the QRibbonSeparator
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonItemBar">
      <summary>
            Color category for the QRibbonItemBar
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.RibbonApplicationButton">
      <summary>
            Color category for the QRibbonApplicationButton
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.InputBox">
      <summary>
            Color category for the QInputBox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.InputBoxButton">
      <summary>
            Color category for the buttons of a QInputBox
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.ScrollBar">
      <summary>
            Color category for the QScrollBar
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QColorCategory.MarkupText">
      <summary>
            Color category for the QMarkupText.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartDefaultPaintEngine">
      <summary>
            Defines the default class that paints <see cref="T:Qios.DevSuite.Components.IQPart" /> objects. This class calls <see cref="M:Qios.DevSuite.Components.IQPart.GetObjectPainter(Qios.DevSuite.Components.QPartPaintLayer,System.Type)" /> for all the
            child objects and paints it.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartDefaultPaintEngine.PerformPaint(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Performs complete painting.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartDefaultPaintEngine.FinishPaint(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Finishes the paint.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartDefaultPaintEngine.PaintPart(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints a part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartDefaultPaintEngine.PaintBackground(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the background. Only raises the stages for the <see cref="P:Qios.DevSuite.Components.IQPart.PaintListener" /> in this implementation.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartDefaultPaintEngine.PaintContent(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the content. Raises the stages for the <see cref="P:Qios.DevSuite.Components.IQPart.PaintListener" />, draws possible contentParts or
            draws simple contentObjects (like strings, images or icons)
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartDefaultPaintEngine.PaintForeground(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the foreground.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartDefaultPaintEngine.PaintLayer(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintLayer,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints a specific layer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartDefaultPaintEngine.Default">
      <summary>
            Gets the default static engine.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartCollection">
      <summary>
            QPart is used since Qios.DevSuite 2.0. It is the most abstract implementation of an element that can be layed-out.
            It can contain a list of child parts OR some content, (not both at the same time).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.Add(Qios.DevSuite.Components.IQPart)">
      <summary>
            Adds a part and removes it from a possible current collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.Add(Qios.DevSuite.Components.IQPart,System.Boolean)">
      <summary>
            Adds a part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.Insert(System.Int32,Qios.DevSuite.Components.IQPart)">
      <summary>
            Inserts a part and removes it from a possible current collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.Insert(System.Int32,Qios.DevSuite.Components.IQPart,System.Boolean)">
      <summary>
            Inserts an IQPart at the specified index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.AddRange(Qios.DevSuite.Components.IQPartCollection)">
      <summary>
            Adds a range of parts and removes them from a possible current collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.AddRange(Qios.DevSuite.Components.IQPartCollection,System.Boolean)">
      <summary>
            Adds a IQPartCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.Remove(Qios.DevSuite.Components.IQPart)">
      <summary>
            Removes a part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.SetPart(System.Int32,Qios.DevSuite.Components.IQPart,System.Boolean)">
      <summary>
            Sets the specified part at the specified index.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.IndexOf(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the index of the part within the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.Contains(Qios.DevSuite.Components.IQPart)">
      <summary>
            Determines if the part is contained within the collection
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.IndexOf(System.String)">
      <summary>
            Gets the index of the part with the specified name.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.FindPart(System.String)">
      <summary>
            Searches the complete hierarchy for a part with the specified name. Returns null if there is no part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.OnClear">
      <summary>
            Performs additional custom processes when clearing the contents of the CollectionBase instance. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.OnClearComplete">
      <summary>
            Performs additional actions when clear is complete
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.SetDisplayParent(Qios.DevSuite.Components.IQManagedLayoutParent)">
      <summary>
            Sets the display parent of this and all the parts in the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.SetParent(Qios.DevSuite.Components.IQPart,System.Boolean)">
      <summary>
            Sets the parent of this and all the parts in the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.SuspendChangeNotification">
      <summary>
            Suspends change notifications. It returns howmay times it is suspended. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.ResumeChangeNotification(System.Boolean)">
      <summary>
            Resumes any layout notification suspended by <see cref="M:Qios.DevSuite.Components.QPartCollection.SuspendChangeNotification" />.  It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.SortRequired">
      <summary>
            Returns whether sort is required.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.SetPartIndices(System.Int32)">
      <summary>
            Sets the part indices to the current index of the part.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.SortPartsWhenRequired">
      <summary>
            Sorts the parts when required. Returns true when sorted, else false.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies this collection to the specified array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.CopyTo(System.Collections.IList)">
      <summary>
            Copies this collection to the specified list.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.SortParts">
      <summary>
            Sorts the parts when needed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.SortParts(System.Boolean)">
      <summary>
            Sorts the parts when needed or force is true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCollection.Clone">
      <summary>
            Clones this collection and all its contents to a new collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCollection.ParentPart">
      <summary>
            Gets the parent part this collection belongs to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCollection.DisplayParent">
      <summary>
            Gets the display parent responsible for rendering the items of this collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCollection.ChangeNotificationSuspended">
      <summary>
            Gets howmany times the change notification is suspended.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCollection.Item(System.Int32)">
      <summary>
            Gets the Part at the specified index.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCollection.Item(System.String)">
      <summary>
            Gets the part with the specified name
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QGlobalColorSchemeManagerDesigner">
      <summary>
            A designer for the QGlobalColorSchemeManager component
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QGlobalColorSchemeManagerDesigner.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QGlobalColorSchemeManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the Designer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QGlobalColorSchemeManagerDesigner.Verbs">
      <summary>
            Gets the designer verbs
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QExplorerItemCollectionEditor">
      <summary>
            Defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" /> on a <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerItemCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor. Creates a new QMenuItemCollectionEditor.
            </summary>
      <param name="type">The Type to create this Editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerItemCollectionEditor.CreateCollectionForm">
      <summary>
            Overridden. Returns an instance of the used CollectionForm.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Overridden. Edits the specified <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerItemCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QExplorerItemCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QColorSchemeCurrentThemeTypeConverter">
      <summary>
            This class defines the TypeConverter for the CurrentTheme property of the <see cref="T:Qios.DevSuite.Components.QColorSchemeBase" /> class.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorSchemeCurrentThemeTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Returns whether the standard values of the CurrentTheme property of a <see cref="T:Qios.DevSuite.Components.QColorSchemeBase" /> are supported.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorSchemeCurrentThemeTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Returns whether the standard values of the CurrentTheme property of a <see cref="T:Qios.DevSuite.Components.QColorSchemeBase" /> are exclusive.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QColorSchemeCurrentThemeTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Returns the standard values of the CurrentTheme property of a <see cref="T:Qios.DevSuite.Components.QColorSchemeBase" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPage">
      <summary>
            this class implements the Ribbon Page for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.CreateComposite">
      <summary>
            Creates the Composite.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.CreateCompositeConfiguration">
      <summary>
            Creates a possible composite configuration. The default implementation returns null and the composite is responsible
            for providing the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.CreateToolTipConfigurationInstance">
      <summary>
            Creates the ToolTipConfiguration instance.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.CreateAppearanceInstance">
      <summary>
            Creates 
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.CreateTabButton">
      <summary>
            Overridden. Creates the TabButton.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.ShouldSerializeChildCompositeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.ChildCompositeColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.ResetChildCompositeColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.ChildCompositeColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.ShouldSerializeChildCompositeConfiguration">
      <summary>
            Gets whether the configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.ResetChildCompositeConfiguration">
      <summary>
            Resets the configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.ShouldSerializeChildWindowConfiguration">
      <summary>
            Gets whether the ChildWindowConfiguration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.ResetChildWindowConfiguration">
      <summary>
            Resets the ChildWindowConfiguration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.ShouldSerializeConfiguration">
      <summary>
            Gets whether the Configuration property should get serialized.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.ResetConfiguration">
      <summary>
            Resets the Configuration property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.HandleChildObjectChanged(System.Boolean,System.Drawing.Rectangle)">
      <summary>
            Handles a child object changed
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.SuspendChangeNotification">
      <summary>
            Suspends any change notification. Now no redraw or layout will occur. It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.ResumeChangeNotification(System.Boolean)">
      <summary>
            Resumes any layout notification suspended by <see cref="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.SuspendChangeNotification" />.  It returns howmay times it is suspended.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.UpdateTabButtonPaintParams(Qios.DevSuite.Components.QTabButtonPaintParams)">
      <summary>
            Overridden. Updates the TabButton paint params.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.CreateBalloon">
      <summary>
            Creates the balloon used for tooltips
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnVisibleChanged(System.EventArgs)">
      <summary>
            Overridden. Raises the VisibleChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Lays out the control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Handles the paint.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseMove event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnMouseEnter(System.EventArgs)">
      <summary>
            Handles the MouseEnter event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnMouseLeave(System.EventArgs)">
      <summary>
            Handles the MouseLeave event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseDown event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the MouseUp event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.HandleScrollStep">
      <summary>
            Handles a scroll step
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnEnabledChanged(System.EventArgs)">
      <summary>
            Raises the EnabledChanged event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnCompositeKeyPress(Qios.DevSuite.Components.QCompositeKeyboardCancelEventArgs)">
      <summary>
            Raises the CompositeKeyPress event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnSelectedItemChanged(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the SelectedItemChanged event. Remark: This event bubbles up to all the QComposites.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnPaintItem(Qios.DevSuite.Components.QCompositePaintStageEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.PaintItem" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnItemActivating(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemActivating" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnItemSelected(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemSelected" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnItemExpanded(Qios.DevSuite.Components.QCompositeExpandedEventArgs)">
      <summary>
            Raises the ItemExpanded event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnItemExpanding(Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs)">
      <summary>
            Raises the ItemExpanding event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnItemCollapsed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Raises the ItemCollapsed event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.OnItemCollapsing(Qios.DevSuite.Components.QCompositeCancelEventArgs)">
      <summary>
            Raises the ItemCollapsing event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.BeginInit">
      <summary>
            Begins the initialisation process, this suspends all the change notifications
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPage.EndInit">
      <summary>
            Ends the initialisation process, this resumes all the change notifications
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.CompositeKeyPress">
      <summary>
            Gets raised when the QComposite is about to handle navigation keys that are pressed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.SelectedItemChanged">
      <summary>
            Gets raised when the selected item is changed.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemSelected">
      <summary>
            Gets raised when the QCompositeItemBase is selected
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemExpanded">
      <summary>
            Gets raised when the item is expanded
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemExpanding">
      <summary>
            Gets raised when the child container is expanding
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemCollapsing">
      <summary>
            Gets raised when the item is collapsing
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemCollapsed">
      <summary>
            Gets raised when the item is collapsed
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.PaintItem">
      <summary>
            Gets raised when a layer of the QCompositeItem is painted
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemActivating">
      <summary>
            Gets raised when the QCompositeItemBase is activating
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.Ribbon.QRibbonPage.ItemActivated">
      <summary>
            Gets raised when the QCompositeItemBase is activated
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.RibbonPageComposite">
      <summary>
            Gets the composite as a QRibbonPageComposite
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.Controls">
      <summary>
            New. Contains the controls of the QRibbonPage. It is new because this property does not get serialized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.BackColorPropertyName">
      <summary>
            Overridden. Gets the BackColor property name
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.BackColor2PropertyName">
      <summary>
            Overridden. Gets the BackColor2 property name
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.BorderColorPropertyName">
      <summary>
            Overridden. Gets the BorderColor property name
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.Items">
      <summary>
            Gets the collection of QRibbonItems of this QRibbon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.ChildCompositeColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used for child composites.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.ChildCompositeConfiguration">
      <summary>
            Contains the ChildCompositeConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.ChildWindowConfiguration">
      <summary>
            Contains the ChildWindowConfiguration for the QComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.Configuration">
      <summary>
            Contains the Configuration for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" />. DefaultValues are inherited from <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbon.DefaultPageConfiguration" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.ButtonConfiguration">
      <summary>
            New. Gets or sets the configuration of the QRibbonTabButton for this QRibbonPage. DefaultValues are inherited from ButtonConfiguration in <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbon.TabStripConfiguration" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.HotkeyText">
      <summary>
            Gets or sets a possible hotkey text. This text is displayed on the Hotkey window.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.Ribbon">
      <summary>
            Gets the Ribbon this page is on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.IsPerformingLayout">
      <summary>
            Gets whether this control is performing layout
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.ChangeNotificationSuspended">
      <summary>
            Gets how many times the change is suspended.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.IsInitializing">
      <summary>
            Gets whether this control is initializing
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.Composite">
      <summary>
            Gets the composite
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonPage.AssociatedComponents">
      <summary>
            Gets the associated components.
            </summary>
      <remarks>
            The list instance shouldn't be the same as the the Items instance, because overrides may add new designable items
            to the list.
            </remarks>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPageAppearance">
      <summary>
            Defines the Appearance for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPage" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPageAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow">
      <summary>
            The QRibbonMenuWindow is a predefined <see cref="T:Qios.DevSuite.Components.QCompositeWindow" /> that has it's parts configured so that it looks like
            the Office Application Menu. This window is normally used with a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton" />, but can of course
            be used on every item that takes a custom QCompositeWindow. Besides using the predefined windows, you can create custom
            QCompositeWindows yourself.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.#ctor(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartCollection,Qios.DevSuite.Components.QColorScheme,System.Windows.Forms.IWin32Window)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.CreateCompositeConfiguration">
      <summary>
            Overridden. Creates the configuration for the composite
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.CreateConfigurationInstance">
      <summary>
            Overridden. Creates the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Gets the color set for the Composite.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.OnItemExpanding(Qios.DevSuite.Components.QCompositeExpandingCancelEventArgs)">
      <summary>
            Overridden. Handles the ItemExpanding. Shows the SubMenus above the document area when requested.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.MinimumClientSize">
      <summary>
            Overridden. Gets or sets the minimum size of the client area of the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.CompositeConfiguration">
      <summary>
            New. Gets the CompositeConfiguration as a QRibbonMenuWindowCompositeConfiguration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.DocumentCaptionText">
      <summary>
            Gets or sets the caption of the document area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.Items">
      <summary>
            Overridden. Gets the Items of this QRibbonMenu. Those items are added to the ItemArea part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.DocumentItems">
      <summary>
            Gets the collection of items presented on the document area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.FooterItems">
      <summary>
            Gets the collection of items presented on the footer area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.HeaderItems">
      <summary>
            Gets the collection of items presented on the header area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.AssociatedComponents">
      <summary>
            Gets the designable items of this QRibbonMenuWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.Header">
      <summary>
            Gets the composite group that displays the header.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.Content">
      <summary>
            Gets the composite group that displays the content.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.Footer">
      <summary>
            Gets the composite group that displays the footer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.ItemArea">
      <summary>
            Gets the composite group that displays the item area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.ContentSeparator">
      <summary>
            Gets the separator between the item area and the document area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.DocumentArea">
      <summary>
            Gets the composite group that displays the document area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.DocumentCaption">
      <summary>
            Gets the caption of the document area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.DocumentAreaSeparator">
      <summary>
            Gets the separatgor between the document caption and the documents.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.Documents">
      <summary>
            Gets the composite group that displays the documents
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.BackColorPropertyName">
      <summary>
            Overridden. Gets the BackColor property name
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.BackColor2PropertyName">
      <summary>
            Overridden. Gets the BackColor2 property name
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.BorderColorPropertyName">
      <summary>
            Overridden. Gets the border color property name
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowConfiguration">
      <summary>
            Defines the configuration for a QRibbonMenuWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration">
      <summary>
            Defines the configuration for the composite on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.PropHeaderConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.PropContentConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.PropFooterConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.PropShowSubMenusAboveDocumentArea">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.PropShowSubMenusMargin">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden, gets the default layout order for the child parts.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.ShowSubMenusAboveDocumentArea">
      <summary>
            Gets or sets whether items of the ItemArea should show their sub menu's above the Document area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.ShowSubMenusMargin">
      <summary>
            Gets or sets the margin to use when ShowSubMenusAboveDocumentArea is set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.HeaderConfiguration">
      <summary>
            Contains the configuration of the header
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.ContentConfiguration">
      <summary>
            Contains the configuration of the content
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowCompositeConfiguration.FooterConfiguration">
      <summary>
            Contains the configuration of the footer
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration">
      <summary>
            Defines the configuration for the content section on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.PropItemAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.PropSeparatorConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.PropDocumentAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden, gets the default layout order for the child parts.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.ItemAreaConfiguration">
      <summary>
            Contains the configuration of the item area
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.SeparatorConfiguration">
      <summary>
            Contains the configuration of the separator
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowContentConfiguration.DocumentAreaConfiguration">
      <summary>
            Contains the configuration of the document area
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration">
      <summary>
            Defines the configuration for the content section on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.PropCaptionConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.PropSeparatorConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.PropDocumentsConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden, gets the default layout order for the child parts.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.CaptionConfiguration">
      <summary>
            Contains the configuration of the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.SeparatorConfiguration">
      <summary>
            Contains the configuration of the separator.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow.QRibbonMenuWindowDocumentAreaConfiguration.DocumentsConfiguration">
      <summary>
            Contains the configuration of the documents section.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem">
      <summary>
            Defines the item that is displayed on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" /> when it is collapsed
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.#ctor(Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration,Qios.DevSuite.Components.IQItemColorHost)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.CreateChildWindow">
      <summary>
            Overridden. Creates the QCompositeWindow
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.ClearCachedParents">
      <summary>
            Clears the cached parents
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.ConfigureChildWindow">
      <summary>
            Overridden. Configures the child window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Overridden. Handles some layout stages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Handles the paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.Configuration">
      <summary>
            New. Gets or sets the configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.CustomChildWindow">
      <summary>
            Overridden. Cannot be used on a QRibbonCollapsedItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.RibbonPanel">
      <summary>
            Gets a possible parent <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" /> if it is there.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.QRibbonCollapsedItemComposite">
      <summary>
            Defines the composite used on a QRibbonCollapsedItemWindow
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.QRibbonCollapsedItemComposite.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the ItemColorSet.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.QRibbonCollapsedItemComposite.CollapsedItem">
      <summary>
            Gets the parenting part as a QRibbonCollapsedItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.QRibbonCollapsedItemComposite.HasHotState">
      <summary>
            Gets whether this composite has a hot state.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.QRibbonCollapsedItemCompositeWindow">
      <summary>
            Defines the FloatingWindow for the QRibbonPanelCollapsedItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.QRibbonCollapsedItemCompositeWindow.#ctor(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartCollection,System.Windows.Forms.IWin32Window)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem.QRibbonCollapsedItemCompositeWindow.CreateComposite(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartCollection)">
      <summary>
            Overridden. Creates the composite.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QStatusBarPanelControlContainer">
      <summary>
            This class is a <see cref="T:Qios.DevSuite.Components.QStatusBarPanel" /> that can contain a control. To set the Control, use the <see cref="P:Qios.DevSuite.Components.QStatusBarPanelControlContainer.Control" />
            property at runtime. If you don't specify a <see cref="P:System.Windows.Forms.Control.Dock" /> property for the control, the control will be filled
            in the contents of the QStatusBarPanel.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QStatusBarPanelControlContainer.#ctor">
      <summary>
            Default Constructor. Creates a QStatusBarPanelControlContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QStatusBarPanelControlContainer.Control">
      <summary>
            Gets or sets the Control that should be displayed on the QStatusBarPanel.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerItem">
      <summary>
            This class represents one item on a <see cref="T:Qios.DevSuite.Components.QExplorerBar" />. A first level QExplorerItem represents a group item,
            a second level QExplorerItem represents a menuitem, and a third level QExplorerItem is shown in a QFloatingMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Constructor. Creates a new QExplorerItem and adds it to container.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.#ctor(System.Boolean)">
      <summary>
            Constructor. Creates a QExplorerItem with the specified parameters.
            </summary>
      <param name="separator">Indicates if the QExplorerItem is a separator.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.#ctor(System.String)">
      <summary>
            Constructor. Creates a QExplorerItem with the specified parameters.
            </summary>
      <param name="title">Contains the title of the QExplorerItem</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.#ctor(System.String,System.String)">
      <summary>
            Constructor. Creates a QExplorerItem with the specified parameters.
            </summary>
      <param name="title">Contains the title of the QExplorerItem.</param>
      <param name="name">Contains the name of the QExplorerItem.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.#ctor(System.String,System.String,System.Drawing.Icon,System.Windows.Forms.Shortcut)">
      <summary>
            Constructor. Creates a QExplorerItem with the specified parameters.
            </summary>
      <param name="title">Contains the title of the QExplorerItem.</param>
      <param name="itemName">Contains the name of the QExplorerItem.</param>
      <param name="icon">Contains the icon.</param>
      <param name="shortcut">Contains the shortcut.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.ShouldSerializeColorScheme">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QExplorerItem.ColorScheme" /> changes from the default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.ResetColorScheme">
      <summary>
            Resets the <see cref="P:Qios.DevSuite.Components.QExplorerItem.ColorScheme" /> to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.ResetConfiguration">
      <summary>
            Resets the button configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.ShouldSerializeConfiguration">
      <summary>
            Returns whether the button configuration should serialize.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.CreateChildCommandContainer">
      <summary>
            Creates a new ChildContainer if its not a group item. This is an instance of <see cref="T:Qios.DevSuite.Components.QFloatingMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.SetParent(Qios.DevSuite.Components.IQCommandContainer,Qios.DevSuite.Components.QCommand)">
      <summary>
            Overridden. Sets the parent of this QCommand
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.LoadFromXml(System.Xml.XPath.IXPathNavigable,Qios.DevSuite.Components.QMenuItemLoadType)">
      <summary>
            Overridden. Loads the contents of this QMenuItem from the specified XmlElement.
            </summary>
      <param name="itemElement">The element to load it from</param>
      <param name="loadType">specifies what to load</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.CreateAlternateConfigurationInstance">
      <summary>
            Creates a new QExplorerBarItemAlternateConfiguration. This may not be null.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.CreateColorSchemeInstance">
      <summary>
            Creates a new QColorScheme. This may not be null.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.CreateCommandCollection">
      <summary>
            Creates a new MenuItemCollection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.GetIconBackgroundBounds(Qios.DevSuite.Components.QCommandConfiguration)">
      <summary>
            Gets the background bounds of the icon bounds
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.GetGroupBoundsForPaint(System.Boolean)">
      <summary>
            Gets the bounds of the group item. This represents the OuterBounds of the QExplorerItem plus
            the PanelBounds. These bounds are corrected by the PositionOffset and are only used for painting.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerItem.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes this QExplorerItem
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.Configuration">
      <summary>
            Gets the configuration for this QExplorerItem.
            This configuration uses the values of a parenting <see cref="T:Qios.DevSuite.Components.QExplorerBar" />.
            You can override these values by setting values for this configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.Personalized">
      <summary>
            Gets whether the QExplorerItem is personalized. Only group items can be personalized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.DepersonalizeItemBounds">
      <summary>
            Gets or the DepersonalizeItem bounds
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.Control">
      <summary>
            Gets or sets the Control that will be placed on the QExplorerItem
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.IsEnabled">
      <summary>
            Overridden. Gets whether the QExplorerItem is enabled based on the Enabled, UserHasRightToExecute and 
            the UserRightBehavior properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.IsVisible">
      <summary>
            Overridden. Gets whether the QMenuItem is visible based on the Visible, UserHasRightToExecute, UserRightBehavior
            VisibleWhenPersonalized properties and whether its parent QMenu is Personalized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.IsAccessible">
      <summary>
            Overridden. Gets whether the QMenuItem is accessible. This is defined by whether the item is Visible, is Enabled, is not Information Only
            and if the user has the Right to execute it.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.ControlStretched">
      <summary>
            Gets or sets if the QCommandControlContainer must be stretched horizontally
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.GroupPanelBackgroundImageAlign">
      <summary>
            Gets or sets the alignment of the GroupPanelBackgroundImage for this QExplorerItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.GroupPanelBackgroundImage">
      <summary>
            Gets or sets the background image of the group panel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.MenuItems">
      <summary>
            Gets the collection of child ExplorerItems of this ExplorerItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.MouseIsOverMenuItem">
      <summary>
            Returns whether the mouse is over this ExplorerItem.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.Expanded">
      <summary>
            Determines if the QExplorerItem is expanded or collapsed
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.PanelBounds">
      <summary>
            Gets bounds of the ExplorerPanel. This is the Bounds where the subitems are positioned.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.GroupBounds">
      <summary>
            Gets the bounds of the group item. This represents the OuterBounds of the QExplorerItem plus
            the PanelBounds
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerItem.IconBoundsForPaint">
      <summary>
            Gets the bounds of the icon, used for painting. These bounds may overlap the ContentBounds.
            Use the IconBounds property to get the bounds used for space reserving for the icon.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemActivationOptions">
      <summary>
            Defines additional options to Activate a QCompositeItem.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemActivationOptions.None">
      <summary>
            Does nothing
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemActivationOptions.Activate">
      <summary>
            Activates the item.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemActivationOptions.Expand">
      <summary>
            Expands the item.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemActivationOptions.ExpandAndActivate">
      <summary>
            Expands and Activates the item.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemActivationOptions.FocusControl">
      <summary>
            If the item has a control, it tries to focus the control.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemActivationOptions.Automatic">
      <summary>
            First tries to focus the control, then to expand the item. If the item has nothing to expand it activates it.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeItemCreationOptions">
      <summary>
            Defines creation options for a QComposite item.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemCreationOptions.None">
      <summary>
            No options.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemCreationOptions.CreateItemsCollection">
      <summary>
            Create the items collection.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemCreationOptions.CreateChildItemsCollection">
      <summary>
            Create the child items collection.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemCreationOptions.CreateColorScheme">
      <summary>
            Creates the colorscheme for this item.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemCreationOptions.CreateConfiguration">
      <summary>
            Creates the configuration for this item.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeItemCreationOptions.Default">
      <summary>
            Default. This creates all.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeIconBackgroundPainter">
      <summary>
            QCompositeIconBackgroundPainter defines the object used by an as menu configured <see cref="T:Qios.DevSuite.Components.QComposite" /> to draw the icon background.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIconBackgroundPainter.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeIconBackgroundPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIconBackgroundPainter.DrawOnBounds">
      <summary>
            Gets or sets the bounds where the painter should paint on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIconBackgroundPainter.ClipOnPainter">
      <summary>
            Contains the ShapePainter where this IconBackgroundPainter must clip on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIconBackgroundPainter.Size">
      <summary>
            Gets or sets the size of the icon background
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIconBackgroundPainter.Margin">
      <summary>
            Gets or sets the margin
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeIconBackgroundPainter.ColorSet">
      <summary>
            Gets or sets the ColorSet
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeBalloon">
      <summary>
            Defines the default balloon window for the ToolTips on a QComposite like control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeBalloon.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeBalloon.CreateDefaultBalloonWindow">
      <summary>
            Overridden. Creates the default balloon window for when the reference isn't set.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeBalloonWindow">
      <summary>
            Defines the default BalloonWindow for the ToolTips on a QComposite like control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeBalloonWindow.BackColorPropertyName">
      <summary>
            Gets the name of the color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeBalloonWindow.BackColor2PropertyName">
      <summary>
            Gets the name of the color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeBalloonWindow.BorderColorPropertyName">
      <summary>
            Gets the name of the color.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCommandControlContainer">
      <summary>
            Container control for placing custom controls on QCommands
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.ResumeLayout(System.Boolean)">
      <summary>
            New implementation for ResumeLayout.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.OnParentChanged(System.EventArgs)">
      <summary>
            Handles the OnParentChanged call to attach event handlers to certain events.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles WindowMessages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.OnResize(System.EventArgs)">
      <summary>
            Handles the OnResizeCall to clear any offscreen bitmaps
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Paints the background of the control.
            </summary>
      <param name="pevent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the control
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Sets the control to visible or invisible.
            </summary>
      <param name="value">True if the control must be set to visible, else false</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.OnVisibleChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the VisibleChanged event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QCommandControlContainer.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden. Sets the bounds of the control
            </summary>
      <param name="x">X Position of the location to set</param>
      <param name="y">Y Position of the location to set</param>
      <param name="width">Width to set</param>
      <param name="height">Height to set</param>
      <param name="specified">Determines what properties to set</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandControlContainer.BackColor">
      <summary>
            Overridden. Gets or sets the BackColor of this Control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandControlContainer.Dock">
      <summary>
            Overridden. Dock property is not used in the QCommandControlContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandControlContainer.Anchor">
      <summary>
            Overridden. Anchor property is not used in the QCommandControlContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandControlContainer.Visible">
      <summary>
            New. Visible property is used internally.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandControlContainer.Enabled">
      <summary>
            New. Enabled property is used internally.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandControlContainer.Location">
      <summary>
            New. Location property is used internally.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCommandControlContainer.PreferredSize">
      <summary>
            Gets or sets the preferred size of the QCommandControlContainer
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QAppearanceUnit">
      <summary>
            Defines a class that contains unit types for appearances.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceUnit.Pixel">
      <summary>
            The value is measured in pixels
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QAppearanceUnit.Percent">
      <summary>
            The value is measured in percents.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFontStyle">
      <summary>
            Defines a struct used to specify various FontStyles at the same time.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontStyle.#ctor(System.Drawing.FontStyle)">
      <summary>
            Constructor, creates a QFontStyle from the specified style.
            </summary>
      <param name="style">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontStyle.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Constructor. Creates a QFonStyle with the specified parameters.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontStyle.ToFontStyle">
      <summary>
            Converts the QFontStyle to a FontStyle
            </summary>
      <returns>FontStyle</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontStyle.FromFontStyle(System.Drawing.FontStyle)">
      <summary>
            Creates a new QFontStyle based on a FontStyle.
            </summary>
      <param name="fontStyle">FontStyle to create a QFontStyle of</param>
      <returns>QFontStyle</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontStyle.Equals(System.Object)">
      <summary>
            Overridden. Return whether this QFontStyle is equal to obj.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontStyle.Compare(System.Object,System.Object)">
      <summary>
            Compares this obj1 to obj2
            </summary>
      <param name="obj1">Object to compare</param>
      <param name="obj2">Object to compare with</param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontStyle.GetHashCode">
      <summary>
            Overridden. Returns a hashcode for this QFontStyle.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontStyle.Style">
      <summary>
            Gets the actual FontStyle
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontStyle.Regular">
      <summary>
            Gets the Regular QFontStyle
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontStyle.Bold">
      <summary>
            Gets or sets whether the Font must be bold
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontStyle.Italic">
      <summary>
            Gets or sets whether the Font must be Italic
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontStyle.Strikeout">
      <summary>
            Gets or sets whether the Font must be Strikeout
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontStyle.Underline">
      <summary>
            Gets or sets whether the FontStyle is underlined.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartSharedProperties">
      <summary>
            Defines the properties of a QPart that can be shared with multiple QParts.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetVisible(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets whether the item is visible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the paddings for the specified part. Default it just returns the <see cref="P:Qios.DevSuite.Components.QPartSharedProperties.Padding" /> property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetMargins(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the margins for the specified part. Default it just returns the <see cref="P:Qios.DevSuite.Components.QPartSharedProperties.Margin" /> property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetMinimumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the minimum size for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetMaximumSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the maximum size for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetPreferredSize(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the prefered size for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetDirection(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the direction for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetAlignmentHorizontal(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the horizontal alignment for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetAlignmentVertical(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the vertical alignment for the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetContentAlignmentHorizontal(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the horizontal alignment for the content of the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetContentAlignmentVertical(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the vertical alignment for the content of the specified part. Default it just returns the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetOptions(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the options for the specified part. Default it just returns the property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSharedProperties.GetContentLayoutOrder(Qios.DevSuite.Components.IQPart)">
      <summary>
            Gets the content layout order for the specified part. Default it returns null
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.Padding">
      <summary>
            Gets the padding or sets the padding
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.Margin">
      <summary>
            Gets or sets the Margin
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.AlignmentHorizontal">
      <summary>
            Gets or sets the horizontal alignment.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.AlignmentVertical">
      <summary>
            Gets or sets the vertical alignment.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.ContentAlignmentHorizontal">
      <summary>
            Gets or sets the horizontal alignment for the content object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.ContentAlignmentVertical">
      <summary>
            Gets or sets the vertical alignment for the content object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.Direction">
      <summary>
            Gets or sets the direction of the QPart.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.Visible">
      <summary>
            Gets or sets the visible property
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.MinimumSize">
      <summary>
            Gets or sets the minimum size
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.MaximumSize">
      <summary>
            Gets or sets the maximum size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.PreferredSize">
      <summary>
            Gets or sets the preferred size of the item. This is especially usefull for FlowLayouts. Because than
            the item knows howmany items to render on one line. For other layouts it just sets itself to that size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.StretchHorizontal">
      <summary>
            Gets or sets whether it must be horizontal stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.StretchVertical">
      <summary>
            Gets or sets whether it must be vertical stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.ShrinkHorizontal">
      <summary>
            Gets or sets whether it must be horizontal shrinked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.SrhinkVertical">
      <summary>
            Gets or sets whether it must be vertical shrinked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSharedProperties.Options">
      <summary>
            Gets or sets additional options.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartSeparatorPainter">
      <summary>
            QPartSeparatorPainter defines the object used by <see cref="T:Qios.DevSuite.Components.IQPart" /> to draw separators.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSeparatorPainter.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSeparatorPainter.CreateReplaceColors(Qios.DevSuite.Components.QColorSet)">
      <summary>
            Creates a ColorMap with the colors to replace.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartSeparatorPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSeparatorPainter.AutoSize">
      <summary>
            Gets or sets if the seperator should autosize
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSeparatorPainter.DrawOnBounds">
      <summary>
            Gets or sets the bounds where the painter should paint on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSeparatorPainter.ColorSet">
      <summary>
            Gets or sets the ColorSet
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartSeparatorPainter.Mask">
      <summary>
            Gets or sets the mask to use. Red is replaced by BorderColor. Green by Background1. Blue by Background2.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartPaintContext">
      <summary>
            Defines a context to paint parts in
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartPaintContext.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartPaintContext.CreateFromControl(System.Windows.Forms.Control,System.Drawing.Graphics)">
      <summary>
            Creates a QPartPaintContext from the specified control
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartPaintContext.Push">
      <summary>
            Pushes the current context to make room for new properties.
            Note: you don't need to set all the properties again, only the one that differs from the 
            previous value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartPaintContext.Pull">
      <summary>
            Pulls the previos context so that it is the current context.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartPaintContext.Dispose(System.Boolean)">
      <summary>
            Disposes the object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartPaintContext.Dispose">
      <summary>
            Disposes the object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartPaintContext.Finalize">
      <summary>
            Finalizer
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartPaintContext.PreviousContext">
      <summary>
            Gets the previous context
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartPaintContext.AdditonalProperties">
      <summary>
            Gets or sets any additional properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartPaintContext.Graphics">
      <summary>
            Gets or sets the Graphics to calculate on
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartPaintContext.Font">
      <summary>
            Gets or sets the Font that is used to measure strings with.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartPaintContext.StringFormat">
      <summary>
            Gets or sets the StringFormat to measure strings with.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartPaintContext.Reverse">
      <summary>
            Gets or sets whether the painting of the child parts must be reversed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartPaintContext.VisibilitySelection">
      <summary>
            Gets or sets the visibility selection that should be used on the layout.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartPaintContext.RecursiveLevels">
      <summary>
            Gets or sets the number of levels to paint recursively. -1 for infinite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartPaintContext.CurrentLevel">
      <summary>
            Gets or sets the current level
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartMarkupTextPainter">
      <summary>
            Defines the object used by <see cref="T:Qios.DevSuite.Components.IQPart" /> to draw text
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartMarkupTextPainter.#ctor">
      <summary>
            Creates the TextPainter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartMarkupTextPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the object.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QToolItemCollectionEditor">
      <summary>
            Defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" /> on a <see cref="T:Qios.DevSuite.Components.QToolBar" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QToolItemCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor. Creates a new QMenuItemCollectionEditor.
            </summary>
      <param name="type">The Type to create this Editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QToolItemCollectionEditor.CreateCollectionForm">
      <summary>
            Overridden. Returns an instance of the used CollectionForm.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QToolItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Overridden. Edits the specified <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QToolItemCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QToolItemCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QThemeInfoTypeConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QThemeInfoTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> to a given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QThemeInfoTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> to the given destinationType.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QTabControlControlsCollectionEditor">
      <summary>
            Defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.QTabControlControlsCollection" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlControlsCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor.
            </summary>
      <param name="type">The Type to create this editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlControlsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Overridden. Handles the EditValue
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlControlsCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QTabControlControlsCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QMenuItemCollectionEditor">
      <summary>
            Defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor. Creates a new QMenuItemCollectionEditor.
            </summary>
      <param name="type">The Type to create this Editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemCollectionEditor.CreateCollectionForm">
      <summary>
            Overridden. Returns an instance of the used CollectionForm.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Overridden. Edits the specified <see cref="T:Qios.DevSuite.Components.QMenuItemCollection" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMenuItemCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QMarginConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QMargin" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarginConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QMargin" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarginConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Overridden. Converts an object to a <see cref="T:Qios.DevSuite.Components.QMargin" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarginConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QMargin" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarginConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this Typeconvert can convert a <see cref="T:Qios.DevSuite.Components.QMargin" /> from the given SourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarginConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because this type has properties, GetPropertiesSupported returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarginConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            Overridden. returns the properties of a <see cref="T:Qios.DevSuite.Components.QMargin" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarginConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because a <see cref="T:Qios.DevSuite.Components.QMargin" /> is a value type, it must create a new instance when a property changes.
            This method returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarginConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Returns a new instance of a <see cref="T:Qios.DevSuite.Components.QMargin" /> with the specified properties.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCommandControlContainerDesigner">
      <summary>
            Defines a ParentControlDesigner for the <see cref="T:Qios.DevSuite.Components.QCommandControlContainer" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCommandControlContainerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the designer
            </summary>
      <param name="component">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCommandControlContainerDesigner.DrawGrid">
      <summary>
            Gets or sets if the grid should be drawn
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QCommandControlContainerDesigner.SelectionRules">
      <summary>
            Gets the selection rules
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationArea">
      <summary>
            this class implements the navigationArea for the TabStrip on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationArea.DefaultTotalButtonCount">
      <summary>Contains the default total button count.</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationArea.#ctor(Qios.DevSuite.Components.Ribbon.QRibbonTabStrip)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationArea.Help">
      <summary>
            Gets the Help Button Area
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationArea.MdiClose">
      <summary>
            Gets the MdiClose Button Area
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationArea.MdiRestore">
      <summary>
            Gets the MdiRestore Button Area
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationArea.MdiMinimize">
      <summary>
            Gets the MdiMinize Button Area
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonTabStripNavigationArea.RequestedButtonCount">
      <summary>
            Gets the default button count;
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonItemBar">
      <summary>
            Defines a bar for <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItem" /> instances.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBar.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBar.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBar.SetConfigurationBaseProperties(System.Boolean)">
      <summary>
            Sets the base of the configurationProperties based on whether this group has a RibbonPanel and is drawn.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBar.FindItemBar(Qios.DevSuite.Components.IQPart)">
      <summary>
            Tries to find the QRibbonItemBar from the specified fromPart.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBar.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the ItemColorSet for this QRibbonItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonItemBar.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Handles the paint stage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemBar.Configuration">
      <summary>
            New. Gets or sets the configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonItemBar.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration">
      <summary>
            Contains configuration properties for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonItemGroup" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.PropIconConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.PropTitleConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.PropDropDownConfiguration">
      <summary> Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.PropChildWindowConfiguration">
      <summary> Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested property count.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.CreateAppearance">
      <summary>
            Creates the appeareance for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden. Gets the defaultContentPartLayoutOrder
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.IconConfiguration">
      <summary>
            Gets the configuration of the icon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.TitleConfiguration">
      <summary>
            Gets the configuration of the title.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.DropDownButtonConfiguration">
      <summary>
            Gets the configuration of the drop down button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemConfiguration.ChildWindowConfiguration">
      <summary>
            Gets the configuration of the child floating window that shows the items when collapsed.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemAppearance">
      <summary>
            Defines the Appearance for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconConfiguration">
      <summary>
            Defines the IconConfiguration for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconConfiguration.PropAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconConfiguration.GetRequestedCount">
      <summary>
            Overridden gets the requested property count
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconConfiguration.GetPaddings(Qios.DevSuite.Components.IQPart)">
      <summary>
            Overridden. Gets the paddings.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconConfiguration.Appearance">
      <summary>
            Gets the appearance of the icon of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconAppearance">
      <summary>
            Defines the appearance of the icon on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemIconAppearance.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemChildWindowConfiguration">
      <summary>
            Defines the configuration for the child container of <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItem" /> that shows the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" /> items on a floating window.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCollapsedItemChildWindowConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption">
      <summary>
            Implements a caption for a Form. This is usually used in combination with a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonForm" /> and a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.CreateComposite">
      <summary>
            Overridden. Creates the Composite.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.ShouldSerializeCaptionFont">
      <summary>
            Returns whether the property should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.ResetCaptionFont">
      <summary>
            Resets the property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden Sets the bounds core.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Overridden. Handles windows messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.OnParentChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the parent changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.OnItemActivated(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Overridden. Handles the activation of an item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.AdjustToControlStyle">
      <summary>
            Adjust this state to the specified control style.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.AdjustToControlIcon">
      <summary>
            Adjusts this icon to the control icon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.Dock">
      <summary>
            Overridden. Gets or sets the the DockStyle
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.CaptionFont">
      <summary>
            Gets or sets the Font for the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.RibbonCaptionComposite">
      <summary>
            Gets the composite as a QRibbonCaptionComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.ApplicationText">
      <summary>
            Gets the text presented in the application area of the caption. This is usually after the dash.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.DocumentText">
      <summary>
            Gets the text presented in the document area of the caption. This is usually before the dash.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.AttachedToControl">
      <summary>
            Gets the Control this QRibbonCaption is attached to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.AttachedToForm">
      <summary>
            Gets the Form this QRibbonCaption is attached to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.PaintTransparentBackground">
      <summary>
            Overridden. Default value is false here.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.LaunchBar">
      <summary>
            Gets or sets the LaunchBar that must be hosted on this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.ApplicationButton">
      <summary>
            Gets or sets the ApplicationButton that must be hosted on this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.Text">
      <summary>
            Overridden. Gets or sets the text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.Items">
      <summary>
            Overridden. Gets the Items of this QRibbonCaption. Those items are added to the CustomItemArea part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.AssociatedComponents">
      <summary>
            Gets the associated components.
            </summary>
      <remarks>
            The list instance shouldn't be the same as the the Items instance, because overrides may add new designable items
            to the list.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.Configuration">
      <summary>
            Gets the configuration of this QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.CloseButton">
      <summary>
            Gets the close button of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.MinimizeButton">
      <summary>
            Gets the minimize button of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.MaximizeButton">
      <summary>
            Gets the maximize button of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.RestoreButton">
      <summary>
            Gets the restore button of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.CurrentRestoreButton">
      <summary>
            Gets the current visible button (restore or maximize) based on the state.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.IconPart">
      <summary>
            Gets the icon part of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.ItemAreaPart">
      <summary>
            Gets the ItemArea part of the QRibbonCaption. This is the part the (custom) items are displayed on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.ButtonAreaPart">
      <summary>
            Gets the ButtonArea part of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.ApplicationButtonAreaPart">
      <summary>
            Gets the ApplicationButton Area part of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.LaunchBarAreaPart">
      <summary>
            Gets the LaunchBar part of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.TextAreaPart">
      <summary>
            Gets the TextArea part of the QRibbonCaption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.ControlBox">
      <summary>
            Gets or sets whether this area has a ControlBox. It hides the Icon and all the button when it has none.
            This should only be set in an override of <see cref="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.AdjustToControlStyle" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.MinimizeBox">
      <summary>
            Gets or sets whether this area has a MinimizeBox. It hides the button if it has no box.
            This should only be set in an override of <see cref="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.AdjustToControlStyle" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.MaximizeBox">
      <summary>
            Gets or sets whether this area has a MaximizeBox. It hides the button if it has no box.
            This should only be set in an override of <see cref="M:Qios.DevSuite.Components.Ribbon.QRibbonCaption.AdjustToControlStyle" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.IsMaximized">
      <summary>
            Gets whether this caption is maximized and shows the restore button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.BackColorPropertyName">
      <summary>
            Overridden. Gets the name of the color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.BackColor2PropertyName">
      <summary>
            Overridden. Gets the name of the color.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonCaption.BorderColorPropertyName">
      <summary>
            Overridden. Gets the name of the color.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextElementRoot">
      <summary>
            Defines the root element for <see cref="T:Qios.DevSuite.Components.QMarkupText" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementRoot.#ctor(Qios.DevSuite.Components.QMarkupTextStyle,System.String)">
      <summary>
            Protected constructor. Gets or sets the owningStyle and the Tag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementRoot.ApplyElementAttributes">
      <summary>
            Overridden.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextElementAnchor">
      <summary>
            Defines the Element for an anchor for <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElementAnchor.AttributeColor">
      <summary>
            Defines the attribute name of the 'color' attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElementAnchor.AttributeColorHot">
      <summary>
            Defines the attribute name of the 'colorHot' attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElementAnchor.AttributeColorActive">
      <summary>
            Defines the attribute name of the 'colorActive' attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElementAnchor.AttributeColorDisabled">
      <summary>
            Defines the attribute name of the 'colorDisabled' attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElementAnchor.AttributeHRef">
      <summary>
            Defines the attribute name of the 'href' attribute.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementAnchor.#ctor(Qios.DevSuite.Components.QMarkupTextStyle,System.String)">
      <summary>
            Protected constructor. Gets or sets the owningStyle and the Tag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementAnchor.ApplyElementAttributes">
      <summary>
            Overridden. Applies the element attributes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementAnchor.Color">
      <summary>
            Gets or sets the value of the 'color' attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementAnchor.ColorHot">
      <summary>
            Gets or sets the value of the 'colorHot' attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementAnchor.ColorActive">
      <summary>
            Gets or sets the value of the 'colorActive' attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementAnchor.ColorDisabled">
      <summary>
            Gets or sets the value of the 'colorActive' attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementAnchor.HRef">
      <summary>
            Gets or sets the HRef attribute for this element.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextElementBigSmall">
      <summary>
            Defines the Element for a Big or Small element for <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElementBigSmall.AttributeStep">
      <summary>
            Defines the attribute name of the 'step' attribute.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementBigSmall.#ctor(Qios.DevSuite.Components.QMarkupTextStyle,System.String)">
      <summary>
            Protected constructor. Gets or sets the owningStyle and the Tag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementBigSmall.ApplyElementAttributes">
      <summary>
            Overridden, applies the attributes.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementBigSmall.Step">
      <summary>
            Gets or sets the value of the 'step' attribute.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupTextElementFont">
      <summary>
            Defines the Element for a Font for <see cref="T:Qios.DevSuite.Components.QMarkupText" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElementFont.AttributeFace">
      <summary>
            Defines the attribute name of the 'face' attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElementFont.AttributeSize">
      <summary>
            Defines the attribute name of the 'size' attribute.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMarkupTextElementFont.AttributeColor">
      <summary>
            Defines the attribute name of the 'color' attribute.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementFont.#ctor(Qios.DevSuite.Components.QMarkupTextStyle,System.String)">
      <summary>
            Protected constructor. Gets or sets the owningStyle and the Tag.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementFont.ReadFaceAttribute(System.Xml.XmlNode)">
      <summary>
            Tries to read the Face attribute and returns the name of the FontFamily. Returns null when not possible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupTextElementFont.ApplyElementAttributes">
      <summary>
            Overridden, applies the attributes. Returns whether the attributes changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementFont.Face">
      <summary>
            Gets or sets the value for the 'face' attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementFont.Size">
      <summary>
            Gets or sets the value of the 'Size' attribute.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupTextElementFont.Color">
      <summary>
            Gets or sets the value of the 'color' attribute.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupLabel">
      <summary>
            The QMarkupLabel is an advanced label that allows text to be formatted. For this purpose it implements a small subset of HTML. This should be written
            in legal XML. So when formatting, be sure to end empty tags like 'BR' with a slash like this is done in XML. Next to formatting
            you can make the QMarkupLabel interactive by using anchors.
            </summary>
      <remarks>
            To use the QMarkupLabel you can set the <see cref="P:Qios.DevSuite.Components.QMarkupLabel.MarkupText" /> or <see cref="P:Qios.DevSuite.Components.QMarkupLabel.Text" /> property. The <see cref="P:Qios.DevSuite.Components.QMarkupLabel.MarkupText" /> property allows you to format your text. The <see cref="P:Qios.DevSuite.Components.QMarkupLabel.Text" /> property does not apply any format<br /><br />
            To see the tags that can be used in QMarkupText, see the <a href="088eec04-2535-4aeb-9092-638574e8a38b.htm">QMarkupText XML Reference</a>.<br /><br />
            You can configure the QMarkupLabel with the <see cref="P:Qios.DevSuite.Components.QMarkupLabel.Configuration" /> property.
            You can implement your own tags or add custom format to existing tags with the <see cref="P:Qios.DevSuite.Components.QMarkupLabel.CustomStyles" /> property. See <see cref="T:Qios.DevSuite.Components.QMarkupText" /> (which is used internally) for additional information on implementing your own elements.<br /><br />
            To handle mouse events, implement an event handler for the several events like <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseEnter" /> or <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementLinkClick" />.
            <seealso cref="T:Qios.DevSuite.Components.QMarkupText" /></remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.ShouldSerializeConfiguration">
      <summary>
            Returns whether this configuration should serialize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.ResetConfiguration">
      <summary>
            Resets this configuration to its default values.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.CreateAppearanceInstance">
      <summary>
            Overridden. Returns a new QMarkupLabelAppearance.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>
            Overridden. Processes a dialog key
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden, checks if a Link is pressed
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden, handles the Mouse down
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden, handles the Mouse up
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnMouseLeave(System.EventArgs)">
      <summary>
            Handles a MouseLeave.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnGotFocus(System.EventArgs)">
      <summary>
            Handles the GotFocus.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnLostFocus(System.EventArgs)">
      <summary>
            Handles the LostFocus.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnEnabledChanged(System.EventArgs)">
      <summary>
            Handles the EnabledChanged.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden, handles the Layout of the QMarkupLabel
            </summary>
      <param name="levent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden, handles the paint
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnFontChanged(System.EventArgs)">
      <summary>
            Handles a change in the Font.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnColorsChanged(System.EventArgs)">
      <summary>
            Handles Colors changed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnElementMouseEnter(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseEnter" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnElementMouseLeave(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseLeave" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnElementMouseDown(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnElementMouseUp(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnElementMouseClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnElementLinkClick(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementLinkClick" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnElementGotFocus(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementGotFocus" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabel.OnElementLostFocus(Qios.DevSuite.Components.QMarkupTextElementEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QMarkupLabel.ElementLostFocus" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseEnter">
      <summary>
            Occurs when the mouse enters an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseLeave">
      <summary>
            Occurs when the mouse leaves an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseDown">
      <summary>
            Occurs when the user presses the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseUp">
      <summary>
            Occurs when the user releases the mousebutton on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupLabel.ElementMouseClick">
      <summary>
            Occurs when the user clicks on an element.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupLabel.ElementLinkClick">
      <summary>
            Occurs when the user clicks on a link.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupLabel.ElementGotFocus">
      <summary>
            Occurs when an element gets the focus
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QMarkupLabel.ElementLostFocus">
      <summary>
            Occurs when an element lost the focus
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.Appearance">
      <summary>
            Overridden. Gets the QAppearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.Configuration">
      <summary>
            Gets the configuration for the QMarkupLabel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.Text">
      <summary>
            Overridden. Gets or sets the Text. This property does not apply any formatting. To format the text, use <see cref="P:Qios.DevSuite.Components.QMarkupLabel.MarkupText" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.MarkupText">
      <summary>
            Gets or sets the Markup text for this QMarkupLabel. The formatting happens in XML.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.Font">
      <summary>
            Overridden. Gets or sets the Font object
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.CustomStyles">
      <summary>
            Gets the collection with custom styles. This can be used to handle custom tags or handle default tags
            different than the regular behavior.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.MarkupTextObject">
      <summary>
            Gets the MarkupText object that is used for the rendering and drawing of the custom text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.Root">
      <summary>
            Gets the root element of the MarkupText object that is used for the rendering and drawing of the custom text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.BackColorPropertyName">
      <summary>
            Overridden gets the BackColor property name
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.BackColor2PropertyName">
      <summary>
            Overridden gets the second BackColor property name
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMarkupLabel.BorderColorPropertyName">
      <summary>
            Overridden gets the Border color property name
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMarkupLabelAppearance">
      <summary>
            Define the Appearance class for a <see cref="T:Qios.DevSuite.Components.QMarkupLabel" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMarkupLabelAppearance.#ctor">
      <summary>
            Constructor, creates the Appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeChangeEventHandler">
      <summary>
            Defines the delegate for the Change event on the QComposite
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeChangeEventArgs">
      <summary>
            Defines the EventArgs for the Change event on the QComposite
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeChangeEventArgs.#ctor(System.Boolean,System.Drawing.Rectangle)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeChangeEventArgs.PerformLayout">
      <summary>
            Gets whether the PerformLayout should be called on the parent control
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QCompositeChangeEventArgs.InvalidateRectangle">
      <summary>
            Gets the rectangle to be invalidated. Rectangle.Empty if the whole client area should be invalidated.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QThemeInfoCollection">
      <summary>
            Contains a collection of <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> objects.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.#ctor(Qios.DevSuite.Components.QColorSchemeBase)">
      <summary>
            Constructor. Creates a new QThemeInfoCollection for the specified QColorScheme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.Add(Qios.DevSuite.Components.QThemeInfo)">
      <summary>
            Adds a <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> object to the collection.
            </summary>
      <param name="info">the info to add.</param>
      <returns>The index at which the info has been added.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.Insert(System.Int32,Qios.DevSuite.Components.QThemeInfo)">
      <summary>
            Inserts a QThemeInfo object into the collection.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.Remove(Qios.DevSuite.Components.QThemeInfo)">
      <summary>
            Removes a <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> from the collection. If info is a SystemTheme an exception is raised.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the specified <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> at position index from the collection. If info is a SystemTheme an exception is raised.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.IndexOf(Qios.DevSuite.Components.QThemeInfo)">
      <summary>
            Returns the Index of the specified <see cref="T:Qios.DevSuite.Components.QThemeInfo" />. Returns -1 if not found.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.IndexOf(System.String)">
      <summary>
            Returns the index of the <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> with the specified themeName. Returns -1 if not found.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.Contains(Qios.DevSuite.Components.QThemeInfo)">
      <summary>
            Returns whether this QThemeInfoCollection contains the specified <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.Contains(System.String)">
      <summary>
            Returns whether this QThemeInfoCollection contains the <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> with themeName as its ThemeName.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.Clear">
      <summary>
            Clears the collection. It does not remove the system themes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.FindMatchingTheme(Qios.DevSuite.Components.QThemeInfo)">
      <summary>
            Finds the <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> object with the same FileName and WindowsSchemeName as the specified theme.
            </summary>
      <param name="theme">The QThemeInfo object to match it to.</param>
      <returns>The matching QThemeInfo object when there is one, else null</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QThemeInfoCollection.CopyTo(Qios.DevSuite.Components.QThemeInfo[],System.Int32)">
      <summary>
            Copies this collection to the QThemeInfo collection.
            </summary>
      <param name="themes">The array to copy to.</param>
      <param name="index">The index to start at.</param>
    </member>
    <member name="P:Qios.DevSuite.Components.QThemeInfoCollection.Item(System.Int32)">
      <summary>
            Returns the <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> object at the specified index.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QThemeInfoCollection.Item(System.String)">
      <summary>
            Returns the <see cref="T:Qios.DevSuite.Components.QThemeInfo" /> object with the specified themeName. Returns null if not found.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFontDefinition">
      <summary>
            Defines a class used to define a font without actually Maintaining a Font object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Single)">
      <summary>
            Creates a new QFontDefinition. When null or -1 values are specified the <see cref="M:Qios.DevSuite.Components.QFontDefinition.CreateNewFontIfNeeded(System.Drawing.Font)" /> uses
            the values of the specified font.
            </summary>
      <param name="fontFamily">The font family. Can be null.</param>
      <param name="bold">Indicates if the font must be bold</param>
      <param name="italic">Indicates if the font must be italic</param>
      <param name="strikeout">Indicates if the font must be strikeout</param>
      <param name="underline">Indicates if the font must be underlined</param>
      <param name="size">The fontSize, can be -1.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.#ctor(System.String,Qios.DevSuite.Components.QFontStyle,System.Single)">
      <summary>
            Creates a new QFontDefinition. When null or -1 values are specified the <see cref="M:Qios.DevSuite.Components.QFontDefinition.CreateNewFontIfNeeded(System.Drawing.Font)" /> uses
            the values of the specified font.
            </summary>
      <param name="fontFamily">The font family. Can be null.</param>
      <param name="style">The style. Is ignored when regular.</param>
      <param name="size">The fontSize, can be -1.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.#ctor(System.String,Qios.DevSuite.Components.QFontStyle,System.Single,System.Boolean)">
      <summary>
            Creates a new QFontDefinition. When null or -1 values are specified the <see cref="M:Qios.DevSuite.Components.QFontDefinition.CreateNewFontIfNeeded(System.Drawing.Font)" /> uses
            the values of the specified font.
            </summary>
      <param name="fontFamily">The font family. Can be null.</param>
      <param name="style">The style. Is ignored when regular.</param>
      <param name="size">The fontSize, can be -1.</param>
      <param name="throwException">Indicates if an exception must be thrown if the fontFamily does not exists</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.#ctor(Qios.DevSuite.Components.QFontStyle)">
      <summary>
            Creates a new QFontDefinition with the specified style.
            </summary>
      <param name="style">The style. Is ignored when regular.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.#ctor(System.Single,Qios.DevSuite.Components.QFontStyle)">
      <summary>
            Creates a new QFontDefinition with the specified size and style.
            </summary>
      <param name="size">Contains the size, can be -1.</param>
      <param name="style">The style. Is ignored when regular.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.#ctor(System.Single)">
      <summary>
            Creates a new QFontDefinition with the specified size.
            </summary>
      <param name="size">Contains the size, can be -1.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.FromFont(System.Drawing.Font)">
      <summary>
            Creates a new QFontDefinition from the specified font.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.GetValidFontFamily(System.String,System.Boolean)">
      <summary>
            Gets a valid fontFamily from the specified value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.RequiresNewCreation(System.Drawing.Font)">
      <summary>
            Returns whether this FontDefintion will create a new Font when <see cref="M:Qios.DevSuite.Components.QFontDefinition.CreateNewFontIfNeeded(System.Drawing.Font)" /> is called
            with the specified font.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.GetFontFromCache">
      <summary>
            Gets a Font with this QFontDefinition applied from the cache. If it doesn't exists in the cache
            it adds it.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.GetFontFromCache(System.Drawing.Font)">
      <summary>
            Gets a Font with this QFontDefinition applied from the cache. If it doesn't exists in the cache
            it adds it.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.CreateNewFont(System.Drawing.Font)">
      <summary>
            Creates a new font based on the settings. if baseFont is null, this fontDefinition must be filled with all information.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.CreateNewFontIfNeeded(System.Drawing.Font)">
      <summary>
            Creates a new Font with this properties when they differ from the baseFont. Otherwise it returns the baseFont.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.ApplyDefinition(Qios.DevSuite.Components.QFontDefinition)">
      <summary>
            Applies the specified definition to this font.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.Equals(System.Object)">
      <summary>
            Overridden. Return whether this QFontDefinition is equal to obj.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QFontDefinition.GetHashCode">
      <summary>
            Overridden. Returns a hashcode for this QFontDefinition.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontDefinition.Empty">
      <summary>
            Gets the Empty FontDefinition
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontDefinition.FontFamily">
      <summary>
            Gets or sets the FamilyName of the font. If this is set to null it is undefined.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontDefinition.Bold">
      <summary>
            Gets or sets whether this FontDefinition is bold.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontDefinition.Italic">
      <summary>
            Gets or sets whether this FontDefinition is Italic.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontDefinition.Underline">
      <summary>
            Gets or sets whether this FontDefinition is Underlined.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontDefinition.Strikeout">
      <summary>
            Gets or sets whether this FontDefinition is Strikeout.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontDefinition.Style">
      <summary>
            Gets or sets the FontStyle. If this is set to Regular it is undefined.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QFontDefinition.Size">
      <summary>
            Gets the Size. If this is set to -1 it is undefined.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartRectanglePainter">
      <summary>
            QPartRectanglePainter defines the object used by <see cref="T:Qios.DevSuite.Components.IQPart" /> to indicate that a rectangle is drawn.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartRectanglePainter.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartRectanglePainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartRectanglePainter.DrawOnBounds">
      <summary>
            Gets or sets the bounds where the painter should paint on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartRectanglePainter.Appearance">
      <summary>
            Gets or sets the appearance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartRectanglePainter.Properties">
      <summary>
            Gets or sets painter properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartRectanglePainter.FillerProperties">
      <summary>
            Gets or sets appearance filler properties
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartRectanglePainter.PropertiesToUse">
      <summary>
            Gets the properties to use for painting. This returns the default properties if there are no properties set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartRectanglePainter.FillerPropertiesToUse">
      <summary>
            Gets the properties to use for filling. This returns the default properties if there are no properties set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartRectanglePainter.Options">
      <summary>
            Gets or sets painter options.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartRectanglePainter.ColorSet">
      <summary>
            Gets or sets the QColorSet to use
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartLayoutStageProperties">
      <summary>
            Defines additional properties (depending on the layoutstage) for <see cref="M:Qios.DevSuite.Components.IQPartLayoutListener.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutStageProperties.#ctor(System.Drawing.Size,System.Drawing.Rectangle,System.Drawing.Size)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutStageProperties.#ctor(System.Drawing.Size,System.Drawing.Rectangle)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutStageProperties.#ctor(System.Drawing.Size,System.Drawing.Size)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartLayoutStageProperties.#ctor(System.Drawing.Size,System.Drawing.Size,Qios.DevSuite.Components.QPartApplyConstraintProperties)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutStageProperties.AvailableBounds">
      <summary>
            Gets the available bounds. This is filled for:
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.CalculatingBounds" /> ,
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.BoundsCalculated" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutStageProperties.AvailableSize">
      <summary>
            Gets the available size. This is filled for
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.ApplyingConstraints" />,
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.ConstraintsApplied" />,
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.CalculatingBounds" />,
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.BoundsCalculated" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutStageProperties.ActualContentSize">
      <summary>
            Gets the actual content size. This is filled for
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.ConstraintsApplied" />,
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.CalculatingBounds" />,
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.BoundsCalculated" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartLayoutStageProperties.ApplyConstraintProperties">
      <summary>
            Gets possible apply constraint properties. This can be null or is filled for
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.ApplyingConstraints" />,
            <see cref="F:Qios.DevSuite.Components.QPartLayoutStage.ConstraintsApplied" />,
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartImagePainter">
      <summary>
            QPartImagePainter defines the object used by <see cref="T:Qios.DevSuite.Components.IQPart" /> to draw an image.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartImagePainter.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartImagePainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartImagePainter.DrawOnBounds">
      <summary>
            Gets or sets the bounds where the painter should paint on.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartImagePainter.ColorToReplace">
      <summary>
            Gets or sets the ColorToReplace
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartImagePainter.ColorToReplaceWith">
      <summary>
            Gets or sets the ColorToReplaceWith;
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartImagePainter.DrawDisabled">
      <summary>
            Gets or sets whether the Icon must be drawn disabled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartImagePainter.Image">
      <summary>
            Gets or sets an alternative image to paint. If this is set it is used instead of the ContentObject of the part.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartImagePainter.KeepImageSize">
      <summary>
            Gets or sets whether the image must be painted with it's original size.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.IQManagedLayoutChild">
      <summary>
            Defines the interface for child items that can be layed-out with with IQPart system.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.IQManagedLayoutChild.IsManagedLayout">
      <summary>
            Indicates if this control should be managed layed-out
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QRelativePositions">
      <summary>
            This is used to indicate the most important relative position of controls to other controls (Basically used by menus).
            The exact relative position can be calculated, but this enumeration indicates what the most important part of that position is.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QRelativePositions.None">
      <summary>
            Unknown relative position
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QRelativePositions.Above">
      <summary>
            The control is Above the other control
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QRelativePositions.Below">
      <summary>
            The control is Below the other control
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QRelativePositions.Vertical">
      <summary>
            Contains the Above and the Below flags
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QRelativePositions.Left">
      <summary>
            The control is on the Left side of the other control
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QRelativePositions.Right">
      <summary>
            The control is on the Right side of the other control
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QRelativePositions.Horizontal">
      <summary>
            Contains the Left and Right flags
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QFontScope">
      <summary>
            This enumeration is used by controls to define the scope of the font they use. If the scope is set
            to <b>Local</b> the font defined by the <b>LocalFont</b> property of that control is used, else
            the Font is defined by Windows. This is mainly used by <see cref="T:Qios.DevSuite.Components.QControl" /> and <see cref="T:Qios.DevSuite.Components.QContainerControlBase" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFontScope.Local">
      <summary>
            When the scope is set to <b>Local</b> the control uses its <b>LocalFont</b></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFontScope.Global">
      <summary>
            When the scope is set to <b>Global</b>, it is managed by the QGlobalFont.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QFontScope.Windows">
      <summary>
            When the scope is set to <b>Windows</b> the control uses the font defined by Windows
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QButtonState">
      <summary>
            Defines the styles that a WindowCaptionButton can have.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QButtonState.Inactive">
      <summary>
            Defines a not active caption button.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QButtonState.Normal">
      <summary>
            Normal CaptionButton
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QButtonState.Hot">
      <summary>
            Hot CaptionButton
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QButtonState.Pressed">
      <summary>
            Pressed CaptionButton
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QThemeInfoCollectionEditor">
      <summary>
            This class defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.QThemeInfoCollection" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QThemeInfoCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor.
            </summary>
      <param name="type">The Type to create this Editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QThemeInfoCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QThemeInfoCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QSpacingConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QSpacing" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QSpacingConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QSpacing" /> object to a given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QSpacingConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Overridden. Converts an object to a <see cref="T:Qios.DevSuite.Components.QSpacing" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QSpacingConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QSpacing" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QSpacingConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this Typeconvert can convert a <see cref="T:Qios.DevSuite.Components.QSpacing" /> from the given SourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QSpacingConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because this type has properties, GetPropertiesSupported returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QSpacingConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            Overridden. Returns the properties of a <see cref="T:Qios.DevSuite.Components.QSpacing" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QSpacingConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because a <see cref="T:Qios.DevSuite.Components.QSpacing" /> is a value type, it must create a new instance when a property changes.
            This method returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QSpacingConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Returns a new instance of a <see cref="T:Qios.DevSuite.Components.QSpacing" /> with the specified properties.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QMarkupTextStyleCollectionEditor">
      <summary>
            Defines a CollectionEditor for the <see cref="T:Qios.DevSuite.Components.QMarkupTextStyleCollection" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarkupTextStyleCollectionEditor.#ctor(System.Type)">
      <summary>
            Default Constructor. Creates a new QMarkupTextStyleCollectionEditor.
            </summary>
      <param name="type">The Type to create this Editor for</param>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarkupTextStyleCollectionEditor.CreateCollectionForm">
      <summary>
            Overridden. Returns an instance of the used CollectionForm with the Help of the PropertyGrid set to visible.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarkupTextStyleCollectionEditor.CreateNewItemTypes">
      <summary>
            Overridden. Creates a list of types that the collection can contain.
            </summary>
      <returns>A list with types</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QMarkupTextStyleCollectionEditor.CreateCollectionItemType">
      <summary>
            Overridden. Returns the type that the collection can contain.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QFontDefinitionConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:Qios.DevSuite.Components.QFontDefinition" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontDefinitionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:Qios.DevSuite.Components.QMargin" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontDefinitionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Overridden. Converts an object to a <see cref="T:Qios.DevSuite.Components.QMargin" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontDefinitionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:Qios.DevSuite.Components.QMargin" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontDefinitionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this Typeconvert can convert a <see cref="T:Qios.DevSuite.Components.QMargin" /> from the given SourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontDefinitionConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because a <see cref="T:Qios.DevSuite.Components.QFontDefinition" /> is a value type, it must create a new instance when a property changes.
            This method returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFontDefinitionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Returns a new instance of a <see cref="T:Qios.DevSuite.Components.QFontDefinition" /> with the specified properties.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QCompositeItemBaseCodeSerializer">
      <summary>
            Defines a CodeDomSerializer for the <see cref="T:Qios.DevSuite.Components.QCompositeItemBase" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseCodeSerializer.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseCodeSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Serializes the specified <see cref="T:Qios.DevSuite.Components.QCompositeItemBase" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QCompositeItemBaseCodeSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
            Deserializes the specified <see cref="T:Qios.DevSuite.Components.QCompositeItemBase" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonTabButton">
      <summary>
            this class implements the TabButton for the <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonTabButton.CreateTabButtonConfiguration">
      <summary>
            Overridden. Creates the QRibbonTabButtonConfiguration
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostComposite">
      <summary>
            Defines the composite for the QRibbonLaunchBar
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostComposite.#ctor(Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostComposite.CreateConfiguration">
      <summary>
            Overridden. Creates the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostComposite.CreateChildCompositeConfiguration">
      <summary>
            Overridden. Creates the ChildCompositeConfiguration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostComposite.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the required QColorSet for this Composite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostComposite.Configuration">
      <summary>
            New. Casts the configuration as a QRibbonLaunchBarConfiguration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostComposite.LaunchBarHost">
      <summary>
            Gets the LaunchBarHost.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostComposite.LaunchBarAreaPart">
      <summary>
            Gets LaunchBarAreaPart of the QRibbonCaptionComposite.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHostComposite.ItemAreaPart">
      <summary>
            Gets the ItemAreaPart of the QRibbonCaptionComposite.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar">
      <summary>
            Defines a a QuickLaunchBar that is used with QRibbon. This component should be hosted on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost" /> or a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.CreateConfiguration">
      <summary>
            Creates the configuration
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.FindLaunchBar(Qios.DevSuite.Components.IQPart)">
      <summary>
            Tries to find the QRibbonLaunchBar from the specified fromPart.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Overridden. Gets the ItemColorSet for this QRibbonItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Overridden. Handles the layout stages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Handles the PaintStage.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.Configuration">
      <summary>
            New. Gets or sets the configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.CustomizeItem">
      <summary>
            Gets the Customize item. This is the item that enables you to customize the QRibbonLaunchBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.ShowMoreItem">
      <summary>
            Gets the ShowMore item. This is the item that is shown when there are more items then that fit on the launch bar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.Items">
      <summary>
            Contains the items of this QRibbonLaunchBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.CustomizeItems">
      <summary>
            Contains the items in the CustomizeMenu of this QRibbonLaunchBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.HotkeyTextCustomizeItem">
      <summary>
            Gets or sets the hotkey text for the customize item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.HotkeyTextShowMoreItem">
      <summary>
            Gets or sets the hotkey text for the show more item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.Active">
      <summary>
            Gets or sets whether this LaunchBar should be painted as active.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.DrawShape">
      <summary>
            Gets or sets whether the shape should be drawn. This only matters when <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.DrawShape" /> is undefined.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.ShouldDrawShape">
      <summary>
            Gets whether the shape is actually drawn. This depends on <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBar.DrawShape" /> and <see cref="P:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarConfiguration.DrawShape" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QVersionInfo">
      <summary>
            Contains the VersionInfo of Qios.DevSuite.Components.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QVersionInfo.QDevSuiteVersionRelease">
      <summary>
            contains the version number of the release version of Qios.DevSuite.Components.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QVersionInfo.QDevSuiteVersionDebug">
      <summary>
            contains the version number of the debug version of Qios.DevSuite.Components.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonDragEventArgs">
      <summary>
            Defines the event arguments for the <see cref="E:Qios.DevSuite.Components.QTabControl.TabButtonDragging" />, <see cref="E:Qios.DevSuite.Components.QTabControl.TabButtonDropped" /> and the <see cref="E:Qios.DevSuite.Components.QTabControl.TabButtonDragOver" /> events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonDragEventArgs.#ctor(Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabButton,Qios.DevSuite.Components.QTabStrip,Qios.DevSuite.Components.QTabButtonDockStyle,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonDragEventArgs.TargetDock">
      <summary>
            Gets the DockStyle where the source QTabButton will be docked on the target QTabButton
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonDragEventArgs.TargetButtonOrder">
      <summary>
            Gets the ButtonOrder that the source QTabButton will get on the current drop position
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonDragEventArgs.SourceTabButton">
      <summary>
            Gets the QTabButton that is being dragged.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonDragEventArgs.TargetTabButton">
      <summary>
            Gets the QTabButton that the dragged QTabButton is hovering over
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonDragEventArgs.TargetTabStrip">
      <summary>
            Gets the QTabStrip that the dragged QTabButton is hovering over
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonDragEventArgs.Cancel">
      <summary>
            Gets or sets if the drag and drop operation should be cancelled.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonDragEventArgs.AllowDrop">
      <summary>
            Gets or sets if the QTabButton can be dropped here.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabPageChangeEventArgs">
      <summary>
            Defines the event arguments for the <see cref="E:Qios.DevSuite.Components.QTabControl.ActivePageChanging" />, <see cref="E:Qios.DevSuite.Components.QTabControl.HotPageChanged" /> and the <see cref="E:Qios.DevSuite.Components.QTabControl.ActivePageChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabPageChangeEventArgs.#ctor(Qios.DevSuite.Components.QTabPage,Qios.DevSuite.Components.QTabPage,System.Boolean)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPageChangeEventArgs.FromPage">
      <summary>
            Gets the FromPage. This is the QTabPage that is deactivating / deactivated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPageChangeEventArgs.ToPage">
      <summary>
            Gets or sets the ToPage. This is the QTabPage that is activated. During the <see cref="E:Qios.DevSuite.Components.QTabControl.ActivePageChanging" /> event
            this can be set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabPageChangeEventArgs.Cancel">
      <summary>
            Gets or sets the whether the event should be canceled. During the <see cref="E:Qios.DevSuite.Components.QTabControl.ActivePageChanging" /> event
            this can be set.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabPageChangeEventHandler">
      <summary>
            Defines the delegate for various events on a <see cref="T:Qios.DevSuite.Components.QTabControl" /> and <see cref="T:Qios.DevSuite.Components.QTabPage" /></summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonDragEventHandler">
      <summary>
            Defines the delegate for various events on a <see cref="T:Qios.DevSuite.Components.QTabControl" /></summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QScrollBarHandler.QButtonAreaCollection.ButtonStateChanged">
      <summary>
            Gets raised when the state of the buttonArea changes.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QNotifyIconHelper">
      <summary>
            Contains helper methods for the <see cref="T:System.Windows.Forms.NotifyIcon" /> class. It can retrieve the bounds
            of an icon or the underlying native window of a NotificationIcon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QNotifyIconHelper.GetNotifyIconWindow(System.Windows.Forms.NotifyIcon)">
      <summary>
            Gets the native window of a NotifyIcon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QNotifyIconHelper.RetrieveNotificationAreaBounds">
      <summary>
            Retrieves the bounds of the complete NotificationArea on the system tray.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QNotifyIconHelper.RetrieveNotifyIconBounds(System.Windows.Forms.NotifyIcon)">
      <summary>
            Retrieves the bounds of a NotificationIcon
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuItemCollection">
      <summary>
            Is used by a <see cref="T:Qios.DevSuite.Components.QMenu" /> or a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> to maintain  the collection of QMenuItems.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.#ctor">
      <summary>
            Default Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.#ctor(Qios.DevSuite.Components.IQCommandContainer,Qios.DevSuite.Components.QCommand)">
      <summary>
            Constructor. Creates a new QMenuItemCollection for the specified Container.
            </summary>
      <param name="parentContainer">The container that this collection belongs to.</param>
      <param name="parentCommand">The parent MenuItem this QMenuItemCollection belongs to</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.Add(Qios.DevSuite.Components.QMenuItem)">
      <summary>
            Adds a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> to this collection.
            </summary>
      <param name="menuItem">The menuItem to add.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.Remove(Qios.DevSuite.Components.QMenuItem)">
      <summary>
            Removes a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> from this collection.
            </summary>
      <param name="menuItem">The menuItem to remove.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:Qios.DevSuite.Components.QMenuItem" /> at position index from this collection.
            </summary>
      <param name="index">The index of the MenuItem to remove</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.Insert(System.Int32,Qios.DevSuite.Components.QMenuItem)">
      <summary>
            Inserts a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> at the specified index.
            </summary>
      <param name="index">The index to insert the command.</param>
      <param name="menuItem">The MenuItem to insert.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.AddRange(Qios.DevSuite.Components.QMenuItem[])">
      <summary>
            Adds a range of <see cref="T:Qios.DevSuite.Components.QMenuItem" /> objects to this collection.
            </summary>
      <param name="menuItems">The array of QMenuItems to add.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.AddRange(Qios.DevSuite.Components.QMenuItemCollection)">
      <summary>
            Adds a Range of QMenuItems to this QMenuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.Contains(Qios.DevSuite.Components.QMenuItem)">
      <summary>
            Returns whether this collection contains the specified <see cref="T:Qios.DevSuite.Components.QMenuItem" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.GetMenuItemAtPosition(System.Drawing.Point)">
      <summary>
            Returns the MenuItem that has its bounds located at the specified point.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.IndexOf(Qios.DevSuite.Components.QMenuItem)">
      <summary>
            Returns the Index of the specified MenuItem. Returns -1 if not found.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.IndexOf(System.String)">
      <summary>
            Returns the index of the MenuItem that has name as its Name. Returns -1 if not found.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.GetMenuItemsWithHotkeyCount(System.Windows.Forms.Keys,System.Boolean)">
      <summary>
            Returns the amount of QMenuItems that have the specified hotkey as hotkey.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.GetMenuItemWithHotkey(System.Windows.Forms.Keys)">
      <summary>
            Returns the MenuItem With hotkey as its Hotkey. Returns null if not found. This method
            does not iterate through ChildCommands of every MenuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.GetNextMenuItemWithHotkey(Qios.DevSuite.Components.QMenuItem,System.Windows.Forms.Keys,System.Boolean,System.Boolean)">
      <summary>
            Returns the next MenuItem With hotkey as its Hotkey. Returns null if not found. This method
            does not iterate through ChildCommands of every MenuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.GetMenuItemWithHotkey(System.Windows.Forms.Keys,System.Int32)">
      <summary>
            Gets the MenuItem with the specified hotkey. Returns null if not found. This method
            iterate through child MenuItems for recursiveLevels levels. So if recursiveLevel = 1, 
            it iterates through direct child MenuItems.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.GetMenuItemWithShortcut(System.Windows.Forms.Keys)">
      <summary>
            Returns the MenuItem that has shortcut as its Shortcut. The MenuItem that has the shortcut cannot have ChildItems.
            Returns null if not found. This method iterates through the ChildItems of every MenuItem.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.FindMenuItemWithRelativeName(System.String)">
      <summary>
            Finds the MenuItem in the complete collection that has relativeName as its Name.
            The relativeName is the name of the of the parenting commands separated by the <see cref="P:Qios.DevSuite.Components.QCommand.NameSeparator" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.HasPersonalizedItems(System.Boolean)">
      <summary>
            Returns whether this QMenuItemCollection has personalized items. if includeChildMenus is true
            then the childMenus are also checked on personalizedItems.
            </summary>
      <param name="includeChildMenus">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.SetVisibleWhenPersonalizedOfAllMenuItems(System.Boolean,System.Boolean)">
      <summary>
            Sets the VisibleWhenPersonalized property of all the menuItems in this collection. when includeChildItems
            is true, it also sets the property of all the childItems.
            </summary>
      <param name="value">
      </param>
      <param name="includeChildItems">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.LoadFromXml(System.String,Qios.DevSuite.Components.QMenuItemLoadType)">
      <summary>
            Loads the MenuItems from the specified fileName with the specified loadOptions
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.LoadFromXml(System.Xml.XPath.IXPathNavigable,Qios.DevSuite.Components.QMenuItemLoadType)">
      <summary>
            Loads the contents of this QMenuItemCollection from the specified XmlElement.
            </summary>
      <param name="collectionElement">The element to load it from</param>
      <param name="loadOptions">Additional load options</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.SaveToXml(System.String,Qios.DevSuite.Components.QMenuItemSaveType)">
      <summary>
            Saves the menuItems in Xml to the specified file. with the specified saveOptions
            </summary>
      <param name="fileName">Contains the fileName to save the menuItems to.</param>
      <param name="saveType">Defines what to save.</param>
      <returns>The XmlElement the menuItems are saved to.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMenuItemCollection.SaveToXml(System.Xml.XPath.IXPathNavigable,Qios.DevSuite.Components.QMenuItemSaveType)">
      <summary>
            Saves the contents of this QMenuItemCollection to an XmlElement and returns that specified element.
            </summary>
      <param name="parentNode">Contains the parentNode. This can be an XmlElement or XmlDocument</param>
      <param name="saveOptions">Contains save options.</param>
      <returns>The xmlElement that is created under the parentNode</returns>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemCollection.Item(System.Int32)">
      <summary>
            Gets or sets the MenuItem at the specified index.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMenuItemCollection.Item(System.String)">
      <summary>
            Returns the QMenuItem that has name as its Name. Returns null if not found.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuItemLoadType">
      <summary>
            Defines the load type for the <see cref="M:Qios.DevSuite.Components.QMenuItemCollection.LoadFromXml(System.String,Qios.DevSuite.Components.QMenuItemLoadType)" /> method.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuItemLoadType.MatchByName">
      <summary>
            Indicates that no new items are created, the items in the Xml must match
            the items currently in the collection by name.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuItemLoadType.CreateNewItems">
      <summary>
            New items are created.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMenuItemSaveType">
      <summary>
            Defines the save type for the <see cref="M:Qios.DevSuite.Components.QMenuItemCollection.SaveToXml(System.String,Qios.DevSuite.Components.QMenuItemSaveType)" /> method.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuItemSaveType.CompleteMenuItem">
      <summary>
            All the information of the menuItem is saved to Xml.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMenuItemSaveType.PersonalizedStateOnly">
      <summary>
            Only the Personalized state is saved, instead of all the information on the menuItem.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMainMenuConfiguration">
      <summary>
            Contains configuration properties for instances of <see cref="T:Qios.DevSuite.Components.QMainMenu" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenuConfiguration.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.ItemMargin">
      <summary>
            Overridden. Gets or sets the margin between separate items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.ItemPadding">
      <summary>
            Overridden. Gets or sets the padding between the HotRectangle of an item and the contents of the item.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.IconSpacing">
      <summary>
            Overridden. Gets or sets the IconSpacing between the <see cref="T:Qios.DevSuite.Components.QMainMenu" /> and the items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.TitleSpacing">
      <summary>
            Gets or sets the spacing for the titles.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.MdiButtonsPadding">
      <summary>
            Gets or sets the padding between the <see cref="T:Qios.DevSuite.Components.QMainMenu" /> and the MdiButtons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.SimplePersonalizing">
      <summary>
            Determines if the personalizing behaviour should be simplified
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.MdiButtonsSize">
      <summary>
            Gets or sets the size of the of the MdiButtons.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.ActiveMdiChildIconPadding">
      <summary>
            Gets or sets the padding between the <see cref="T:Qios.DevSuite.Components.QMainMenu" /> and the ActiveMdiChildIcon.
            </summary>
      <remarks>
            The QMainMenu always tries to center the ActiveMdiChildIcon on the height of the QMainMenu minus the vertical padding.
            Adjusting the padding only has effect if the sum of the vertical padding and the height
            of the ActiveMdiChildIcon is greater than the height of the QMainMenu.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.ExpandOnItemClick">
      <summary>
            Overridden. Gets or sets whether the item expands if the use clicks on it, or only if the user clicks on the HasChildItemsImage
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.ToolBarPadding">
      <summary>
            Overridden. Gets or sets the ToolBarPadding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.MainMenuPadding">
      <summary>
            Gets or sets the padding between the edge and the contents of the <see cref="T:Qios.DevSuite.Components.QMainMenu" /></summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.MdiButtonsStyle">
      <summary>
            Gets or sets how the MDI Buttons (The minimize, restore and close buttons) are shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.MdiCloseButtonVisible">
      <summary>
            Gets or sets whether the MDI close button is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.MdiMinimizeButtonVisible">
      <summary>
            Gets or sets whether the MDI minimize button is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.MdiRestoreButtonVisible">
      <summary>
            Gets or sets whether the MDI restore button is visible.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.ActiveMdiChildIconVisible">
      <summary>
            Indicates if the icon of the ActiveMdiChild should be visible on the QMainMenu when maximized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.CustomMdiRestoreButtonMask">
      <summary>
            Gets or sets the Restorebutton mask when custom MDI buttons are drawn.
            In the Mask the Color Red is replaced by the TextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.CustomMdiMinimizeButtonMask">
      <summary>
            Gets or sets the MinimizeButton mask when custom MDI buttons are drawn. In the Mask the Color Red is replaced by the TextColor.
            In the Mask the Color Red is replaced by the TextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.CustomMdiCloseButtonMask">
      <summary>
            Gets or sets the CloseButton Mask when custom MDI buttons are drawn.
            In the Mask the Color Red is replaced by the TextColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.Stretched">
      <summary>
            Overridden. Gets or sets whether the <see cref="T:Qios.DevSuite.Components.QToolBar" /> should be stretched.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.UsedCustomMdiCloseButtonMask">
      <summary>
            Gets the used custom MDI restore button mask. This depends on whether <see cref="P:Qios.DevSuite.Components.QMainMenuConfiguration.CustomMdiCloseButtonMask" /> is set.
            When this is not set the default is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.UsedCustomMdiRestoreButtonMask">
      <summary>
            Gets the used custom MDI restore button mask. This depends on whether <see cref="P:Qios.DevSuite.Components.QMainMenuConfiguration.CustomMdiRestoreButtonMask" /> is set.
            When this is not set the default is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.UsedCustomMdiMinimizeButtonMask">
      <summary>
            Gets the used custom MDI minimize button mask. This depends on whether <see cref="P:Qios.DevSuite.Components.QMainMenuConfiguration.CustomMdiMinimizeButtonMask" /> is set.
            When this is not set the default is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.UseExpandingDelay">
      <summary>
            Overridden. Contains whether the QMainMenu should use the ExpandingDelay.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.IconsVisible">
      <summary>
            Overridden. Indicates if Icons should be shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.ShortcutsVisible">
      <summary>
            Overridden. Indicates if Shortcuts should be shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.SeparatorSpacing">
      <summary>
            Overridden. Gets or sets the spacing for the separators.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.HasChildItemsMask">
      <summary>
            Overridden. Not used with the QMainMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.HasChildItemsSpacing">
      <summary>
            Overridden. Not used with the QMainMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.HasChildItemsImageVisible">
      <summary>
            Overridden. Not used with the QMainMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenuConfiguration.LayoutType">
      <summary>
            Gets or sets how the items of a QMainMenu should be threated when they don't fit.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMainMenuMdiButtonsStyle">
      <summary>
            Is used by <see cref="T:Qios.DevSuite.Components.QMainMenuConfiguration" /> to indicate what type of MDI buttons are used.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMainMenuMdiButtonsStyle.Windows">
      <summary>
            Default Windows buttons
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QMainMenuMdiButtonsStyle.Custom">
      <summary>
            Custom buttons
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration">
      <summary>
            Contains configuration properties for instances of <see cref="T:Qios.DevSuite.Components.QExplorerItem" />.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.PropHasChildItemsMaskReverse">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.PropHasChildItemsMask">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.CurrentPropertyCount">
      <summary>Contains the amount of properties defined in this type</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.HasChildItemsMaskReverse">
      <summary>
            Gets or sets the base image that is used when a QExplorerBar has more items then visible.
            In the Mask the Color Red is replaced by the ExplorerBarHasMoreChildItemsColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.UsedHasChildItemsMaskReverse">
      <summary>
            Gets the actual used HasChildItemsMaskReverse. This is based on whether the HasChildItemsMaskReverse
            is set. If it is not set the default HasChildItemsMaskReverse is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.HasChildItemsMask">
      <summary>
            Gets or sets the base image that is used when a QExplorerBar has more items then visible.
            In the Mask the Color Red is replaced by the ExplorerBarHasMoreChildItemsColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QExplorerBarItemAlternateConfiguration.UsedHasChildItemsMask">
      <summary>
            Gets the actual used HasChildItemsMask. This is based on whether the HasChildItemsMas
            is set. If it is not set the default HasChildItemsMask is used.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockingWindow">
      <summary>
            This is a window that can be docked on the borders of a form, on other QDockingWindows or
            on a <see cref="T:Qios.DevSuite.Components.QDockBar" />. They can be set to a tabbed layout and slide in and out on a QDockBar.
            <br /><br />
            To use a QDockingWindow, create a new class and inherit from QDockingWindow. You can design a QDockingWindow like a normal form.
            Make sure to set the <see cref="P:Qios.DevSuite.Components.QDockingWindow.Owner" /> property before showing the Window.
            Use the <see cref="M:Qios.DevSuite.Components.QDockingWindow.DockWindow(Qios.DevSuite.Components.QDockBar)" /> method to dock the Window to its required location or on a <see cref="T:Qios.DevSuite.Components.QDockBar" />.
            Use <see cref="M:Qios.DevSuite.Components.QDockingWindow.UndockWindow(System.Int32,System.Int32)" /> to undock the window.
            </summary>
      <example>
        <code>
            //Create an instance of MyDockingWindow. MyDockingWindow inherits from QDockingWindow.
            MyDockingWindow window = new MyDockingWindow();
            
            //Set the Owner to a Form.
            window.Owner = this;
            
            //Dock the Window to the requested place
            window.DockWindow(this.qDockBar1);
            
            </code>
      </example>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.#ctor(System.Windows.Forms.Form)">
      <summary>
            Creates a QDockingWindow with a owner as its owner.
            </summary>
      <param name="owner">Defines the owner form. This is the form where the window will be docked on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.#ctor">
      <summary>
            Default Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.ShouldSerializeDockContainerAppearance">
      <summary>
            Is used by the designer to determine whether the <see cref="P:Qios.DevSuite.Components.QDockingWindow.DockContainerAppearance" /> changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.ResetDockContainerAppearance">
      <summary>
            Is used by the designer to Reset the <see cref="P:Qios.DevSuite.Components.QDockingWindow.DockContainerAppearance" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.ContainsScreenPoint(System.Drawing.Point)">
      <summary>
            Returns whether this QDockingWindow contains the specified point in screen coordinates.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.Close">
      <summary>
            Raises the closing event and closes the window. Returns true if the window closed,
            else false.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.MustBePersistedAfter(Qios.DevSuite.Components.IQPersistableObject)">
      <summary>
            Indicates if this persistableObject must be saved after an other persistableObject.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.SavePersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable)">
      <summary>
            Saves this Control to the parentElement. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.LoadPersistableObject(Qios.DevSuite.Components.QPersistenceManager,System.Xml.XPath.IXPathNavigable,System.Object)">
      <summary>
            Loads this Control from the specified persistableObjectElement. 
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.DockWindow(Qios.DevSuite.Components.QDockBar)">
      <summary>
            Docks the window to a <see cref="T:Qios.DevSuite.Components.QDockBar" />.
            </summary>
      <param name="dockBar">the QDockBar to dock the window on</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.DockWindow(Qios.DevSuite.Components.QDockBar,System.Boolean,System.Boolean)">
      <summary>
            Docks the Window to a <see cref="T:Qios.DevSuite.Components.QDockBar" />.
            </summary>
      <param name="dockBar">the QDockBar to dock the window on</param>
      <param name="slideMode">Indicates if the window must be added to the QDockBar in slided mode.</param>
      <param name="slideOut">Indicates if the window must be slided out. This is ignored when slideMode is false.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.DockWindow(Qios.DevSuite.Components.QDockingWindow,Qios.DevSuite.Components.QDockOrientation,System.Boolean)">
      <summary>
            Docks a window next to an other <see cref="T:Qios.DevSuite.Components.QDockingWindow" />. It docks the window in the specified
            orentation and before or after the destinationWindow.
            </summary>
      <param name="destinationWindow">Contains the Window to dock next to.</param>
      <param name="orientation">Contains the orientation to dock on</param>
      <param name="after">Indicates if the window should dock before or after the destinationWindow</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.UndockWindow(System.Int32,System.Int32)">
      <summary>
            Undocks the window and sets it to the specified left and top parameters (screencoordinates).
            </summary>
      <param name="left">the left position of the window</param>
      <param name="top">the top position of the window</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.SwapDockMode">
      <summary>
            Swaps the DockMode between slided and docked mode.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.SlideWindow(System.Boolean,System.Boolean)">
      <summary>
            If this window is docked to a <see cref="T:Qios.DevSuite.Components.QDockBar" /> it slides the window in or out.
            If slideIn is true the Window slides in, else it slides out. useMotion defines if motion should be used.
            If the <see cref="P:Qios.DevSuite.Components.QDockingWindow.SlideWithMotion" /> property is false this parameter is ignored.
            </summary>
      <param name="slideIn">Indicates if the window should slide in.</param>
      <param name="useMotion">If UseMotion is true, the Window will slide using a motion when <see cref="P:Qios.DevSuite.Components.QDockingWindow.SlideWithMotion" /> is set, else it will
            just expand or collapse.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.SwapWindowSlideState(System.Boolean)">
      <summary>
            Slides the window in if it is slided out and slides the window out when it is slided in.
            </summary>
      <param name="useMotion">Indicates if motion should be used. This is ignored when <see cref="P:Qios.DevSuite.Components.QDockingWindow.SlideWithMotion" /> is false.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnLoad(System.EventArgs)">
      <summary>
            Raises the Load event
            </summary>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnWindowDock(Qios.DevSuite.Components.QDockEventArgs)">
      <summary>
            Raises the WindowDock event
            </summary>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnWindowSlide(Qios.DevSuite.Components.QSlideEventArgs)">
      <summary>
            Raises the WindowSlide event
            </summary>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnWindowSlided(Qios.DevSuite.Components.QSlideEventArgs)">
      <summary>
            Raises the WindowSlided event
            </summary>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnCreateControl">
      <summary>
            Raises the CreateControl event
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnTimerElapsed(Qios.DevSuite.Components.QControlTimerEventArgs)">
      <summary>
            Overridden. the Sliding of the window
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overrides the OnLayout method. It clears the CachedElements.
            </summary>
      <param name="levent">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnNonClientAreaMouseMove(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Handles the NonClientArea mouse move.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseDown event. It checks if the mouse is on an interesting position
            and does the appropriate action.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnNonClientAreaMouseDown(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Overridden. Handles the NonClientAreaMouseDown
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnNonClientAreaMouseUp(Qios.DevSuite.Components.QNonClientAreaMouseEventArgs)">
      <summary>
            Handles the NonClientAreaMouseUp
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnNonClientAreaMouseLeave(System.EventArgs)">
      <summary>
            Handles the MouseLeave on the NonClientArea
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnUserStartsSizing(System.EventArgs)">
      <summary>
            Overridden. Handles the UserStartSizing event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnUserEndsSizing(System.EventArgs)">
      <summary>
            Overridden. Handles the UserEndsSizing event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnPaintNonClientArea(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the borders, the caption and the captionbuttons.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnEnter(System.EventArgs)">
      <summary>
            Overridden. Handles the OnEnter method. It invalidates the NonClientArea.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the OnLeave method. It invalidates the NonClientArea.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnColorsChanged(System.EventArgs)">
      <summary>
            Overrides the OnColorsChanged event. Reperforms the layout and redraws the window.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.OnWindowsXPThemeChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the change of a Windows XP Theme.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindow.Dispose(System.Boolean)">
      <summary>
            Disposes the Control.
            </summary>
      <param name="disposing">Is True when the user disposes the Control, it is False
            if the Dispose is called via the finalizer</param>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockingWindow.Load">
      <summary>
            Occurs before a QDockingWindow is displayed for the first time.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockingWindow.WindowDock">
      <summary>
            Occurs before a QDockingWindow is docked or undocked.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockingWindow.WindowSlide">
      <summary>
            Occurs before a QDockingWindow is sliding in or sliding out.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QDockingWindow.WindowSlided">
      <summary>
            Occurs after a QDockingWindow has slided in or slided out.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.CurrentWindow">
      <summary>
            Overridden. Returns the Current QDockingWindow. This is always this instance.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.Owner">
      <summary>
            Overridden. Gets or sets the owner form. When this form is set the QDockingWindow
            uses that form to dock on. If this property contains null, the window cannot dock.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.Text">
      <summary>
            Overridden. Gets or sets the Text property.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.DockContainerAppearance">
      <summary>
            Gets the or sets the QContainer for the QDockContainer.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.DockModifierKeys">
      <summary>
            Gets or sets the modifier keys the user needs to press to allow the QDockingWindow to dock.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.ShowInTaskbarUndocked">
      <summary>
            Gets or sets a value indicating whether the QDockingWindow is displayed in the Windows taskbar when undocked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.FormBorderStyleUndocked">
      <summary>
            Gets or sets the border style of the QDockingWindow when undocked.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.WindowGroupName">
      <summary>
            Contains a possible GroupName for the window. Every window with the same GroupName will be docked
            in the same group on the QDockBar.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.CanSlide">
      <summary>
            Indicates if this control can slide.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.SlidingTime">
      <summary>
            Contains the time it takes for the window to slide in or out (milliseconds).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.SlideWithMotion">
      <summary>
            Indicates if the window should slide with motion or just collapse or expand.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.BorderColor">
      <summary>
            Overridden. A QDockingWindow doesn't use the BorderColor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.Icon">
      <summary>
            Overridden. Gets or sets the Icon that is drawn in the <see cref="T:Qios.DevSuite.Components.QDockBar" /> when the QDockingWindow is sliding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.IsSlideOut">
      <summary>
            Gets whether the window is slided out.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.IsSlideIn">
      <summary>
            Gets whether the window is slided in.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.IsSliding">
      <summary>
            Gets whether the window is currently sliding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.IsSlidingIn">
      <summary>
            Gets whether the window is currently sliding in.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.IsSlidingOut">
      <summary>
            Gets whether the window is currently sliding out.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.ControlIndex">
      <summary>
            Overridden. Gets or sets the Control index. When this is tabbed it gets or sets the buttonOrder.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.CaptionBounds">
      <summary>
            Gets the CaptionBounds.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.ClientAreaMarginTop">
      <summary>
            Returns the topmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.ClientAreaMarginLeft">
      <summary>
            Returns the leftmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.ClientAreaMarginRight">
      <summary>
            Returns the rightmargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.ClientAreaMarginBottom">
      <summary>
            Returns the bottommargin of the ClientArea.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.BackColorPropertyName">
      <summary>
            Overridden. Returns the DockingWindowBackground1 color of the <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.BackColor2PropertyName">
      <summary>
            Overridden. Returns the DockingWindowBackground color of the <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockingWindow.BorderColorPropertyName">
      <summary>
            Overridden. Is not used by QDockingWindow, returns null.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockingWindowException">
      <summary>
            QDockingWindowException is an exception class for the <see cref="T:Qios.DevSuite.Components.QDockingWindow" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindowException.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindowException.#ctor(System.String)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindowException.#ctor(System.String,System.Exception)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockingWindowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockEventHandler">
      <summary>
            Defines the delegate for the dock events on a <see cref="T:Qios.DevSuite.Components.QDockingWindow" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QSlideEventHandler">
      <summary>
            Defines the delegate for the slide events on a <see cref="T:Qios.DevSuite.Components.QDockingWindow" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockEventArgs">
      <summary>
            Contains the EventArgs for the <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockEventArgs.#ctor(Qios.DevSuite.Components.QDockBar,Qios.DevSuite.Components.QDockControl)">
      <summary>
            Constructor. Creates an instance of QDockEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockEventArgs.DockBar">
      <summary>
            Gets the QDockBar the QDockingWindow is docking to (can be null).
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QDockEventArgs.DockControl">
      <summary>
            Gets the QDockControl the QDockingWindow is docking to (can be null).
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QSlideEventArgs">
      <summary>
            Contains the EventArgs for the <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QSlideEventArgs.#ctor(System.Boolean,System.Boolean)">
      <summary>
            Constructor. Creates an instance of QSlideEventArgs.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QSlideEventArgs.SlideIn">
      <summary>
            Determines if the QDockingWindow is sliding in or out
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QSlideEventArgs.UseMotion">
      <summary>
            Determines if the QDockingWindow uses motion while sliding in or out
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QModifierKeys">
      <summary>
            Defines the modifier keys
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QModifierKeys.None">
      <summary>
            No keys
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QModifierKeys.Shift">
      <summary>
            The shift key
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QModifierKeys.Alt">
      <summary>
            The alt key
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QModifierKeys.Control">
      <summary>
            The control key
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QControlSelector">
      <summary>
            This control gives you the possibility to let the user select a Control.
            This can be used for example for demo applications in combination with a PropertyGrid
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlSelector.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlSelector.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles mouse down events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlSelector.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles mouse up events.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlSelector.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the mosue move
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlSelector.OnSelectedControlChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QControlSelector.SelectedControlChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlSelector.OnHoveringControlChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QControlSelector.HoveringControlChanged" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QControlSelector.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Handles OnPaint.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="E:Qios.DevSuite.Components.QControlSelector.HoveringControlChanged">
      <summary>
            Gets raised when the user hovers over an other control while the QControlSelector is selecting.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QControlSelector.SelectedControlChanged">
      <summary>
            Gets raised when the user selects an other control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlSelector.WeakEventHandlers">
      <summary>
            Gets or sets whether this control must enable weak event handlers.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlSelector.IsSelectingControl">
      <summary>
            Gets whether the user is selecting a control
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlSelector.SelectedControl">
      <summary>
            Gets the currently selected control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QControlSelector.HoveringControl">
      <summary>
            Gets the current hovering control.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QContextMenu">
      <summary>
            A QContextMenu can be used to show context menus on controls. It is a <see cref="T:System.ComponentModel.Component" /> that can
            be defined design-time. It uses a <see cref="T:Qios.DevSuite.Components.QFloatingMenu" /> for the actual menu. Set the <see cref="P:Qios.DevSuite.Components.QContextMenu.MenuItems" />
            property to fill the menu with menu items. When a QContextMenu is used on a form, you can set the
            <b>QContextMenu</b> of that control to attach the menu to that control. Set the <see cref="P:Qios.DevSuite.Components.QContextMenu.Configuration" /> property
            to define the layout of the QContextMenu.
            <br /><br />
            The QContextMenu inherits from <see cref="T:Qios.DevSuite.Components.QControlComponent" />, so it also contains a <see cref="T:Qios.DevSuite.Components.QColorScheme" />
            and a <see cref="T:Qios.DevSuite.Components.QFontScope" /> property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Constructor. Creates a QContextMenu and adds it to container.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.#ctor">
      <summary>
            Default Constructor. Creates a QContextMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.ResetConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.ShouldSerializeConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.ResetToolTipConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.ShouldSerializeToolTipConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.HasListenerForControl(System.Windows.Forms.Control)">
      <summary>
            Returns whether there already is a listener for a specified control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.AddListener(System.Windows.Forms.Control)">
      <summary>
            Adds control to the array of listeners and makes sure this QContextMenu gets visible when
            the user pressed the right mouse button on the control.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.RemoveListener(System.Windows.Forms.Control)">
      <summary>
            Removes the control from the listeners array.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.HasListenerForNotifyIcon(System.Windows.Forms.NotifyIcon)">
      <summary>
            Returns whether this QContextMenu has a listener for the specified NotifyIcon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.AddListener(System.Windows.Forms.NotifyIcon)">
      <summary>
            Adds a listener for the specified notifyIcon
            </summary>
      <param name="notifyIcon">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.RemoveListener(System.Windows.Forms.NotifyIcon)">
      <summary>
            Removes a listener for the specified notifyIcon.
            </summary>
      <param name="notifyIcon">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.CreateFloatingMenu">
      <summary>
            Makes sure the underlying FloatingMenu is created.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.HandleKeyDown(System.Windows.Forms.Keys)">
      <summary>
            Obsolete. Use the overload containing the destinationControl and the message.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.HandleKeyUp(System.Windows.Forms.Keys)">
      <summary>
            Obsolete. Use the overload containing the destinationControl and the message.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Overridden. Handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.ShowMenu(System.Drawing.Point)">
      <summary>
            Shows the QContextMenu on the specified location (screen coordinates).
            </summary>
      <param name="location">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.ShowMenuOnNotifyIcon(System.Windows.Forms.NotifyIcon,System.Drawing.Point)">
      <summary>
            Shows the ContextMenu on a NotifyIcon.
            </summary>
      <param name="location">Contains the location (in screen coordinates).</param>
      <param name="notifyIcon">Contains the notifyIcon to show it on.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.ShowMenu(System.Drawing.Point,System.Windows.Forms.IWin32Window)">
      <summary>
            Shows the QContextMenu on the specified location (screen coordinates). and with the specified owner.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.ShowMenu(System.Drawing.Rectangle,System.Drawing.Point,Qios.DevSuite.Components.QRelativePositions,Qios.DevSuite.Components.QCommandDirections,System.Windows.Forms.IWin32Window)">
      <summary>
            Shows the QContextMenu on the menuLocation taken into account the openingItemBounds (when the menu needs to flip it flips over the opening item bounds).
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.HideMenu">
      <summary>
            Hides the QContextMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>
            Prefilters incoming application messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.OnMenuItemActivating(Qios.DevSuite.Components.QMenuCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContextMenu.MenuItemActivating" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.OnMenuItemSelected(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContextMenu.MenuItemSelected" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.OnMenuItemActivated(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContextMenu.MenuItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.OnMenuShowing(Qios.DevSuite.Components.QMenuCancelEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContextMenu.MenuShowing" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.OnMenuShowed(Qios.DevSuite.Components.QMenuEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContextMenu.MenuItemActivated" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.OnPaintMenuItem(Qios.DevSuite.Components.QPaintMenuItemEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContextMenu.PaintMenuItem" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.OnMenuItemMouseDown(Qios.DevSuite.Components.QMenuMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContextMenu.MenuItemMouseDown" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.OnMenuItemMouseUp(Qios.DevSuite.Components.QMenuMouseEventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QContextMenu.MenuItemMouseUp" /> event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QContextMenu.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContextMenu.MenuItemMouseDown">
      <summary>
            Gets raised when a the mouse hovers over a MenuItem and a button is pressed.
            The <see cref="E:Qios.DevSuite.Components.QContextMenu.MenuItemActivated" /> event should be used for handling the activation of a MenuItem,
            because it also allows keyboard activation and it takes into consideration the InformationOnly and Enabled properties.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContextMenu.MenuItemMouseUp">
      <summary>
            Gets raised when a the mouse hovers over a MenuItem and a button is released.
            The <see cref="E:Qios.DevSuite.Components.QContextMenu.MenuItemActivated" /> event should be used for handling the activation of a MenuItem,
            because it also allows keyboard activation and it takes into consideration the InformationOnly and Enabled properties.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContextMenu.MenuItemSelected">
      <summary>
            Gets raised when a user selects a menuItem via the mouse or the Keyboard
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContextMenu.MenuItemActivating">
      <summary>
            Gets raised when a user activates a MenuItem by clicking it, using a ShortCut, a HotKey or navigating
            to it with the keyboard. This event can be canceled.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContextMenu.MenuItemActivated">
      <summary>
            Gets raised when a user activates a menuItem by clicking it, using a ShortCut, a HotKey or navigating
            to it with the keyboard.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContextMenu.MenuShowing">
      <summary>
            Gets raised when a menuItem is activated and it has ChildMenuItems before the ChildMenu pops up. This
            event can be canceled.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContextMenu.MenuShowed">
      <summary>
            Gets raised when a menuItem is activated and it has ChildMenuItems when the ChildMenu is popped up.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QContextMenu.PaintMenuItem">
      <summary>
            Gets raised when a MenuItem must be painted.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.Configuration">
      <summary>
            Gets or sets the configuration for this QContextMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.ToolTipConfiguration">
      <summary>
            Gets the QToolTipConfiguration for this QControl
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.MenuItems">
      <summary>
            Gets the collection of MenuItems for this QContextMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.GlobalShortcutKeys">
      <summary>
            Obsolete since 1.2.0.20. Use the ShortcutScope
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.ShortcutScope">
      <summary>
            Gets or sets the ShortcutScope. This indicates when shorcuts should react.
            </summary>
      <remarks>
            When setting this value to Global, be carefull of the Shortcuts you chose. They get handled even when 
            an other application has an implementation for this shortcut.
            </remarks>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.OwnerWindow">
      <summary>
            Gets or sets the OwnerWindow. All the childMenus will be owned by the OwnerWindow.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.OwnerForm">
      <summary>
            Gets or sets the OwnerForm. All the childMenus will be owned by the OwnerForm. This
            must be set when the owning window has TopMost set to true.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.SuppressDefaultContextMenu">
      <summary>
            Gets or sets whether the default Windows ContextMenu must be suppressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.FloatingMenuCreated">
      <summary>
            Gets whether the underlying FloatingMenu is created
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QContextMenu.FloatingMenuVisible">
      <summary>
            Gets whether the underlying FloatingMenu is sisible
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QContextMenuShortcutScope">
      <summary>
            Defines the scope of the shortcuts of a QContextMenu
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContextMenuShortcutScope.AttachedControls">
      <summary>
            Shorcut only works when a Control the QContextMenu listens to is focused.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContextMenuShortcutScope.Application">
      <summary>
            Shortcut works when any Form of the Application is activated.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContextMenuShortcutScope.Global">
      <summary>
            Shorcuts work on the complete windows environment.
            When setting this value be carefull of the Shortcuts you chose. They get handled even when 
            an other application has an implementation for this shortcut.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapePainter">
      <summary>
            Defines the painter for <see cref="T:Qios.DevSuite.Components.QShape" /> instances.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapePainter.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapePainter.FillBackground(System.Drawing.Rectangle,Qios.DevSuite.Components.QShape,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QShapePainterProperties,Qios.DevSuite.Components.QAppearanceFillerProperties,Qios.DevSuite.Components.QPainterOptions,System.Drawing.Graphics)">
      <summary>
            Fills the background of the path. Returns a possible GraphicsPath.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapePainter.FillForeground(System.Drawing.Rectangle,Qios.DevSuite.Components.QShape,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QShapePainterProperties,Qios.DevSuite.Components.QAppearanceFillerProperties,Qios.DevSuite.Components.QPainterOptions,System.Drawing.Graphics)">
      <summary>
            Fills the foreground, drawing the borders, of the shape.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapePainter.Paint(System.Drawing.Rectangle,Qios.DevSuite.Components.QShape,Qios.DevSuite.Components.IQAppearance,Qios.DevSuite.Components.QColorSet,Qios.DevSuite.Components.QShapePainterProperties,Qios.DevSuite.Components.QAppearanceFillerProperties,Qios.DevSuite.Components.QPainterOptions,System.Drawing.Graphics)">
      <summary>
            Paints the complete shape. Returns a possible GraphicsPath
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapePainter.Default">
      <summary>
            Gets the default RoundedRectanglePainter.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapePainterProperties">
      <summary>
            Contains additional properties to Paint with <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QShapePainterProperties.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapePainterProperties.Options">
      <summary>
            Gets or sets additional QShapeDrawOptions.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapePainterProperties.Matrix">
      <summary>
            Gets or sets a possible matrix.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QShapePainterProperties.Default">
      <summary>
            Contains the default QShapePainterProperties
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QShapePainterOptions">
      <summary>
            Defines options to paint a shape with <see cref="T:Qios.DevSuite.Components.QShapePainter" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePainterOptions.None">
      <summary>
            No options
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePainterOptions.ReturnDrawnShape">
      <summary>
            Indicates that the drawn shape must be returned. When this is not specified the drawn shape is disposed
            will 
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePainterOptions.StayWithinBounds">
      <summary>
            Indicates that the shape will stay within the bounds. This has the effect that the size is decrease by 1.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QShapePainterOptions.Default">
      <summary>
            Contains the dfault options.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartHitTestResult">
      <summary>
            Defines results for hittesting a <see cref="T:Qios.DevSuite.Components.IQPart" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartHitTestResult.Nowhere">
      <summary>
            The mouse was nowhere.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartHitTestResult.Bounds">
      <summary>
            The mouse was on the specified part.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartHitTestResult.ScrollArea">
      <summary>
            The mouse was on a scroll area of the specified part.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartHitTestResult.BoundsCustom">
      <summary>
            The mouse was on the part, and it requires custom handling.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QContentOrientation">
      <summary>
            Defines how content of several objects must be oriented.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentOrientation.Horizontal">
      <summary>
            The contentl will be displayed horizontal.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentOrientation.VerticalDown">
      <summary>
            The content will be displayed vertical with the from top to bottom.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QContentOrientation.VerticalUp">
      <summary>
            The content will be displayed vertical with the from bottom to top.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QRibbonDesigner">
      <summary>
            This class defines the Designer for <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbon" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonDesigner.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QRibbonDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Intializes the designer
            </summary>
      <param name="component">
      </param>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonDesigner.Ribbon">
      <summary>
            Gets the TabControl that is currently designed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonDesigner.AddTabPageVerb">
      <summary>
            Gets the DesignerVerb to add a QRibbonPage
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QRibbonDesigner.TabPageType">
      <summary>
            Overridden. Returns the QRibbonPage type
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QPointFConverter">
      <summary>
            Defines a TypeConverter for the <see cref="T:System.Drawing.PointF" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPointFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            Overridden. Converts a <see cref="T:System.Drawing.PointF" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPointFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            Overridden. Converts an object to a <see cref="T:System.Drawing.PointF" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPointFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this TypeConverter can convert a <see cref="T:System.Drawing.PointF" /> to the given destinationType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPointFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Overridden. Returns whether this Typeconvert can convert a <see cref="T:System.Drawing.PointF" /> from the given SourceType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPointFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because this type has properties, GetPropertiesSupported returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPointFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            Overridden. returns the properties of a <see cref="T:System.Drawing.PointF" /> object.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPointFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Because a <see cref="T:System.Drawing.PointF" /> is a value type, it must create a new instance when a property changes.
            This method returns true.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QPointFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            Returns a new instance of a <see cref="T:System.Drawing.PointF" /> with the specified properties.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QFlagsEditor">
      <summary>
            A UITypeEditor to design flag enumerations.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFlagsEditor.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFlagsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Handles user interface, user input processing and value assignment
            </summary>
      <param name="context">Additional context information</param>
      <param name="provider">ServiceProvider to get additional services</param>
      <param name="value">The object to edit</param>
      <returns>New value of the given object</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QFlagsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            Overridden. Gets the edit style of this UITypeEditor.
            Always returns a DropDown style.
            </summary>
      <param name="context">Additional context information</param>
      <returns>Edit Style</returns>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow">
      <summary>
            The QRibbonMenuSubWindow is a predefined <see cref="T:Qios.DevSuite.Components.QCompositeWindow" /> that has it's parts configured so that it looks like
            a sub menu of the Office Application Menu. This window is normally used with a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonMenuWindow" />, but can of course
            be used on every item that takes a custom QCompositeWindow. Besides using the predefined windows, you can create custom
            QCompositeWindows yourself.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.#ctor(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartCollection,Qios.DevSuite.Components.QColorScheme,System.Windows.Forms.IWin32Window)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.CreateCompositeConfiguration">
      <summary>
            Overridden. Creates the configuration for the composite
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.MinimumClientSize">
      <summary>
            Overridden. Gets or sets the minimum size of the client area of the control.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.CompositeConfiguration">
      <summary>
            New. Gets the CompositeConfiguration as a QRibbonSubMenuWindowCompositeConfiguration
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.CaptionText">
      <summary>
            Gets or sets the caption of the menu area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.Items">
      <summary>
            Overridden. Gets the Items of this QRibbonMenu. Those items are added to the ItemArea part
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.Caption">
      <summary>
            Gets the composite group that displays the caption.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.ItemArea">
      <summary>
            Gets the composite group that displays the items.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.Separator">
      <summary>
            Gets the separator between the caption and the item area.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.CaptionTextItem">
      <summary>
            Gets the composite text that displays the caption.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration">
      <summary>
            Defines the configuration for the composite on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.PropCaptionConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.PropSeparatorConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.PropItemAreaConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.DefaultContentPartLayoutOrder">
      <summary>
            Overridden, gets the default layout order for the child parts.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.CaptionConfiguration">
      <summary>
            Contains the configuration of the caption
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.SeparatorConfiguration">
      <summary>
            Contains the configuration of the separator.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCompositeConfiguration.ItemAreaConfiguration">
      <summary>
            Contains the configuration of the item area
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCaptionConfiguration">
      <summary>
            Defines the configuration for the content section on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCaptionConfiguration.PropTextConfiguration">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCaptionConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCaptionConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCaptionConfiguration.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCaptionConfiguration.GetRequestedCount">
      <summary>
            Gets the requested size for the array.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonSubMenuWindow.QRibbonSubMenuWindowCaptionConfiguration.TextConfiguration">
      <summary>
            Contains the configuration of the text.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonPanelItemAreaConfiguration">
      <summary>
            Contains configuration properties for the caption of a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonPanel" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonPanelItemAreaConfiguration.#ctor">
      <summary>
            Default Constructor. Creates a configuration and sets the font.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton">
      <summary>
            Defines the button that is usually used in Ribbon applications as the 'File' menu. This is usually hosted
            on a <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonCaption" /> or <see cref="T:Qios.DevSuite.Components.Ribbon.QRibbonLaunchBarHost" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.CreateConfiguration">
      <summary>
            Overridden. Creates the configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.CreatePainters(Qios.DevSuite.Components.IQPartObjectPainter[])">
      <summary>
            Overridden. Creates the current painters.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.SetDisplayParent(Qios.DevSuite.Components.IQManagedLayoutParent)">
      <summary>
            Overridden. Sets the display parent.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.SynchronizeOverlayStart">
      <summary>
            Starts to synchronize the overlay. This sets it to the correct owner. It does everything except making it visible
            The visibility part is set on the finish, because the correct bounds must be calculated first.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.SynchronizeOverlayFinish">
      <summary>
            Finishes the overlay synchronisation. This sets the correct bounds and makes it visible when required.
            This method can be called multiple times without calling SynchronizeOverlayStart.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.ConfigureChildWindow">
      <summary>
            Overridden. Handles additional configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.OnItemExpanded(Qios.DevSuite.Components.QCompositeExpandedEventArgs)">
      <summary>
            Overridden, Contains additional functionality on the expension of the item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.OnItemCollapsed(Qios.DevSuite.Components.QCompositeEventArgs)">
      <summary>
            Overridden. Contains additional functionality on the collapse of an item.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.GetItemColorSet(System.Object,Qios.DevSuite.Components.QItemStates,System.Object)">
      <summary>
            Gets the default color set for this type of item based on the state
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.HandleLayoutStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartLayoutStage,Qios.DevSuite.Components.QPartLayoutContext,Qios.DevSuite.Components.QPartLayoutStageProperties)">
      <summary>
            Overridden. Handles the layout stages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.HandlePaintStage(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintStage,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Handles the Paint stage
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.ColorScheme">
      <summary>
            Gets or sets the QColorScheme that is used.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.HotkeyText">
      <summary>
            Overridden. Sets the default hotkey Text.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.Configuration">
      <summary>
            Contains the Configuration.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.Items">
      <summary>
            Overridden. Not used on this button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.ForegroundImage">
      <summary>
            Gets or sets the foreground image to draw before the background.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.BackgroundImage">
      <summary>
            Gets or sets the background image to draw behind the Icon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.BackgroundImageHot">
      <summary>
            Gets or sets the background image to draw behind the ApplicationImage when the button is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.BackgroundImagePressed">
      <summary>
            Gets or sets the background image to draw behind the ApplicationImage when the button is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.UsedBackgroundImage">
      <summary>
            Gets the used background image.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.UsedBackgroundImageHot">
      <summary>
            Gets the used background image when the item is hot.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.UsedBackgroundImagePressed">
      <summary>
            Gets the used background image when the item is pressed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.OverlayWindow">
      <summary>
            Gets the overlay window if there is one.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.OverlayVisible">
      <summary>
            Gets whether the overlay is visible
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay">
      <summary>
            Defines the Overlay that is visible on a QRibbonApplicationButton. This overlay is painted over other controls.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.#ctor(Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton)">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Handles the SetVisibleCore
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Handles the paint
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.OnMouseEnter(System.EventArgs)">
      <summary>
            Handle a mouse enter.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the mouse down.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.OnMouseLeave(System.EventArgs)">
      <summary>
            Handles the mouse leave.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the mouse down.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Handles the mouse up.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.WndProc(System.Windows.Forms.Message@)">
      <summary>
            Handels additional mouse messages.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QRibbonApplicationButton.QRibbonApplicationButtonOverlay.CreateParams">
      <summary>
            Gets the CreateParams for the window.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Ribbon.QPartApplicationButtonPainter">
      <summary>
            QPartApplicationButtonPainter defines the object used by <see cref="T:Qios.DevSuite.Components.IQPart" /> to draw an application button.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QPartApplicationButtonPainter.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Ribbon.QPartApplicationButtonPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Paints the object.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QPartApplicationButtonPainter.Size">
      <summary>
            Gets or sets the size to use for rendering, instead of the calculated part size.
            This can be used to accomplish an overlap by using negative margins.s
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Ribbon.QPartApplicationButtonPainter.ColorSet">
      <summary>
            Gets or sets the QColorSet to use
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTranslucentWindowOptions">
      <summary>
            Defines options for the QTransLucentWindow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTranslucentWindowOptions.None">
      <summary>
            No options are defined.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTranslucentWindowOptions.PaintMask">
      <summary>
            A mask is painted (and the <see cref="M:Qios.DevSuite.Components.QTranslucentWindow.OnPaintMask(System.Windows.Forms.PaintEventArgs)" /> method is called. This should be used if the resulting translucentWindow uses painting methods that
            clear the alpha channel and result in unwanted 'holes' in the QTranslucentWindow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QTranslucentWindowOptions.Default">
      <summary>
            Defines the default options.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QTabButtonPaintParams">
      <summary>
            Contains additional parameters for drawing a <see cref="T:Qios.DevSuite.Components.QTabButton" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QTabButtonPaintParams.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonBackground1">
      <summary>
            Gets or sets the first background color of a button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonBackground2">
      <summary>
            Gets or sets the second background color of a button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonBorder">
      <summary>
            Gets or sets the border color of a button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonTextDisabled">
      <summary>
            Gets or sets the text color of a disabled button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonText">
      <summary>
            Gets or sets the text color of a button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonShade">
      <summary>
            Gets or sets the color of the shade.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonActiveBackground1">
      <summary>
            Gets or sets the first background color of an active button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonActiveBackground2">
      <summary>
            Gets or sets the second background color of an active button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonActiveBorder">
      <summary>
            Gets or sets the border color of an active button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonActiveText">
      <summary>
            Gets or sets the text color of an active button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonHotBackground1">
      <summary>
            Gets or sets the first background color of a hot button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonHotBackground2">
      <summary>
            Gets or sets the second background color of a hot button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonHotBorder">
      <summary>
            Gets or sets the border color of a hot button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.ButtonHotText">
      <summary>
            Gets or sets the text color of a hot button.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.IconReplace">
      <summary>
            Gets or sets the replace color of the icon.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QTabButtonPaintParams.IconReplaceColorWith">
      <summary>
            Gets or sets the color to replace the <see cref="P:Qios.DevSuite.Components.QTabButtonPaintParams.IconReplace" /> color with.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QMainMenu">
      <summary>
            A QMainMenu can be used as a mainmenu on a form. Set the <see cref="P:Qios.DevSuite.Components.QMenu.MenuItems" />
            property to fill the menu with menu items. Set the <see cref="P:Qios.DevSuite.Components.QMainMenu.Configuration" /> property
            to define the layout of the QMainMenu. To set the configuration of the child menus, use the
            <see cref="P:Qios.DevSuite.Components.QMainMenu.ChildMenuConfiguration" />. When you host a QMainMenu on a
            <see cref="T:Qios.DevSuite.Components.QToolBarHost" /> it can be dragged and moved.	
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.ResetBevelAppearance">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.ShouldSerializeBevelAppearance">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.ResetConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.ShouldSerializeConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.DockMainMenu(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32)">
      <summary>
            Docks the mainMenu on the specified host, row and index.
            </summary>
      <param name="host">Specifies the toolBarHost where the mainMenu must be docked on.</param>
      <param name="rowIndex">Specifies the row where the mainMenu must be docked on. The first row has index 0.</param>
      <param name="toolBarIndex">Specifies what index the mainMenu must have on the row. The first toolBar has index 0.</param>
      <remarks>When this method is called, the requestedPosition is resetted to 0. Use another overload to specify the requestedPosition.</remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.DockMainMenu(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32,System.Int32)">
      <summary>
            Docks the mainMenu on the specified host, row and index and the requestedPosition.
            </summary>
      <param name="host">Specifies the toolBarHost where the mainMenu must be docked on.</param>
      <param name="rowIndex">Specifies the row where the mainMenu must be docked on. The first row has index 0.</param>
      <param name="toolBarIndex">Specifies what index the mainMenu must have on the row. The first toolBar has index 0.</param>
      <param name="requestedPosition">Specifies what the left (horizontal) or top (vertical) must be. The mainMenu will get that position when there are no other toolBars on that posisition.</param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.FloatMainMenu(System.Drawing.Point)">
      <summary>
             Floats the MainMenu to the specified point.
             </summary>
      <remarks>
             When the configuration has CanFloat set to false, it does nothing.
            </remarks>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.BeginInit">
      <summary>
            Begins the initialization process.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.EndInit">
      <summary>
            Ends the Initialization process.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.ShowMenu(System.Drawing.Rectangle,System.Drawing.Rectangle,Qios.DevSuite.Components.QRelativePositions,Qios.DevSuite.Components.QCommandDirections)">
      <summary>
            Overridden. Shows this QMainMenu, the parameters are ignored.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.ContainsOrIsContainerWithHandle(System.IntPtr)">
      <summary>
            Overridden. Gets whether this QToolBar is or contains the specified handle.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.SetVisibleCore(System.Boolean)">
      <summary>
            Overridden. Sets the visibility property
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.ResetChildMenuConfiguration">
      <summary>
            Is used by the Designer to Reset the property to its default value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.ShouldSerializeChildMenuConfiguration">
      <summary>
            Is used by the designer to determine whether the Property changes
            from the default value.
            </summary>
      <returns>True when the object should be serialized in code, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.HandleKeyDown(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Handles a KeyDown message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.HandleKeyUp(System.Windows.Forms.Keys,System.Windows.Forms.Control,System.Windows.Forms.Message)">
      <summary>
            Overridden. Handles a KeyUp message. Returns true when the message is handled, else false.
            </summary>
      <param name="keys">Contains the keys that were send</param>
      <param name="destinationControl">Contains the Control the keys are send to if this method returns false.</param>
      <param name="message">Contains the initial message</param>
      <returns>True when the message is handled, else false.</returns>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.PreFilterMessage(System.Windows.Forms.Message@)">
      <summary>
            Is used to PreFilter Application messages.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.DrawMenuItem(Qios.DevSuite.Components.QMenuItem,System.Drawing.StringFormat,Qios.DevSuite.Components.QCommandPaintOptions,System.Drawing.Graphics)">
      <summary>
            Overridden. Draws a <see cref="T:Qios.DevSuite.Components.QMenuItem" /> on a QMainMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseMove event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseDown event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            Overridden. Handles the MouseUp event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.OnMouseLeave(System.EventArgs)">
      <summary>
            Overridden. Handles the MouseLeave event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden draws the QMainMenu.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            Overridden. Draws the background.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary>
            Overridden. Sets the BoundsCore.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
            Overridden. Lays out this QMainMenu.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.OnParentChanged(System.EventArgs)">
      <summary>
            Overridden. Handles the ParentChanged event.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.Dispose(System.Boolean)">
      <summary>
            Overridden. Disposes the used resources.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QMainMenu.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Overridden, handles the OnConfigurationChanged event.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.Form">
      <summary>
            Gets or sets the form this QMainMenu belongs to. When this form is a MDI Form the MDI buttons and the Active Mdi Child Icon are shown.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.MdiForm">
      <summary>
            Gets the MdiForm. This is based on whether the <see cref="P:Qios.DevSuite.Components.QMainMenu.Form" /> property has its IsMdiContainer property set.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.MdiButtonsVisible">
      <summary>
            Gets whether the MdiButtons should be visible.
            This depends on the QMdiButtons.IsVisible and the state of the ActiveMdiChild.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.ActiveMdiIconVisible">
      <summary>
            Gets whether the ActiveMdiIcon should be visible. This depends whether there is an icon and the ActiveMdiChild is maximized.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.BevelAppearance">
      <summary>
            Gets the appearance for the bevel.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.Configuration">
      <summary>
            Gets or sets the Configuration of this QMainMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.RowIndex">
      <summary>
            Gets or sets the index of the row where the ToolBar must be placed on a ToolBarHost.
            When it is -1 it is added to the end of the host.
            <see cref="M:Qios.DevSuite.Components.QMainMenu.DockMainMenu(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32)" /> for more information.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.ToolBarIndex">
      <summary>
            Gets or sets the index where the ToolBar must be placed on a ToolBarHost.
            When it is -1 it is added to the end of the row.
            <see cref="M:Qios.DevSuite.Components.QMainMenu.DockMainMenu(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32)" /> for more information.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.RequestedPosition">
      <summary>
            Gets or sets the requested position on a ToolBarHost. This is the top position when orientation is vertical, else the left position.
            <see cref="M:Qios.DevSuite.Components.QMainMenu.DockMainMenu(Qios.DevSuite.Components.QToolBarHost,System.Int32,System.Int32)" /> for more information.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.IsFloating">
      <summary>
            Gets whether the QMainMenu is Floating on a QToolBarForm.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.Text">
      <summary>
            Overridden. Gets or sets the Text of the QMainMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.Anchor">
      <summary>
            Overridden. Gets or sets the AnchorStyles.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.Dock">
      <summary>
            Overridden. Gets or Sets the Dock property of the QMainMenu. A MainMenu cannot be docked
            <b>Fill</b>.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.ChildMenuConfiguration">
      <summary>
            Gets or sets the configuration for the child menus opened from this QMainMenu.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.BackColorPropertyName">
      <summary>
            Overridden. Returns the MainMenuBackground1 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.BackColor2PropertyName">
      <summary>
            Overridden. Returns the MainMenuBackground2 from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QMainMenu.BorderColorPropertyName">
      <summary>
            Overridden. Returns the MainMenuBorder from <see cref="T:Qios.DevSuite.Components.QColorScheme" />.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockPosition">
      <summary>
            Is used by <see cref="T:Qios.DevSuite.Components.QDockingWindow" /> and <see cref="T:Qios.DevSuite.Components.QDockContainer" /> to determine
            where the control is docked on the form.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockPosition.None">
      <summary>
            No DockPosition
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockPosition.Top">
      <summary>
            Top DockPosition
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockPosition.Left">
      <summary>
            Left DockPosition
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockPosition.Bottom">
      <summary>
            Bottom DockPosition
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QDockPosition.Right">
      <summary>
            Right DockPosition
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QDockException">
      <summary>
            QDockException is an exception class for the <see cref="T:Qios.DevSuite.Components.QDockControl" />.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockException.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockException.#ctor(System.String)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockException.#ctor(System.String,System.Exception)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QDockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMenuItemBackgroundPainter">
      <summary>
            Defines the painter that is responsible for painting the background of a <see cref="T:Qios.DevSuite.Components.QCompositeMenuItem" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemBackgroundPainter.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemBackgroundPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Paints the background. It paints a possible separator between the dropdown area and the rest of the item.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMenuItemForegroundPainter">
      <summary>
            Defines the painter that is responsible for painting the background of a <see cref="T:Qios.DevSuite.Components.QCompositeMenuItem" /></summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemForegroundPainter.#ctor">
      <summary>
            Constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QCompositeMenuItemForegroundPainter.PaintObject(Qios.DevSuite.Components.IQPart,Qios.DevSuite.Components.QPartPaintContext)">
      <summary>
            Overridden. Paints the background. It paints a possible separator between the dropdown area and the rest of the item.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QCompositeMenuItemContentType">
      <summary>
            Defines the type of content for a <see cref="T:Qios.DevSuite.Components.QCompositeMenuItem" /></summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemContentType.Title">
      <summary>
            The content is filled with a title.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QCompositeMenuItemContentType.Control">
      <summary>
            The content is filled with a control
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QHotkeyWindowConfiguration">
      <summary>
            Contains configuration properties for the HotkeyWindow that is shown when ALT is pressed for a QRibbon.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHotkeyWindowConfiguration.PropPadding">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHotkeyWindowConfiguration.PropAppearance">
      <summary>Index of the property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHotkeyWindowConfiguration.CurrentPropertyCount">
      <summary>Contains the count of properties on this class</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHotkeyWindowConfiguration.TotalPropertyCount">
      <summary>Contains the count of the total properties</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QHotkeyWindowConfiguration.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QHotkeyWindowConfiguration.GetRequestedCount">
      <summary>
            Overridden. Gets the requested size for this configuration.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QHotkeyWindowConfiguration.OnConfigurationChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:Qios.DevSuite.Components.QHotkeyWindowConfiguration.ConfigurationChanged" /> event.
            </summary>
    </member>
    <member name="E:Qios.DevSuite.Components.QHotkeyWindowConfiguration.ConfigurationChanged">
      <summary>
            Gets raised when a property of the Configuration is changed.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QHotkeyWindowConfiguration.Padding">
      <summary>
            Contains the padding between the text and the border of the QHotkeyWindow
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QHotkeyWindowConfiguration.Appearance">
      <summary>
            Gets the appearance of the RibbonHotkeyWindow
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QHotkeyWindowAppearance">
      <summary>
            Defines the appearance for the QHotkeyWindow, which is shown when the ALT key is pressed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QHotkeyWindowAppearance.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QHotkeyWindowAppearance.Shape">
      <summary>
            Gets or sets the shape of this appearance.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QHotkeyWindowShowBehavior">
      <summary>
            Defines a show behavior for the QHotkeyWindow
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHotkeyWindowShowBehavior.Automatic">
      <summary>
            The window is shown automatically when ALT is pressed on a QRibbon, ALT is pressed with a Hotkey
            Or a Child window is opened with a hotkey.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QHotkeyWindowShowBehavior.Never">
      <summary>
            Window is never shown.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartCalculatedProperties">
      <summary>
            Defines the properties that are caclulated of a <see cref="T:Qios.DevSuite.Components.QPart" />. During the layout of a part the various
            properties are set. Therefore you normally don't change values of this class. 
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartCalculatedProperties.EngineStateUnstretchedBeforeConstraints">
      <summary>Defines the index of the EngineState property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartCalculatedProperties.EngineStateTableStorage">
      <summary>Defines the index of the EngineState property</summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartCalculatedProperties.EngineStatePropertyCount">
      <summary>Defines the index of the EngineState property</summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ShouldStretch(System.Boolean)">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ShouldStretch(Qios.DevSuite.Components.QPartDirection)">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ShouldShrink(System.Boolean)">
      <summary>
            Returns whether the part should shrink.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ShouldShrink(Qios.DevSuite.Components.QPartDirection)">
      <summary>
            Returns whether the part should shrink.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetMinimumOuterSize">
      <summary>
            Gets the part minimum outer size. This is the MinimumSize inflated whith the margin when needed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetMinimumInnerSize">
      <summary>
            Gets the part minimum inner size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetMaximumOuterSize">
      <summary>
            Gets the part minimum outer size. This is the Maximum inflated whith the margin when needed.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetMaximumInnerSize">
      <summary>
            Gets the Maximum inner size. This is the maximum deflated with the padding.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetBounds(Qios.DevSuite.Components.QPartBoundsType)">
      <summary>
            Gets the bounds specified by the boundsType.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.HasLayoutFlag(Qios.DevSuite.Components.QPartLayoutFlags)">
      <summary>
            Returns whether the specified flag is applied.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.SetLayoutFlag(Qios.DevSuite.Components.QPartLayoutFlags,System.Boolean)">
      <summary>
            Sets a layout flag to the specified value.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetEngineStatePropertyAsValue(System.Int32,System.ValueType)">
      <summary>
            Gets a specific engine state property casted as a valueType. If the property does not exists it returns defaultValue.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetEngineStateProperty(System.Int32)">
      <summary>
            Gets an engine state property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.SetEngineStateProperty(System.Int32,System.Object)">
      <summary>
            Sets an engineState property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ClearCalculatedSizeProperties">
      <summary>
            Clears the calculated Size properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ClearBoundsProperties">
      <summary>
            Clears the calculated layout properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ClearEngineState">
      <summary>
            Clears the engine state.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ClearAppliedLayoutProperties">
      <summary>
            Cleas the cached layout properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ClearCachedPaintProperties">
      <summary>
            Clears the cached paint properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ApplyMinMaxRules(System.Drawing.Size)">
      <summary>
            Applies the mininum and maximum size rules to the partSize and returns a new size. This doesn't adjust the sizes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ApplyMinMaxRules(System.Drawing.Size,System.Boolean)">
      <summary>
            Applies the mininum and maximum size rules to the partSize and returns a new size. This doesn't adjust the sizes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.ApplyUnstretchedMinimumSize(System.Drawing.Size)">
      <summary>
            Applies the unstretched size rules to the partSize and returns a new size. This doesn't adjust the sizes.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetInnerSizeBasedOnSize(System.Drawing.Size)">
      <summary>
            Calculates the part content size based on the size without setting the size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetInnerSizeBasedOnOuterSize(System.Drawing.Size)">
      <summary>
            Calculates the part content size based on the outer size without setting the size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.GetOuterSizeBasedOnInnerSize(System.Drawing.Size)">
      <summary>
            Calculates the part outer size based on the inner size without setting the size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.SetSizesBasedOnOuterSize(System.Drawing.Size,System.Boolean)">
      <summary>
            Sets the calculated sizes based on the outer size and the part properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.SetSizesBasedOnSize(System.Drawing.Size,System.Boolean)">
      <summary>
            Sets the calculated sizes based on the size and the part properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.SetSizesBasedOnInnerSize(System.Drawing.Size,System.Boolean)">
      <summary>
            Sets the calculated sizes based on the size and the part properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.SetUnstretchedSizesBasedOnInnerSize(System.Drawing.Size)">
      <summary>
            Sets the Unstretched sizes based on the inneSize.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.SetUnstretchedSizesBasedOnSize(System.Drawing.Size)">
      <summary>
            Sets the Unstretched sizes based on the size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.SetUnstretchedSizesBasedOnOuterSize(System.Drawing.Size)">
      <summary>
            Sets the Unstretched sizes based on the outer size.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.SetBoundsBasedOnOuterBounds(System.Drawing.Rectangle)">
      <summary>
            Sets all the bounds properties based on the outer bounds.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.PushCalculatedProperties(Qios.DevSuite.Components.QPartCalculatedProperties)">
      <summary>
            Creates a new QPartcalculatedProperties and pushes the currentProperties to the stack of the new properties.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.QPartCalculatedProperties.PullCalculatedProperties(Qios.DevSuite.Components.QPartCalculatedProperties)">
      <summary>
            Pulls the last properties from the specified properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.Part">
      <summary>
            Returns the part this calculated properties belong to.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.PartIndex">
      <summary>
            Gets the collection index. This property is set to the current index in it's parent collection.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.UnstretchedOuterSize">
      <summary>
            Contains the outer size of the part without any stretching applied to the part or any child part. This can also be refered
            as the 'important size'
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.UnstretchedSize">
      <summary>
            Contains the size of the part without any stretching applied to the part or any child part. This can also be refered
            as the 'important size'
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.UnstretchedInnerSize">
      <summary>
            Contains the inner size of the part without any stretching applied to the part or any child part. This can also be refered
            as the 'important size'
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.ActualContentSize">
      <summary>
            Contains the actual size of the content. Difference between this and the inner size is that no stretch / shrink, min or max rules
            are applied.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.UnstretchedActualContentSize">
      <summary>
            Contains the unstretched actual content size. Difference between this and the unstretched inner size is that no min or max rules are applied.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.Size">
      <summary>
            Contains the calculated Size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.OuterSize">
      <summary>
            Contains the outer size. This is the size including the margin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.InnerSize">
      <summary>
            Contains the inner size. This is the size without the padding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.InnerBounds">
      <summary>
            Contains the inner bounds. This is the bounds woutht the padding.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.Bounds">
      <summary>
            Contains the bounds.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.OuterBounds">
      <summary>
            Contains the bounds. This is the bounds plus margin.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.LayoutFlags">
      <summary>
            Contains flags that indicate which constraints are applied.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.AppliedPadding">
      <summary>
            Gets or sets the total used padding. If this is not set it gets retrieved from the properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.AppliedMargin">
      <summary>
            Gets or sets the total used margin. If this is not set it gets retrieved from the properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.AppliedMinimumSize">
      <summary>
            Gets or sets the used minimum size. If this is not set it gets retrieved from the properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.AppliedMaximumSize">
      <summary>
            Gets or sets the used maximum size. If this is not set it gets retrieved from the properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.AppliedOptions">
      <summary>
            Gets or sets the used options. If this is not set it gets retrieved from the properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.CachedScrollOffset">
      <summary>
            Gets the cached scroll offset. this is cached in the paint properties.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.CachedScrollCorrectedBounds">
      <summary>
            Gets the cached scroll corrected bounds. This is the bounds with scroll offset calculated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.CachedScrollCorrectedInnerBounds">
      <summary>
            Gets the cached scroll corrected inner bounds. This is the inner bounds with scroll offset calculated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.CachedScrollCorrectedOuterBounds">
      <summary>
            Gets the cached scroll corrected outer bounds. This is the outer bounds with scroll offset calculated.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.CachedParentClipRegion">
      <summary>
            Gets the cached parent clip, this is the region this part is clipped in.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.ShouldStretchHorizontal">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.ShouldStretchVertical">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.ShouldShrinkHorizontal">
      <summary>
            Returns whether the part should shrink.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.ShouldShrinkVertical">
      <summary>
            Returns whether the part should stretch.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.IsSetToMinimumWidth">
      <summary>
            Gets whether the part is set to minimum size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.IsSetToMinimumHeight">
      <summary>
            Gets whether the part is set to minimum size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.IsSetToMaximumWidth">
      <summary>
            Gets whether the part is set to maximum size.
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.QPartCalculatedProperties.IsSetToMaximumHeight">
      <summary>
            Gets whether the part is set to maximum size.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QPartLayoutFlags">
      <summary>
            Contains flags for a <see cref="T:Qios.DevSuite.Components.IQPart" /> that should be remembered when contraints are applied.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutFlags.None">
      <summary>
            No flags.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutFlags.WidthConstraintApplied">
      <summary>
            The constraining of the width is done.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutFlags.HeightConstraintApplied">
      <summary>
            The constraining of the height is done.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutFlags.IsTableRow">
      <summary>
            Indicates that the part is a tableRow.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutFlags.IsTableCell">
      <summary>
            Indicates that the part is a tableCell.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QPartLayoutFlags.OverriddenVisible">
      <summary>
            Indicates that for a layoutstage, the part is overridden visible. (This is for example used by calculating table cells).
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QSizingGripStyle">
      <summary>
            This enumeration is used by Controls to define the type of SizingGrip that is drawn.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingGripStyle.Dots">
      <summary>
            The grip is XP style dots.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QSizingGripStyle.Lines">
      <summary>
            The grip is drawn as lines.
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QKeyState">
      <summary>
            The QKeyState is used by several controls to indicate the state of a key.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QKeyState.None">
      <summary>
            The key has no state
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QKeyState.Pressed">
      <summary>
            The key is Pressed
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QKeyState.Handled">
      <summary>
            The key is Handled
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.QImageAlign">
      <summary>
            The QImageAlign enumeration defines how an Image should be aligned.
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.RepeatedVertical">
      <summary>
            Repeats the Image vertically
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.RepeatedHorizontal">
      <summary>
            Repeats the Image horizontally
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.RepeatedBoth">
      <summary>
            Repeats the Image Vertically and Horizontally
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.Stretched">
      <summary>
            Stretches the Image
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.Centered">
      <summary>
            Centers the Image
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.TopLeft">
      <summary>
            Aligns the Image on the TopLeft corner
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.CenterLeft">
      <summary>
            Aligns the Image on the Left side, centered
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.BottomLeft">
      <summary>
            Aligns the Image on the BottonLeft corner
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.TopRight">
      <summary>
            Aligns the Image on the TopRight corner
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.CenterRight">
      <summary>
            Aligns the Image On the Right side, centered 
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.BottomRight">
      <summary>
            Aligns the Image on the BottomRight corner
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.TopMiddle">
      <summary>
            Aligns the Image on the on Top in the middle
            </summary>
    </member>
    <member name="F:Qios.DevSuite.Components.QImageAlign.BottomMiddle">
      <summary>
            Aligns the Image on the Bottom in the middle
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QShapedWindowControlContainerDesigner">
      <summary>
            Defines a ParentControlDesigner for the <see cref="T:Qios.DevSuite.Components.QShapedWindowControlContainer" /> type.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QShapedWindowControlContainerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
            Initializes the designer
            </summary>
      <param name="component">Component to design</param>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapedWindowControlContainerDesigner.DrawGrid">
      <summary>
            Gets or sets if the grid should be drawn
            </summary>
    </member>
    <member name="P:Qios.DevSuite.Components.Design.QShapedWindowControlContainerDesigner.SelectionRules">
      <summary>
            Gets the selection rules
            </summary>
    </member>
    <member name="T:Qios.DevSuite.Components.Design.QBalloonExtender">
      <summary>
            Is used to show the QBalloon property in the properties list for all the other Controls on the site.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonExtender.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonExtender.CanExtend(System.Object)">
      <summary>
            Implements the IExtenderProvider.CanExtend method, indicates which object it can extend
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonExtender.Merge(Qios.DevSuite.Components.Design.QBalloonExtender)">
      <summary>
            Merges this extender with the provided extender.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonExtender.GetControls(Qios.DevSuite.Components.QBalloon)">
      <summary>
            Returns the components that are attached to QBalloon.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonExtender.GetQBalloonMarkupText(System.ComponentModel.IComponent)">
      <summary>
            Provides the QBalloonText getter for the extended QBalloon property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonExtender.GetQBalloon(System.ComponentModel.IComponent)">
      <summary>
            Provides the QBalloon getter for the extended QBalloon property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonExtender.SetQBalloon(System.ComponentModel.IComponent,Qios.DevSuite.Components.QBalloon)">
      <summary>
            Provides the QBalloon setter for the extended QBalloon property.
            </summary>
    </member>
    <member name="M:Qios.DevSuite.Components.Design.QBalloonExtender.SetQBalloonMarkupText(System.ComponentModel.IComponent,System.String)">
      <summary>
            Provides the QBalloonText setter for the extended QBalloon property.
            </summary>
    </member>
  </members>
</doc>